import Basket from '../models/Basket.js';

class basketController {
  async create(req, res) {
    // console.log(req.body);
    // console.log(req.user.id);
    //создание корзины и добавление устройства или добаление устройства при существующей корзине
    try {
      const userCart = await Basket.findOne({ owner: req.user.id });
      // console.log(userCart);
      if (!userCart) {
        const deviceId = [];
        deviceId.push(req.body);
        // console.log(deviceId);
        const cart = await Basket.create({
          owner: req.user.id,
          product: deviceId,
        });
        res.json(cart);
      } else {
        const { product, _id } = userCart;
        // console.log(device);
        product.push(req.body);
        // console.log(device);
        const cart = await Basket.findByIdAndUpdate(
          _id,
          { product: product },
          {
            new: true,
          }
        );
        res.json(cart);
      }
    } catch (e) {
      res.status(500).json(e);
    }
  }
  async getBasket(req, res) {
    try {
      const userCart = await Basket.findOne({ owner: req.user.id });
      res.json(userCart);
    } catch (e) {
      res.status(500).json(e);
    }
  }

  async delete(req, res) {
    try {
      const { id } = req.params;

      if (!id) {
        res.status(400).json({ massage: 'Id не указан' });
      }
      // удаление вложенного объекта устройства
      const deleteDevice = await Basket.updateOne(
        {},
        { $pull: { product: { _id: id } } }
      );
      return res.json(deleteDevice);
    } catch (e) {
      res.status(500).json(e);
    }
  }
}

export default new basketController();
