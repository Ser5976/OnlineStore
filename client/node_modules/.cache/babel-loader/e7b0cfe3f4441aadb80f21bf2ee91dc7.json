{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\components\\\\Logout.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n//-----------------------------------------\nconst Logout = ({\n  setLogout,\n  //очистка авторизации в сторе\n  setClearCart //очистка корзины\n\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  }; //очистка\n\n\n  const cleaning = () => {\n    //удаление данных авторизации из стора\n    setLogout(); //очистка корзины\n\n    setClearCart(); // удаление данных из sessionStorage\n\n    sessionStorage.removeItem('token');\n    sessionStorage.removeItem('email');\n    sessionStorage.removeItem('role'); //на главную страницу\n\n    history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"account of current user\",\n      \"aria-controls\": \"menu-appbar\",\n      \"aria-haspopup\": \"true\",\n      onClick: handleMenu,\n      color: \"inherit\",\n      children: /*#__PURE__*/_jsxDEV(AccountCircleOutlinedIcon, {\n        style: {\n          fontSize: '35px',\n          color: 'black'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"menu-appbar\",\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      keepMounted: true,\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      open: open,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: cleaning,\n        children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Logout, \"rPV2B6xweC6TRDKQ1cD3xc5mi/U=\", false, function () {\n  return [useHistory];\n});\n\n_c = Logout;\nexport default Logout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/components/Logout.tsx"],"names":["React","IconButton","AccountCircleOutlinedIcon","MenuItem","Menu","useHistory","Logout","setLogout","setClearCart","history","anchorEl","setAnchorEl","useState","open","Boolean","handleMenu","event","currentTarget","handleClose","cleaning","sessionStorage","removeItem","push","fontSize","color","vertical","horizontal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,yBAAP,MAAsC,0CAAtC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;;;;AAQA;AAEA,MAAMC,MAA2B,GAAG,CAAC;AACnCC,EAAAA,SADmC;AACxB;AACXC,EAAAA,YAFmC,CAErB;;AAFqB,CAAD,KAG9B;AAAA;;AACJ,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BX,KAAK,CAACY,QAAN,CAAmC,IAAnC,CAAhC;AACA,QAAMC,IAAI,GAAGC,OAAO,CAACJ,QAAD,CAApB;;AAEA,QAAMK,UAAU,GAAIC,KAAD,IAA0C;AAC3DL,IAAAA,WAAW,CAACK,KAAK,CAACC,aAAP,CAAX;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD,CATI,CAYJ;;;AACA,QAAMQ,QAAQ,GAAG,MAAM;AACrB;AACAZ,IAAAA,SAAS,GAFY,CAGrB;;AACAC,IAAAA,YAAY,GAJS,CAKrB;;AACAY,IAAAA,cAAc,CAACC,UAAf,CAA0B,OAA1B;AACAD,IAAAA,cAAc,CAACC,UAAf,CAA0B,OAA1B;AACAD,IAAAA,cAAc,CAACC,UAAf,CAA0B,MAA1B,EARqB,CASrB;;AACAZ,IAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACD,GAXD;;AAaA,sBACE;AAAA,4BACE,QAAC,UAAD;AACE,oBAAW,yBADb;AAEE,uBAAc,aAFhB;AAGE,uBAAc,MAHhB;AAIE,MAAA,OAAO,EAAEP,UAJX;AAKE,MAAA,KAAK,EAAC,SALR;AAAA,6BAOE,QAAC,yBAAD;AACE,QAAA,KAAK,EAAE;AAAEQ,UAAAA,QAAQ,EAAE,MAAZ;AAAoBC,UAAAA,KAAK,EAAE;AAA3B;AADT;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,IAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,QAAQ,EAAEd,QAFZ;AAGE,MAAA,YAAY,EAAE;AACZe,QAAAA,QAAQ,EAAE,KADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OAHhB;AAOE,MAAA,WAAW,MAPb;AAQE,MAAA,eAAe,EAAE;AACfD,QAAAA,QAAQ,EAAE,KADK;AAEfC,QAAAA,UAAU,EAAE;AAFG,OARnB;AAYE,MAAA,IAAI,EAAEb,IAZR;AAaE,MAAA,OAAO,EAAEK,WAbX;AAAA,6BAeE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AAgCD,CA7DD;;GAAMb,M;UAIYD,U;;;KAJZC,M;AA8DN,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { SetLogoutActionType } from '../store/reducer/authReducer';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { SetClearCartActionType } from '../store/reducer/basketReducer';\r\n\r\n//типизация--------------------------------\r\ntype PropsType = {\r\n  setLogout: () => SetLogoutActionType;\r\n  setClearCart: () => SetClearCartActionType;\r\n};\r\n//-----------------------------------------\r\n\r\nconst Logout: React.FC<PropsType> = ({\r\n  setLogout, //очистка авторизации в сторе\r\n  setClearCart, //очистка корзины\r\n}) => {\r\n  const history = useHistory();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  //очистка\r\n  const cleaning = () => {\r\n    //удаление данных авторизации из стора\r\n    setLogout();\r\n    //очистка корзины\r\n    setClearCart();\r\n    // удаление данных из sessionStorage\r\n    sessionStorage.removeItem('token');\r\n    sessionStorage.removeItem('email');\r\n    sessionStorage.removeItem('role');\r\n    //на главную страницу\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        aria-label=\"account of current user\"\r\n        aria-controls=\"menu-appbar\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleMenu}\r\n        color=\"inherit\"\r\n      >\r\n        <AccountCircleOutlinedIcon\r\n          style={{ fontSize: '35px', color: 'black' }}\r\n        />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"menu-appbar\"\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        keepMounted\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={cleaning}>Выйти</MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\nexport default Logout;\r\n"]},"metadata":{},"sourceType":"module"}