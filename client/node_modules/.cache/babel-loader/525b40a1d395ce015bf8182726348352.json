{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\pages\\\\AddDevicesContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport QueuePlayNextIcon from '@material-ui/icons/QueuePlayNext';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n//типизиция всего стора\nimport FormDevice from '../components/FormDevice';\nimport { connect } from 'react-redux'; //типизация--------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//-----------------------------------------\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    height: '100vh'\n  },\n  paper: {\n    margin: theme.spacing(4, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  }\n}));\n\nconst AddDevicesContainer = ({\n  types,\n  brands\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    component: \"main\",\n    justifyContent: \"center\",\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          children: /*#__PURE__*/_jsxDEV(QueuePlayNextIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0443\\u0441\\u0442\\u0440\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormDevice, {\n          types: types,\n          brands: brands\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddDevicesContainer, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddDevicesContainer;\n\nconst mapStateToProps = state => {\n  return {\n    types: state.devices.types,\n    brands: state.devices.brands\n  };\n};\n\nexport default connect(mapStateToProps, {})(AddDevicesContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddDevicesContainer\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/pages/AddDevicesContainer.tsx"],"names":["React","Grid","Avatar","Typography","Box","CssBaseline","QueuePlayNextIcon","makeStyles","createStyles","FormDevice","connect","useStyles","theme","root","height","paper","margin","spacing","display","flexDirection","alignItems","justifyContent","avatar","backgroundColor","palette","secondary","main","AddDevicesContainer","types","brands","classes","mapStateToProps","state","devices"],"mappings":";;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,0BAAzC;AACgD;AAChD,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;;AAQA;AACA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,IAC3BJ,YAAY,CAAC;AACXK,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE;AADJ,GADK;AAIXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiB,CAAjB,CADH;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,UAAU,EAAE,QAJP;AAKLC,IAAAA,cAAc,EAAE;AALX,GAJI;AAWXC,EAAAA,MAAM,EAAE;AACNN,IAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADF;AAENM,IAAAA,eAAe,EAAEX,KAAK,CAACY,OAAN,CAAcC,SAAd,CAAwBC;AAFnC;AAXG,CAAD,CADc,CAA5B;;AAmBA,MAAMC,mBAAwC,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAuB;AAAA;;AACtE,QAAMC,OAAO,GAAGnB,SAAS,EAAzB;AAEA,sBACE,QAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,cAAc,EAAC,QAHjB;AAIE,IAAA,SAAS,EAAEmB,OAAO,CAACjB,IAJrB;AAAA,4BAME,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAEiB,OAAO,CAACf,KAAxB;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAEe,OAAO,CAACR,MAA3B;AAAA,iCACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AAAY,UAAA,SAAS,EAAC,IAAtB;AAA2B,UAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAEM,KAAnB;AAA0B,UAAA,MAAM,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAxBD;;GAAMF,mB;UACYhB,S;;;KADZgB,mB;;AAyBN,MAAMI,eAAe,GAAIC,KAAD,IAA+C;AACrE,SAAO;AACLJ,IAAAA,KAAK,EAAEI,KAAK,CAACC,OAAN,CAAcL,KADhB;AAELC,IAAAA,MAAM,EAAEG,KAAK,CAACC,OAAN,CAAcJ;AAFjB,GAAP;AAID,CALD;;AAMA,eAAenB,OAAO,CAMpBqB,eANoB,EAOpB,EAPoB,CAAP,CAQbJ,mBARa,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport QueuePlayNextIcon from '@material-ui/icons/QueuePlayNext';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport { RootStateType } from '../store/store'; //типизиция всего стора\r\nimport FormDevice from '../components/FormDevice';\r\nimport { TypeDeviceType, BrandType } from '../store/reducer/deviceReducer';\r\nimport { connect } from 'react-redux';\r\n\r\n//типизация--------------------------------\r\ntype MapStateToPropsType = {\r\n  types: TypeDeviceType[];\r\n  brands: BrandType[];\r\n};\r\ntype MapDispathPropsType = {};\r\n\r\ntype PropsType = MapDispathPropsType & MapStateToPropsType;\r\n//-----------------------------------------\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      height: '100vh',\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(4, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n  })\r\n);\r\n\r\nconst AddDevicesContainer: React.FC<PropsType> = ({ types, brands }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      component=\"main\"\r\n      justifyContent=\"center\"\r\n      className={classes.root}\r\n    >\r\n      <CssBaseline />\r\n      <Grid item>\r\n        <Box className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <QueuePlayNextIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Добавить устройства\r\n          </Typography>\r\n          <FormDevice types={types} brands={brands} />\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n  return {\r\n    types: state.devices.types,\r\n    brands: state.devices.brands,\r\n  };\r\n};\r\nexport default connect<\r\n  MapStateToPropsType,\r\n  MapDispathPropsType,\r\n  unknown, // личные пропсы\r\n  RootStateType\r\n>(\r\n  mapStateToProps,\r\n  {}\r\n)(AddDevicesContainer);\r\n"]},"metadata":{},"sourceType":"module"}