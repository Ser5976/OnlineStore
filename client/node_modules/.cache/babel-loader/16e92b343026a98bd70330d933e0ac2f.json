{"ast":null,"code":"import axios from 'axios';\n//типизация всего стора\nimport { ModelUrls } from '../constants/url';\nimport { setAddProductCart, setErrorBasket } from '../store/reducer/basketReducer'; //типизация товара добавляемого в карзину\n\n// запрос на корзину\nexport const getProductCart = () => {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await axios.get(ModelUrls.BASKET, {\n        headers: {\n          Authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n      dispatch(setAddProductCart(data.basket, data.totalCount, data.totalPrice));\n      dispatch(setErrorBasket(false)); // console.log(data);\n    } catch (e) {\n      console.log(e);\n      dispatch(setErrorBasket(true));\n    }\n  };\n}; // добавление товара\n\nexport const addProductCart = product => {\n  return async dispatch => {\n    try {\n      await axios.post(ModelUrls.BASKET, product, {\n        headers: {\n          Authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n      dispatch(getProductCart());\n    } catch (e) {\n      console.log(e);\n    }\n  };\n}; //удаление товара из корзины\n\nexport const deleteProductCart = id => {\n  return async dispatch => {\n    try {\n      await axios.delete(`${ModelUrls.BASKET}/${id}`, {\n        headers: {\n          Authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n      dispatch(getProductCart());\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/action/basketAction.ts"],"names":["axios","ModelUrls","setAddProductCart","setErrorBasket","getProductCart","dispatch","data","get","BASKET","headers","Authorization","sessionStorage","getItem","basket","totalCount","totalPrice","e","console","log","addProductCart","product","post","deleteProductCart","id","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEgD;AAChD,SAASC,SAAT,QAA0B,kBAA1B;AACA,SACEC,iBADF,EAGEC,cAHF,QAIO,gCAJP,C,CAKA;;AAeA;AACA,OAAO,MAAMC,cAAc,GAAG,MAAiB;AAC7C,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMN,KAAK,CAACO,GAAN,CAAUN,SAAS,CAACO,MAApB,EAA4B;AACjDC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAgC;AADlD;AADwC,OAA5B,CAAvB;AAKAP,MAAAA,QAAQ,CACNH,iBAAiB,CAACI,IAAI,CAACO,MAAN,EAAcP,IAAI,CAACQ,UAAnB,EAA+BR,IAAI,CAACS,UAApC,CADX,CAAR;AAGAV,MAAAA,QAAQ,CAACF,cAAc,CAAC,KAAD,CAAf,CAAR,CATE,CAUF;AACD,KAXD,CAWE,OAAOa,CAAP,EAAe;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAX,MAAAA,QAAQ,CAACF,cAAc,CAAC,IAAD,CAAf,CAAR;AACD;AACF,GAhBD;AAiBD,CAlBM,C,CAoBP;;AACA,OAAO,MAAMgB,cAAc,GAAIC,OAAD,IAAqC;AACjE,SAAO,MAAOf,QAAP,IAAoB;AACzB,QAAI;AACF,YAAML,KAAK,CAACqB,IAAN,CAAWpB,SAAS,CAACO,MAArB,EAA6BY,OAA7B,EAAsC;AAC1CX,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAgC;AADlD;AADiC,OAAtC,CAAN;AAKAP,MAAAA,QAAQ,CAACD,cAAc,EAAf,CAAR;AACD,KAPD,CAOE,OAAOY,CAAP,EAAe;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,GAXD;AAYD,CAbM,C,CAeP;;AACA,OAAO,MAAMM,iBAAiB,GAAIC,EAAD,IAA2B;AAC1D,SAAO,MAAOlB,QAAP,IAAoB;AACzB,QAAI;AACF,YAAML,KAAK,CAACwB,MAAN,CAAc,GAAEvB,SAAS,CAACO,MAAO,IAAGe,EAAG,EAAvC,EAA0C;AAC9Cd,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAgC;AADlD;AADqC,OAA1C,CAAN;AAKAP,MAAAA,QAAQ,CAACD,cAAc,EAAf,CAAR;AACD,KAPD,CAOE,OAAOY,CAAP,EAAe;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,GAXD;AAYD,CAbM","sourcesContent":["import axios from 'axios';\r\nimport { ThunkAction } from 'redux-thunk'; // для типизации санки\r\nimport { RootStateType } from '../store/store'; //типизация всего стора\r\nimport { ModelUrls } from '../constants/url';\r\nimport {\r\n  setAddProductCart,\r\n  SetActionType,\r\n  setErrorBasket,\r\n} from '../store/reducer/basketReducer';\r\n//типизация товара добавляемого в карзину\r\nexport type ProductType = {\r\n  name: string;\r\n  price: number | null;\r\n  picture: string[];\r\n  description: string | undefined;\r\n  id: string | undefined;\r\n};\r\n// типизация санки\r\nexport type ThunkType = ThunkAction<\r\n  Promise<void>,\r\n  RootStateType,\r\n  unknown, //extraArgument\r\n  SetActionType //типизация экшенов корзины\r\n>;\r\n// запрос на корзину\r\nexport const getProductCart = (): ThunkType => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const { data } = await axios.get(ModelUrls.BASKET, {\r\n        headers: {\r\n          Authorization: `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      dispatch(\r\n        setAddProductCart(data.basket, data.totalCount, data.totalPrice)\r\n      );\r\n      dispatch(setErrorBasket(false));\r\n      // console.log(data);\r\n    } catch (e: any) {\r\n      console.log(e);\r\n      dispatch(setErrorBasket(true));\r\n    }\r\n  };\r\n};\r\n\r\n// добавление товара\r\nexport const addProductCart = (product: ProductType): ThunkType => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await axios.post(ModelUrls.BASKET, product, {\r\n        headers: {\r\n          Authorization: `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      dispatch(getProductCart());\r\n    } catch (e: any) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n\r\n//удаление товара из корзины\r\nexport const deleteProductCart = (id: string): ThunkType => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await axios.delete(`${ModelUrls.BASKET}/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${sessionStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      dispatch(getProductCart());\r\n    } catch (e: any) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}