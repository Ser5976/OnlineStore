{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\components\\\\TypeBarDelete.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\n//типизация\nimport TypeListDelete from './TypeListDelete';\nimport BrandListDelete from './BrandListDelete'; //----типизация пропсов----\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//-------------------------\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 20,\n    padding: '0px 5px'\n  },\n  products: {\n    paddingLeft: theme.spacing(2),\n    marginBottom: 25\n  },\n  activProducts: {\n    paddingLeft: theme.spacing(2),\n    marginBottom: 25,\n    backgroundColor: '#e0e0e0'\n  },\n  listType: {\n    paddingLeft: theme.spacing(5)\n  },\n  activListType: {\n    paddingLeft: theme.spacing(5),\n    backgroundColor: '#e0e0e0'\n  },\n  listBrand: {\n    paddingLeft: theme.spacing(9),\n    color: '#9e9e9e'\n  },\n  activListBrand: {\n    color: theme.palette.primary.main\n  }\n}));\n\nconst TypeBarDelete = ({\n  types,\n  //типы товаров\n  brands,\n  // брынды\n  isFetchErrorBrands,\n  //ошибка загрузки брэндов\n  setTypeId,\n  // запись типа товара в стейт\n  setBrandId,\n  // запись брэнда товара в стейт\n  removeType,\n  // удаление типа товара\n  removeBrand,\n  // удаление брэнда товара\n  setCategory // изменение категории\n\n}) => {\n  _s();\n\n  const classes = useStyles(); //создаём объект с булевыми значениями для управления элементами списка(открытие закрытие)(чтобы реагировать на каждый элемент)\n\n  let objType = {};\n\n  for (let i = 0; i < types.length; i++) {\n    objType[i] = false; // console.log(objType);\n  }\n\n  const [open, setOpen] = useState(objType); // открытие вложенного списа\n\n  const [activType, setActivType] = useState(null); // выделение типа\n\n  const [activBrand, setActivBrand] = useState(null); //выделение бренда\n\n  const [allDevice, setAllDevice] = useState(true); //выделение всех товаров\n  // console.log(open);\n  // выбор типа,открытие  вложенного спиская,снятие выбранного брэнда\n\n  const handleType = index => {\n    setActivType(index);\n    setOpen({ ...open,\n      [index]: !open[index]\n    }); //изменяем булевое значение для каждого элемента\n\n    setActivBrand(null); // снятие выбранного бренда\n  }; // выбор брэнда\n\n\n  const handleBrand = (id, index) => {\n    setActivBrand(id);\n    setActivType(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      component: \"nav\",\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        className: allDevice ? classes.activProducts : classes.products,\n        onClick: () => {\n          setTypeId(null); //удаление из стейта существующего типа\n\n          setBrandId(null); // удаление из стейта существующего брэнда\n\n          setOpen(objType); //закрытие списка\n\n          setActivType(null); //удаление выделения типа\n\n          setAllDevice(true); //выделение всех товаров\n\n          setCategory('Все товары');\n        },\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"\\u0412\\u0441\\u0435 \\u0442\\u043E\\u0432\\u0430\\u0440\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      component: \"nav\",\n      className: classes.root,\n      children: types.map((type, indexType) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            className: activType === indexType ? classes.activListType : classes.listType,\n            onClick: () => {\n              handleType(indexType); //управление типом\n\n              setTypeId(type._id); //запись в стейт выбранного типа\n\n              setBrandId(null); // удаление из стейта существующего брэнда\n\n              setAllDevice(false); // удаление выделения всех товаров\n\n              setCategory(type.name);\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: type.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), open[indexType] ? /*#__PURE__*/_jsxDEV(ExpandLess, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 36\n            }, this) : /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 53\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: open[indexType],\n            timeout: \"auto\",\n            unmountOnExit: true,\n            children: /*#__PURE__*/_jsxDEV(List, {\n              component: \"div\",\n              children: type.brands.map(brand => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(ListItem, {\n                    button: true,\n                    className: classes.listBrand,\n                    onClick: () => {\n                      handleBrand(brand._id, indexType); //управление брэндом\n\n                      setTypeId(type._id); //запись в стейт выбранного типа\n\n                      setBrandId(brand._id); //запись в стейт выбранного брэнда\n                    },\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      disableTypography: true,\n                      className: activBrand === brand._id && activType === indexType ? classes.activListBrand : undefined,\n                      primary: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"subtitle1\",\n                        children: brand.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 164,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 25\n                  }, this)\n                }, brand._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, type._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TypeListDelete, {\n      types: types,\n      removeType: removeType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BrandListDelete, {\n      brands: brands,\n      removeBrand: removeBrand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TypeBarDelete, \"FvZEiZEOSYLT7W4NS58aMs/pcNs=\", false, function () {\n  return [useStyles];\n});\n\n_c = TypeBarDelete;\nexport default TypeBarDelete;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypeBarDelete\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/components/TypeBarDelete.tsx"],"names":["React","useState","makeStyles","List","Typography","ListItem","ListItemText","ExpandLess","ExpandMore","Collapse","TypeListDelete","BrandListDelete","useStyles","theme","root","marginTop","padding","products","paddingLeft","spacing","marginBottom","activProducts","backgroundColor","listType","activListType","listBrand","color","activListBrand","palette","primary","main","TypeBarDelete","types","brands","isFetchErrorBrands","setTypeId","setBrandId","removeType","removeBrand","setCategory","classes","objType","i","length","open","setOpen","activType","setActivType","activBrand","setActivBrand","allDevice","setAllDevice","handleType","index","handleBrand","id","map","type","indexType","_id","name","brand","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport {\r\n  TypeDeviceType,\r\n  BrandType,\r\n  setTypeIdActionType,\r\n  setBrandIdActionType,\r\n} from '../store/reducer/deviceReducer'; //типизация\r\nimport TypeListDelete from './TypeListDelete';\r\nimport BrandListDelete from './BrandListDelete';\r\n\r\n//----типизация пропсов----\r\ntype PropsType = {\r\n  types: TypeDeviceType[];\r\n  brands: BrandType[];\r\n  isFetchErrorBrands: boolean;\r\n  setTypeId: (data: string | null) => setTypeIdActionType;\r\n  setBrandId: (data: string | null) => setBrandIdActionType;\r\n  removeType: (id: string) => void;\r\n  removeBrand: (id: string) => void;\r\n  setCategory: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n//-------------------------\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    marginTop: 20,\r\n    padding: '0px 5px',\r\n  },\r\n  products: { paddingLeft: theme.spacing(2), marginBottom: 25 },\r\n  activProducts: {\r\n    paddingLeft: theme.spacing(2),\r\n    marginBottom: 25,\r\n    backgroundColor: '#e0e0e0',\r\n  },\r\n  listType: { paddingLeft: theme.spacing(5) },\r\n  activListType: { paddingLeft: theme.spacing(5), backgroundColor: '#e0e0e0' },\r\n  listBrand: {\r\n    paddingLeft: theme.spacing(9),\r\n    color: '#9e9e9e',\r\n  },\r\n  activListBrand: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst TypeBarDelete: React.FC<PropsType> = ({\r\n  types, //типы товаров\r\n  brands, // брынды\r\n  isFetchErrorBrands, //ошибка загрузки брэндов\r\n  setTypeId, // запись типа товара в стейт\r\n  setBrandId, // запись брэнда товара в стейт\r\n  removeType, // удаление типа товара\r\n  removeBrand, // удаление брэнда товара\r\n  setCategory, // изменение категории\r\n}) => {\r\n  const classes = useStyles();\r\n  //создаём объект с булевыми значениями для управления элементами списка(открытие закрытие)(чтобы реагировать на каждый элемент)\r\n  let objType = {} as any;\r\n  for (let i = 0; i < types.length; i++) {\r\n    objType[i] = false;\r\n    // console.log(objType);\r\n  }\r\n\r\n  const [open, setOpen] = useState(objType); // открытие вложенного списа\r\n  const [activType, setActivType] = useState<null | number>(null); // выделение типа\r\n  const [activBrand, setActivBrand] = useState<null | string>(null); //выделение бренда\r\n  const [allDevice, setAllDevice] = useState(true); //выделение всех товаров\r\n  // console.log(open);\r\n  // выбор типа,открытие  вложенного спиская,снятие выбранного брэнда\r\n  const handleType = (index: number) => {\r\n    setActivType(index);\r\n    setOpen({ ...open, [index]: !open[index] }); //изменяем булевое значение для каждого элемента\r\n    setActivBrand(null); // снятие выбранного бренда\r\n  }; // выбор брэнда\r\n  const handleBrand = (id: string, index: number) => {\r\n    setActivBrand(id);\r\n    setActivType(index);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <List component=\"nav\" className={classes.root}>\r\n        <ListItem\r\n          button\r\n          className={allDevice ? classes.activProducts : classes.products}\r\n          onClick={() => {\r\n            setTypeId(null); //удаление из стейта существующего типа\r\n            setBrandId(null); // удаление из стейта существующего брэнда\r\n            setOpen(objType); //закрытие списка\r\n            setActivType(null); //удаление выделения типа\r\n            setAllDevice(true); //выделение всех товаров\r\n            setCategory('Все товары');\r\n          }}\r\n        >\r\n          <ListItemText\r\n            disableTypography\r\n            primary={\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Все товары\r\n              </Typography>\r\n            }\r\n          />\r\n        </ListItem>\r\n      </List>\r\n      <List component=\"nav\" className={classes.root}>\r\n        {types.map((type, indexType) => {\r\n          return (\r\n            <div key={type._id}>\r\n              <ListItem\r\n                button\r\n                className={\r\n                  activType === indexType\r\n                    ? classes.activListType\r\n                    : classes.listType\r\n                }\r\n                onClick={() => {\r\n                  handleType(indexType); //управление типом\r\n                  setTypeId(type._id); //запись в стейт выбранного типа\r\n                  setBrandId(null); // удаление из стейта существующего брэнда\r\n                  setAllDevice(false); // удаление выделения всех товаров\r\n                  setCategory(type.name);\r\n                }}\r\n              >\r\n                <ListItemText\r\n                  disableTypography\r\n                  primary={\r\n                    <Typography variant=\"subtitle1\">{type.name}</Typography>\r\n                  }\r\n                />\r\n                {open[indexType] ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n\r\n              <Collapse in={open[indexType]} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\">\r\n                  {type.brands.map((brand) => {\r\n                    return (\r\n                      <div key={brand._id}>\r\n                        <ListItem\r\n                          button\r\n                          className={classes.listBrand}\r\n                          onClick={() => {\r\n                            handleBrand(brand._id, indexType); //управление брэндом\r\n                            setTypeId(type._id); //запись в стейт выбранного типа\r\n                            setBrandId(brand._id); //запись в стейт выбранного брэнда\r\n                          }}\r\n                        >\r\n                          <ListItemText\r\n                            disableTypography\r\n                            className={\r\n                              activBrand === brand._id &&\r\n                              activType === indexType\r\n                                ? classes.activListBrand\r\n                                : undefined\r\n                            }\r\n                            primary={\r\n                              <Typography variant=\"subtitle1\">\r\n                                {brand.name}\r\n                              </Typography>\r\n                            }\r\n                          />\r\n                        </ListItem>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </List>\r\n              </Collapse>\r\n            </div>\r\n          );\r\n        })}\r\n      </List>\r\n      <TypeListDelete types={types} removeType={removeType} />\r\n      <BrandListDelete brands={brands} removeBrand={removeBrand} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TypeBarDelete;\r\n"]},"metadata":{},"sourceType":"module"}