{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\pages\\\\AddDevicesContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles'; //import Paper from '@material-ui/core/Paper';\n\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport DeviceData from '../components/DeviceData';\nimport DeviceProperty from '../components/DeviceProperty';\nimport DevicePicture from '../components/DevicePicture';\nimport Grid from '@material-ui/core/Grid';\n//типизиция всего стора\nimport { //типизация типов\n//типизация брэндов\nsetAddedDevice //типизация добавленного устройства\n} from '../store/reducer/deviceReducer';\nimport { addDevice } from '../action/deviceAction';\nimport { connect } from 'react-redux'; //типизация--------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//-----------------------------------------\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: 'auto',\n    paddingTop: theme.spacing(7),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(3)\n    }\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5)\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-start'\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  }\n}));\nconst steps = ['Данные о товаре', 'Добавить изображения', 'Добавить новые данные'];\n\nconst AddDevicesContainer = ({\n  types,\n  //типы\n  brands,\n  //брэнды\n  addedDevice,\n  //добавленный девайс\n  setAddedDevice,\n  //запись добавленного девайса в стейт\n  addDevice //добавить устройства в базу данных\n\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const getStepContent = step => {\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(DeviceData, {\n          types: types,\n          brands: brands,\n          handleNext: handleNext,\n          setAddedDevice: setAddedDevice,\n          addedDevice: addedDevice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(DevicePicture, {\n          setAddedDevice: setAddedDevice,\n          addedDevice: addedDevice,\n          handleNext: handleNext,\n          handleBack: handleBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(DeviceProperty, {\n          handleNext: handleNext,\n          setAddedDevice: setAddedDevice,\n          addedDevice: addedDevice,\n          handleBack: handleBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this);\n\n      default:\n        throw new Error('Unknown step');\n    }\n  };\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const appendDevice = () => {\n    const {\n      picture,\n      price,\n      name,\n      typeId,\n      brandId,\n      info\n    } = addedDevice;\n    const formData = new FormData();\n    formData.append('price', price);\n    formData.append('name', name);\n    formData.append('typeId', typeId);\n    formData.append('brandId', brandId);\n    formData.append('info', JSON.stringify(info));\n    picture.forEach(file => {\n      formData.append('files', file);\n    });\n    addDevice(formData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.layout,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        align: \"center\",\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u043E\\u0432\\u0430\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        className: classes.stepper,\n        children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: activeStep === steps.length ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            component: \"main\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              style: {\n                padding: '5px 5px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"primary\",\n                fullWidth: true,\n                style: {\n                  marginBottom: 15,\n                  fontSize: 12\n                },\n                onClick: () => {\n                  setActiveStep(0);\n                },\n                children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              style: {\n                padding: '5px 5px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"primary\",\n                fullWidth: true,\n                style: {\n                  marginBottom: 15,\n                  fontSize: 12\n                },\n                onClick: appendDevice,\n                children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [getStepContent(activeStep), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.buttons,\n            children: activeStep === steps.length - 1 && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\" // onClick={handleNext}\n              ,\n              className: classes.button,\n              children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddDevicesContainer, \"5/ANSN4aidVPv0P4apAyeUUfwXQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddDevicesContainer;\n\nconst mapStateToProps = state => {\n  return {\n    types: state.devices.types,\n    brands: state.devices.brands,\n    addedDevice: state.devices.addedDevice\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setAddedDevice,\n  addDevice\n})(AddDevicesContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddDevicesContainer\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/pages/AddDevicesContainer.tsx"],"names":["React","makeStyles","Stepper","Step","StepLabel","Button","Typography","DeviceData","DeviceProperty","DevicePicture","Grid","setAddedDevice","addDevice","connect","useStyles","theme","layout","width","paddingTop","spacing","marginLeft","marginRight","breakpoints","up","paper","marginTop","marginBottom","padding","stepper","buttons","display","justifyContent","button","steps","AddDevicesContainer","types","brands","addedDevice","classes","activeStep","setActiveStep","useState","getStepContent","step","handleNext","handleBack","Error","appendDevice","picture","price","name","typeId","brandId","info","formData","FormData","append","JSON","stringify","forEach","file","map","label","length","fontSize","mapStateToProps","state","devices"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//import Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeviceData from '../components/DeviceData';\r\nimport DeviceProperty from '../components/DeviceProperty';\r\nimport DevicePicture from '../components/DevicePicture';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { RootStateType } from '../store/store'; //типизиция всего стора\r\nimport {\r\n  TypeDeviceType, //типизация типов\r\n  BrandType, //типизация брэндов\r\n  setAddedDevice, //экшен запись добавленного девайса в стейт\r\n  setAddedDeviceActionType, //типизация экшена\r\n  addedDeviceType, //типизация добавленного устройства\r\n} from '../store/reducer/deviceReducer';\r\nimport { addDevice } from '../action/deviceAction';\r\nimport { connect } from 'react-redux';\r\n\r\n//типизация--------------------------------\r\ntype MapStateToPropsType = {\r\n  types: TypeDeviceType[];\r\n  brands: BrandType[];\r\n  addedDevice: addedDeviceType;\r\n};\r\ntype MapDispathPropsType = {\r\n  setAddedDevice: (data: addedDeviceType) => setAddedDeviceActionType;\r\n  addDevice: (data: addedDeviceType) => void;\r\n};\r\n\r\ntype PropsType = MapDispathPropsType & MapStateToPropsType;\r\n//-----------------------------------------\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  layout: {\r\n    width: 'auto',\r\n    paddingTop: theme.spacing(7),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst steps = [\r\n  'Данные о товаре',\r\n  'Добавить изображения',\r\n  'Добавить новые данные',\r\n];\r\n\r\nconst AddDevicesContainer: React.FC<PropsType> = ({\r\n  types, //типы\r\n  brands, //брэнды\r\n  addedDevice, //добавленный девайс\r\n  setAddedDevice, //запись добавленного девайса в стейт\r\n  addDevice, //добавить устройства в базу данных\r\n}) => {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const getStepContent = (step: number): JSX.Element => {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <DeviceData\r\n            types={types}\r\n            brands={brands}\r\n            handleNext={handleNext}\r\n            setAddedDevice={setAddedDevice}\r\n            addedDevice={addedDevice}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <DevicePicture\r\n            setAddedDevice={setAddedDevice}\r\n            addedDevice={addedDevice}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <DeviceProperty\r\n            handleNext={handleNext}\r\n            setAddedDevice={setAddedDevice}\r\n            addedDevice={addedDevice}\r\n            handleBack={handleBack}\r\n          />\r\n        );\r\n      default:\r\n        throw new Error('Unknown step');\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n  const appendDevice = () => {\r\n    const { picture, price, name, typeId, brandId, info } = addedDevice;\r\n    const formData: any = new FormData();\r\n    formData.append('price', price);\r\n    formData.append('name', name);\r\n    formData.append('typeId', typeId);\r\n    formData.append('brandId', brandId);\r\n    formData.append('info', JSON.stringify(info));\r\n    picture.forEach((file) => {\r\n      formData.append('files', file);\r\n    });\r\n    addDevice(formData);\r\n  };\r\n\r\n  return (\r\n    <main className={classes.layout}>\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\" align=\"center\">\r\n          Добавить товар\r\n        </Typography>\r\n        <Stepper activeStep={activeStep} className={classes.stepper}>\r\n          {steps.map((label) => (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n        <React.Fragment>\r\n          {activeStep === steps.length ? (\r\n            <React.Fragment>\r\n              <Grid container component=\"main\">\r\n                <Grid item xs={12} sm={6} style={{ padding: '5px 5px' }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    style={{ marginBottom: 15, fontSize: 12 }}\r\n                    onClick={() => {\r\n                      setActiveStep(0);\r\n                    }}\r\n                  >\r\n                    Отмена\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} style={{ padding: '5px 5px' }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    style={{ marginBottom: 15, fontSize: 12 }}\r\n                    onClick={appendDevice}\r\n                  >\r\n                    Сохранить\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              {getStepContent(activeStep)}\r\n              <div className={classes.buttons}>\r\n                {activeStep === steps.length - 1 && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    // onClick={handleNext}\r\n                    className={classes.button}\r\n                  >\r\n                    Сохранить\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </React.Fragment>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n  return {\r\n    types: state.devices.types,\r\n    brands: state.devices.brands,\r\n    addedDevice: state.devices.addedDevice,\r\n  };\r\n};\r\nexport default connect<\r\n  MapStateToPropsType,\r\n  MapDispathPropsType,\r\n  unknown, // личные пропсы\r\n  RootStateType\r\n>(mapStateToProps, { setAddedDevice, addDevice })(AddDevicesContainer);\r\n"]},"metadata":{},"sourceType":"module"}