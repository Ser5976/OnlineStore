{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\components\\\\DevicePicture.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardSharpIcon from '@material-ui/icons/ArrowForwardSharp';\nimport ArrowBackSharpIcon from '@material-ui/icons/ArrowBackSharp';\nimport { DropzoneArea } from 'material-ui-dropzone'; // загрузка файлов\n//-----------------------------------------\n// типизация пропсов\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//--------------------------------------------\nconst schema = yup.object().shape({\n  picture: yup.mixed().test('required', 'Необходимо добавить файл', value => {\n    return value && value.length;\n  })\n  /* .test(\"fileSize\", \"The file is too large\", (value, context) => {\r\n    return value && value[0] && value[0].size <= 200000;\r\n  })\r\n  .test(\"type\", \"We only support jpeg\", function (value) {\r\n    return value && value[0] && value[0].type === \"image/jpeg\";\r\n  }), */\n\n});\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: 30\n  },\n  dropzone: {\n    minHeight: 50,\n    border: '0px',\n    '& \t.MuiDropzoneArea-text': {\n      fontSize: '1.00rem'\n    },\n    '& \t.MuiDropzoneArea-icon': {\n      color: '#3f51b5',\n      marginBottom: 25\n    }\n  }\n}));\n\nconst DevicePicture = ({\n  addedDevice,\n  //добавленное устройство\n  setAddedDevice,\n  //запись добавленного устройства в стейт\n  handleNext,\n  // вперёд на следующий степ\n  handleBack // назад на следующий степ\n\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: 'onBlur',\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = data => {\n    //console.log(data);\n    const copyAddedPicture = { ...addedDevice,\n      picture: data.picture\n    };\n    setAddedDevice(copyAddedPicture);\n    handleNext();\n  }; // console.log(errors);\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Controller, {\n      name: \"picture\",\n      control: control,\n      defaultValue: addedDevice.picture,\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(DropzoneArea, { ...field,\n        initialFiles: addedDevice.picture,\n        filesLimit: 7,\n        dropzoneText: \"\\u041F\\u0435\\u0440\\u0435\\u0442\\u0430\\u0449\\u0438\\u0442\\u0435 \\u0441\\u044E\\u0434\\u0430 \\u0444\\u0430\\u0439\\u043B \\u0438\\u043B\\u0438 \\u0449\\u0435\\u043B\\u043A\\u043D\\u0438\\u0442\\u0435\",\n        dropzoneClass: classes.dropzone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), errors.picture && /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h1\",\n      variant: \"subtitle1\",\n      align: \"center\",\n      color: \"error\",\n      children: errors.picture.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttons,\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        style: {\n          color: '#3f51b5'\n        },\n        onClick: handleBack,\n        children: /*#__PURE__*/_jsxDEV(ArrowBackSharpIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        type: \"submit\",\n        style: {\n          color: '#3f51b5'\n        },\n        children: /*#__PURE__*/_jsxDEV(ArrowForwardSharpIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DevicePicture, \"23AscWBOTXZtwadU5tZYoUkxDjs=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = DevicePicture;\nexport default DevicePicture;\n\nvar _c;\n\n$RefreshReg$(_c, \"DevicePicture\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/components/DevicePicture.tsx"],"names":["React","useForm","Controller","makeStyles","yupResolver","yup","Typography","IconButton","ArrowForwardSharpIcon","ArrowBackSharpIcon","DropzoneArea","schema","object","shape","picture","mixed","test","value","length","useStyles","theme","buttons","display","justifyContent","marginTop","dropzone","minHeight","border","fontSize","color","marginBottom","DevicePicture","addedDevice","setAddedDevice","handleNext","handleBack","classes","control","handleSubmit","formState","errors","mode","resolver","onSubmit","data","copyAddedPicture","field","message"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  addedDeviceType, //типизация добавленного устройства\r\n  setAddedDeviceActionType, //типизация экшена\r\n} from '../store/reducer/deviceReducer';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowForwardSharpIcon from '@material-ui/icons/ArrowForwardSharp';\r\nimport ArrowBackSharpIcon from '@material-ui/icons/ArrowBackSharp';\r\nimport { DropzoneArea } from 'material-ui-dropzone'; // загрузка файлов\r\n\r\n//-----------------------------------------\r\n// типизация пропсов\r\ntype PropsType = {\r\n  addedDevice: addedDeviceType;\r\n  setAddedDevice: (data: addedDeviceType) => setAddedDeviceActionType;\r\n  handleNext: () => void;\r\n  handleBack: () => void;\r\n};\r\n//--------------------------------------------\r\nconst schema = yup.object().shape({\r\n  picture: yup.mixed().test('required', 'Необходимо добавить файл', (value) => {\r\n    return value && value.length;\r\n  }),\r\n  /* .test(\"fileSize\", \"The file is too large\", (value, context) => {\r\n    return value && value[0] && value[0].size <= 200000;\r\n  })\r\n  .test(\"type\", \"We only support jpeg\", function (value) {\r\n    return value && value[0] && value[0].type === \"image/jpeg\";\r\n  }), */\r\n});\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginTop: 30,\r\n  },\r\n  dropzone: {\r\n    minHeight: 50,\r\n    border: '0px',\r\n    '& \t.MuiDropzoneArea-text': { fontSize: '1.00rem' },\r\n    '& \t.MuiDropzoneArea-icon': { color: '#3f51b5', marginBottom: 25 },\r\n  },\r\n}));\r\n\r\nconst DevicePicture: React.FC<PropsType> = ({\r\n  addedDevice, //добавленное устройство\r\n  setAddedDevice, //запись добавленного устройства в стейт\r\n  handleNext, // вперёд на следующий степ\r\n  handleBack, // назад на следующий степ\r\n}) => {\r\n  const classes = useStyles();\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: 'onBlur',\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const onSubmit = (data: any) => {\r\n    //console.log(data);\r\n    const copyAddedPicture: addedDeviceType = {\r\n      ...addedDevice,\r\n      picture: data.picture,\r\n    };\r\n    setAddedDevice(copyAddedPicture);\r\n    handleNext();\r\n  };\r\n  // console.log(errors);\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <Controller\r\n        name=\"picture\"\r\n        control={control}\r\n        defaultValue={addedDevice.picture}\r\n        render={({ field }) => (\r\n          <DropzoneArea\r\n            {...field}\r\n            initialFiles={addedDevice.picture}\r\n            filesLimit={7}\r\n            dropzoneText=\"Перетащите сюда файл или щелкните\"\r\n            dropzoneClass={classes.dropzone}\r\n          />\r\n        )}\r\n      />\r\n      {errors.picture && (\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n          color=\"error\"\r\n        >\r\n          {errors.picture.message}\r\n        </Typography>\r\n      )}\r\n      <div className={classes.buttons}>\r\n        <IconButton style={{ color: '#3f51b5' }} onClick={handleBack}>\r\n          <ArrowBackSharpIcon />\r\n        </IconButton>\r\n        <IconButton type=\"submit\" style={{ color: '#3f51b5' }}>\r\n          <ArrowForwardSharpIcon />\r\n        </IconButton>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default DevicePicture;\r\n"]},"metadata":{},"sourceType":"module"}