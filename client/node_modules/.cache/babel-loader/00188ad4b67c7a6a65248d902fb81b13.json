{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\components\\\\TypeBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//-------------------------\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 20,\n    padding: '0px 5px'\n  },\n  listType: {\n    paddingLeft: theme.spacing(5)\n  },\n  activListType: {\n    paddingLeft: theme.spacing(5),\n    backgroundColor: '#e0e0e0'\n  },\n  listBrand: {\n    paddingLeft: theme.spacing(9),\n    color: '#9e9e9e'\n  },\n  activListBrand: {\n    color: theme.palette.primary.main\n  }\n}));\n\nconst TypeBar = ({\n  types,\n  setTypeId,\n  setBrandId,\n  removeType\n}) => {\n  _s();\n\n  const classes = useStyles(); //создаём объект с булевыми значениями для управления элементами списка(открытие закрытие)(чтобы реагировать на каждый элемент)\n\n  let objType = {};\n\n  for (let i = 0; i < types.length; i++) {\n    objType[i] = false; // console.log(objType);\n  }\n\n  const [open, setOpen] = useState(objType); // открытие вложенного списа\n\n  const [activType, setActivType] = useState(null); // выделение типа\n\n  const [activBrand, setActivBrand] = useState(null); //выделение бренда\n\n  const [allDevice, setAllDevice] = useState(true); //выделение всех товаров\n  // console.log(open);\n  // выбор типа,открытие  вложенного спиская,снятие выбранного брэнда\n\n  const handleType = index => {\n    setActivType(index);\n    setOpen({ ...open,\n      [index]: !open[index]\n    }); //изменяем булевое значение для каждого элемента\n\n    setActivBrand(null); // снятие выбранного бренда\n  }; // выбор брэнда\n\n\n  const handleBrand = (id, index) => {\n    setActivBrand(id);\n    setActivType(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    component: \"nav\",\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      button: true,\n      className: allDevice ? classes.activListType : classes.listType,\n      onClick: () => {\n        setTypeId(null); //удаление из стейта существующего типа\n\n        setBrandId(null); // удаление из стейта существующего брэнда\n\n        setOpen(objType); //закрытие списка\n\n        setActivType(null); //удаление выделения типа\n\n        setAllDevice(true); //выделение всех товаров\n      },\n      children: /*#__PURE__*/_jsxDEV(ListItemText, {\n        disableTypography: true,\n        primary: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: \"\\u0432\\u0441\\u0435 \\u0442\\u043E\\u0432\\u0430\\u0440\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), types.map((type, indexType) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          className: activType === indexType ? classes.activListType : classes.listType,\n          button: true,\n          onClick: () => {\n            handleType(indexType); //управление типом\n\n            setTypeId(type._id); //запись в стейт выбранного типа\n\n            setBrandId(null); // удаление из стейта существующего брэнда\n\n            setAllDevice(false); // удаление выделения всех товаров\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: type.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), open[indexType] ? /*#__PURE__*/_jsxDEV(ExpandLess, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: open[indexType],\n          timeout: \"auto\",\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            component: \"div\",\n            children: type.brands.map(brand => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  className: classes.listBrand,\n                  onClick: () => {\n                    handleBrand(brand._id, indexType); //управление брэндом\n\n                    setTypeId(type._id); //запись в стейт выбранного типа\n\n                    setBrandId(brand._id); //запись в стейт выбранного брэнда\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    disableTypography: true,\n                    className: activBrand === brand._id && activType === indexType ? classes.activListBrand : undefined,\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      gutterBottom: true,\n                      children: brand.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 23\n                }, this)]\n              }, brand._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, type._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TypeBar, \"FvZEiZEOSYLT7W4NS58aMs/pcNs=\", false, function () {\n  return [useStyles];\n});\n\n_c = TypeBar;\nexport default TypeBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypeBar\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/components/TypeBar.tsx"],"names":["React","useState","makeStyles","List","Divider","Typography","ListItem","ListItemText","ExpandLess","ExpandMore","Collapse","useStyles","theme","root","marginTop","padding","listType","paddingLeft","spacing","activListType","backgroundColor","listBrand","color","activListBrand","palette","primary","main","TypeBar","types","setTypeId","setBrandId","removeType","classes","objType","i","length","open","setOpen","activType","setActivType","activBrand","setActivBrand","allDevice","setAllDevice","handleType","index","handleBrand","id","map","type","indexType","_id","name","brands","brand","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport {\r\n  TypeDeviceType,\r\n  setTypeIdActionType,\r\n  setBrandIdActionType,\r\n} from '../store/reducer/deviceReducer'; //типизация\r\n\r\n//----типизация пропсов----\r\ntype PropsType = {\r\n  types: TypeDeviceType[];\r\n  setTypeId: (data: string | null) => setTypeIdActionType;\r\n  setBrandId: (data: string | null) => setBrandIdActionType;\r\n  removeType: (id: string) => void;\r\n};\r\n//-------------------------\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    marginTop: 20,\r\n    padding: '0px 5px',\r\n  },\r\n  listType: { paddingLeft: theme.spacing(5) },\r\n  activListType: { paddingLeft: theme.spacing(5), backgroundColor: '#e0e0e0' },\r\n  listBrand: {\r\n    paddingLeft: theme.spacing(9),\r\n    color: '#9e9e9e',\r\n  },\r\n  activListBrand: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst TypeBar: React.FC<PropsType> = ({\r\n  types,\r\n  setTypeId,\r\n  setBrandId,\r\n  removeType,\r\n}) => {\r\n  const classes = useStyles();\r\n  //создаём объект с булевыми значениями для управления элементами списка(открытие закрытие)(чтобы реагировать на каждый элемент)\r\n  let objType = {} as any;\r\n  for (let i = 0; i < types.length; i++) {\r\n    objType[i] = false;\r\n    // console.log(objType);\r\n  }\r\n\r\n  const [open, setOpen] = useState(objType); // открытие вложенного списа\r\n  const [activType, setActivType] = useState<null | number>(null); // выделение типа\r\n  const [activBrand, setActivBrand] = useState<null | string>(null); //выделение бренда\r\n  const [allDevice, setAllDevice] = useState(true); //выделение всех товаров\r\n  // console.log(open);\r\n  // выбор типа,открытие  вложенного спиская,снятие выбранного брэнда\r\n  const handleType = (index: number) => {\r\n    setActivType(index);\r\n    setOpen({ ...open, [index]: !open[index] }); //изменяем булевое значение для каждого элемента\r\n    setActivBrand(null); // снятие выбранного бренда\r\n  }; // выбор брэнда\r\n  const handleBrand = (id: string, index: number) => {\r\n    setActivBrand(id);\r\n    setActivType(index);\r\n  };\r\n\r\n  return (\r\n    <List component=\"nav\" className={classes.root}>\r\n      <ListItem\r\n        button\r\n        className={allDevice ? classes.activListType : classes.listType}\r\n        onClick={() => {\r\n          setTypeId(null); //удаление из стейта существующего типа\r\n          setBrandId(null); // удаление из стейта существующего брэнда\r\n          setOpen(objType); //закрытие списка\r\n          setActivType(null); //удаление выделения типа\r\n          setAllDevice(true); //выделение всех товаров\r\n        }}\r\n      >\r\n        <ListItemText\r\n          disableTypography\r\n          primary={\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              все товары\r\n            </Typography>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider />\r\n      {types.map((type, indexType) => {\r\n        return (\r\n          <div key={type._id}>\r\n            <ListItem\r\n              className={\r\n                activType === indexType\r\n                  ? classes.activListType\r\n                  : classes.listType\r\n              }\r\n              button\r\n              onClick={() => {\r\n                handleType(indexType); //управление типом\r\n                setTypeId(type._id); //запись в стейт выбранного типа\r\n                setBrandId(null); // удаление из стейта существующего брэнда\r\n                setAllDevice(false); // удаление выделения всех товаров\r\n              }}\r\n            >\r\n              <ListItemText\r\n                disableTypography\r\n                primary={\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    {type.name}\r\n                  </Typography>\r\n                }\r\n              />\r\n              {open[indexType] ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Divider />\r\n            <Collapse in={open[indexType]} timeout=\"auto\" unmountOnExit>\r\n              <List component=\"div\">\r\n                {type.brands.map((brand) => {\r\n                  return (\r\n                    <div key={brand._id}>\r\n                      <ListItem\r\n                        button\r\n                        className={classes.listBrand}\r\n                        onClick={() => {\r\n                          handleBrand(brand._id, indexType); //управление брэндом\r\n                          setTypeId(type._id); //запись в стейт выбранного типа\r\n                          setBrandId(brand._id); //запись в стейт выбранного брэнда\r\n                        }}\r\n                      >\r\n                        <ListItemText\r\n                          disableTypography\r\n                          className={\r\n                            activBrand === brand._id && activType === indexType\r\n                              ? classes.activListBrand\r\n                              : undefined\r\n                          }\r\n                          primary={\r\n                            <Typography variant=\"subtitle2\" gutterBottom>\r\n                              {brand.name}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                      </ListItem>\r\n                      <Divider />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </List>\r\n            </Collapse>\r\n          </div>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default TypeBar;\r\n"]},"metadata":{},"sourceType":"module"}