{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\pages\\\\Content.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from '@material-ui/core';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { useLocation, useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport PaginationItem from '@material-ui/lab/PaginationItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TypeBar from '../components/TypeBar';\nimport AlertType from '../components/AlertType';\nimport DeviceContainer from '../components/DeviceContainer';\nimport { setTypeId, //запись выбранного типа устройства\nsetBrandId, //запись выбранного  брэнда устройства\nsetAlertMessage // изменения маркера получения сообщения о невозможности удаления типа/брэнда устройства\n} from '../store/reducer/deviceReducer';\n//типизация данных\nimport { getDevices, //запрос на получение устройств\ngetTypes, //запрос на получение типов\nremoveDevice, //удаление устройства\nremoveType //удаление типа\n} from '../action/deviceAction';\nimport { connect } from 'react-redux'; //типизация--------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//-----------------------------------------\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    '& > *': {\n      marginTop: theme.spacing(2)\n    },\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginBottom: theme.spacing(2)\n  },\n  grid: {\n    width: '100%',\n    height: 650,\n    overflow: 'auto'\n  },\n  textTitle: {\n    marginTop: '25px'\n  }\n}));\n\nconst Content = ({\n  getDevices,\n  setTypeId,\n  setBrandId,\n  removeDevice,\n  removeType,\n  setAlertMessage,\n  devices,\n  types,\n  pageQty,\n  limit,\n  typeId,\n  brandId,\n  isLoadinDevice,\n  isFetchErrorDevice,\n  isLoadinTypes,\n  isFetchErrorTypes,\n  auth,\n  isAuth,\n  alertMessage\n}) => {\n  _s();\n\n  var _searchPage$search;\n\n  const classes = useStyles();\n  const searchPage = useLocation(); // для получения строки запроса\n\n  const history = useHistory(); //для изменения строки запроса\n  //console.log(search);\n  // пагинация, данные о текущей странице( по умолчанию: 1 или, если есть ,информация о текущей странице в адресной строке )\n\n  const [page, setPage] = useState(parseInt(((_searchPage$search = searchPage.search) === null || _searchPage$search === void 0 ? void 0 : _searchPage$search.split('=')[1]) || '1')); // изменения текущей страницы\n\n  const handleChange = (event, value) => {\n    setPage(value);\n  }; // запрос на сервак для получения устройств(фильтруем устройства по типу и бренду,а также пагинация)\n\n\n  useEffect(() => {\n    getDevices(typeId, brandId, limit, page, setPage, history); // eslint-disable-next-line\n  }, [typeId, brandId, page]); // запрос на сервак для получения типов устройств\n\n  useEffect(() => {\n    getTypes(); // eslint-disable-next-line\n  }, []);\n  console.log(devices); // const { name, picture, price, info } = devices[1];\n  // console.log(info);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [alertMessage && /*#__PURE__*/_jsxDEV(AlertType, {\n      setAlertMessage: setAlertMessage,\n      alertMessage: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 2,\n        className: classes.grid,\n        children: isFetchErrorTypes ? /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          color: \"error\",\n          className: classes.textTitle,\n          children: \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this) : isLoadinTypes ? /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          style: {\n            height: window.innerHeight - 65.6\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this) : types.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          className: classes.textTitle,\n          children: \"\\u041F\\u043E\\u043A\\u0430 \\u0442\\u0438\\u043F\\u043E\\u0432 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432 \\u043D\\u0435\\u0442!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TypeBar, {\n          types: types,\n          setTypeId: setTypeId,\n          setBrandId: setBrandId,\n          removeType: removeType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 10,\n        children: isFetchErrorDevice ? /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          color: \"error\",\n          className: classes.textTitle,\n          children: \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this) : isLoadinDevice ? /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          style: {\n            height: window.innerHeight - 65.6\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this) : devices.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          className: classes.textTitle,\n          children: \"\\u041F\\u043E\\u043A\\u0430 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432 \\u043D\\u0435\\u0442!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DeviceContainer, {\n            devices: devices,\n            auth: auth,\n            isAuth: isAuth,\n            removeDevice: removeDevice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), !!pageQty && /*#__PURE__*/_jsxDEV(Pagination, {\n            className: classes.root,\n            count: pageQty,\n            page: page,\n            showFirstButton: true,\n            showLastButton: true,\n            onChange: handleChange // интегрируем роутер\n            ,\n            renderItem: item => /*#__PURE__*/_jsxDEV(PaginationItem, {\n              component: Link,\n              to: `/?page=${item.page}`,\n              ...item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Content, \"cWGXFPQie+uEVCYyGe84rIs2Zb0=\", false, function () {\n  return [useStyles, useLocation, useHistory];\n});\n\n_c = Content;\n\nconst mapStateToProps = state => {\n  return {\n    devices: state.devices.devices,\n    //устройства\n    types: state.devices.types,\n    //типы устройств\n    pageQty: state.devices.pageQty,\n    //количества страниц\n    limit: state.devices.limit,\n    //сколько устройств на странице\n    typeId: state.devices.typeId,\n    // айдишник типа\n    brandId: state.devices.brandId,\n    // айдишник брэнда\n    isLoadinDevice: state.devices.isLoadinDevice,\n    //крутилка у стройств\n    isLoadinTypes: state.devices.isLoadinTypes,\n    //крутилка типов\n    isFetchErrorDevice: state.devices.isFetchErrorDevice,\n    //ошибка устройств\n    isFetchErrorTypes: state.devices.isFetchErrorTypes,\n    //ошибка типов\n    auth: state.auth.auth,\n    //авторизация\n    isAuth: state.auth.isAuth,\n    //маркер авторизации\n    alertMessage: state.devices.alertMessage // маркер получения сообщения о невозможности удаления типа устройства\n\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getDevices,\n  setTypeId,\n  setBrandId,\n  removeDevice,\n  removeType,\n  setAlertMessage\n})(Content);\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/pages/Content.tsx"],"names":["React","useEffect","useState","Grid","Typography","Box","makeStyles","createStyles","useLocation","useHistory","Link","Pagination","PaginationItem","CircularProgress","TypeBar","AlertType","DeviceContainer","setTypeId","setBrandId","setAlertMessage","getDevices","getTypes","removeDevice","removeType","connect","useStyles","theme","root","marginTop","spacing","display","flexDirection","justifyContent","marginBottom","grid","width","height","overflow","textTitle","Content","devices","types","pageQty","limit","typeId","brandId","isLoadinDevice","isFetchErrorDevice","isLoadinTypes","isFetchErrorTypes","auth","isAuth","alertMessage","classes","searchPage","history","page","setPage","parseInt","search","split","handleChange","event","value","console","log","window","innerHeight","length","item","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box } from '@material-ui/core';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport { useLocation, useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport PaginationItem from '@material-ui/lab/PaginationItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TypeBar from '../components/TypeBar';\r\nimport AlertType from '../components/AlertType';\r\nimport DeviceContainer from '../components/DeviceContainer';\r\nimport { RootStateType } from '../store/store'; //типизиция всего стора\r\nimport { AuthReducerType } from '../store/reducer/authReducer';\r\nimport {\r\n  setTypeId, //запись выбранного типа устройства\r\n  setBrandId, //запись выбранного  брэнда устройства\r\n  setAlertMessage, // изменения маркера получения сообщения о невозможности удаления типа/брэнда устройства\r\n} from '../store/reducer/deviceReducer';\r\nimport {\r\n  setTypeIdActionType,\r\n  setBrandIdActionType,\r\n} from '../store/reducer/deviceReducer'; // типизация экшенов\r\nimport { DeviceType, TypeDeviceType } from '../store/reducer/deviceReducer'; //типизация данных\r\nimport {\r\n  getDevices, //запрос на получение устройств\r\n  getTypes, //запрос на получение типов\r\n  removeDevice, //удаление устройства\r\n  removeType, //удаление типа\r\n} from '../action/deviceAction';\r\nimport { connect } from 'react-redux';\r\n\r\n//типизация--------------------------------\r\ntype MapStateToPropsType = {\r\n  devices: DeviceType[];\r\n  types: TypeDeviceType[];\r\n  pageQty: number;\r\n  limit: number;\r\n  typeId: string | null;\r\n  brandId: string | null;\r\n  isLoadinDevice: boolean;\r\n  isFetchErrorDevice: boolean;\r\n  isLoadinTypes: boolean;\r\n  isFetchErrorTypes: boolean;\r\n  auth: AuthReducerType;\r\n  isAuth: boolean;\r\n  alertMessage: string | null;\r\n};\r\ntype MapDispathPropsType = {\r\n  getDevices: (\r\n    typeId: string | null,\r\n    brandId: string | null,\r\n    limit: number,\r\n    page: number,\r\n    setPage: React.Dispatch<React.SetStateAction<number>>,\r\n    history: any\r\n  ) => void;\r\n  setTypeId: (data: string | null) => setTypeIdActionType;\r\n  setBrandId: (data: string | null) => setBrandIdActionType;\r\n  removeDevice: (id: string | undefined) => void;\r\n  removeType: (id: string) => void;\r\n  setAlertMessage: (data: string | null) => void;\r\n};\r\n\r\ntype PropsType = MapDispathPropsType & MapStateToPropsType;\r\n//-----------------------------------------\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    grid: {\r\n      width: '100%',\r\n      height: 650,\r\n      overflow: 'auto',\r\n    },\r\n    textTitle: {\r\n      marginTop: '25px',\r\n    },\r\n  })\r\n);\r\n\r\nconst Content: React.FC<PropsType> = ({\r\n  getDevices,\r\n  setTypeId,\r\n  setBrandId,\r\n  removeDevice,\r\n  removeType,\r\n  setAlertMessage,\r\n  devices,\r\n  types,\r\n  pageQty,\r\n  limit,\r\n  typeId,\r\n  brandId,\r\n  isLoadinDevice,\r\n  isFetchErrorDevice,\r\n  isLoadinTypes,\r\n  isFetchErrorTypes,\r\n  auth,\r\n  isAuth,\r\n  alertMessage,\r\n}) => {\r\n  const classes = useStyles();\r\n  const searchPage = useLocation(); // для получения строки запроса\r\n  const history = useHistory(); //для изменения строки запроса\r\n  //console.log(search);\r\n  // пагинация, данные о текущей странице( по умолчанию: 1 или, если есть ,информация о текущей странице в адресной строке )\r\n  const [page, setPage] = useState(\r\n    parseInt(searchPage.search?.split('=')[1] || '1')\r\n  );\r\n  // изменения текущей страницы\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setPage(value);\r\n  };\r\n  // запрос на сервак для получения устройств(фильтруем устройства по типу и бренду,а также пагинация)\r\n  useEffect(() => {\r\n    getDevices(typeId, brandId, limit, page, setPage, history);\r\n    // eslint-disable-next-line\r\n  }, [typeId, brandId, page]);\r\n  // запрос на сервак для получения типов устройств\r\n  useEffect(() => {\r\n    getTypes();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  console.log(devices);\r\n  // const { name, picture, price, info } = devices[1];\r\n  // console.log(info);\r\n  return (\r\n    <>\r\n      {alertMessage && (\r\n        <AlertType\r\n          setAlertMessage={setAlertMessage}\r\n          alertMessage={alertMessage}\r\n        />\r\n      )}\r\n      <Grid item container>\r\n        <Grid item xs={12} sm={2} className={classes.grid}>\r\n          {isFetchErrorTypes ? (\r\n            <Typography\r\n              align=\"center\"\r\n              color=\"error\"\r\n              className={classes.textTitle}\r\n            >\r\n              Что-то пошло не так!\r\n            </Typography>\r\n          ) : isLoadinTypes ? (\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              style={{ height: window.innerHeight - 65.6 }}\r\n            >\r\n              <CircularProgress />\r\n            </Box>\r\n          ) : types.length === 0 ? (\r\n            <Typography align=\"center\" className={classes.textTitle}>\r\n              Пока типов товаров нет!\r\n            </Typography>\r\n          ) : (\r\n            <TypeBar\r\n              types={types}\r\n              setTypeId={setTypeId}\r\n              setBrandId={setBrandId}\r\n              removeType={removeType}\r\n            />\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12} sm={10}>\r\n          {isFetchErrorDevice ? (\r\n            <Typography\r\n              align=\"center\"\r\n              color=\"error\"\r\n              className={classes.textTitle}\r\n            >\r\n              Что-то пошло не так!\r\n            </Typography>\r\n          ) : isLoadinDevice ? (\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              style={{ height: window.innerHeight - 65.6 }}\r\n            >\r\n              <CircularProgress />\r\n            </Box>\r\n          ) : devices.length === 0 ? (\r\n            <Typography align=\"center\" className={classes.textTitle}>\r\n              Пока товаров нет!\r\n            </Typography>\r\n          ) : (\r\n            <>\r\n              <DeviceContainer\r\n                devices={devices}\r\n                auth={auth}\r\n                isAuth={isAuth}\r\n                removeDevice={removeDevice}\r\n              />\r\n              {!!pageQty && (\r\n                <Pagination\r\n                  className={classes.root}\r\n                  count={pageQty}\r\n                  page={page}\r\n                  showFirstButton\r\n                  showLastButton\r\n                  onChange={handleChange}\r\n                  // интегрируем роутер\r\n                  renderItem={(item) => (\r\n                    <PaginationItem\r\n                      component={Link}\r\n                      to={`/?page=${item.page}`}\r\n                      {...item}\r\n                    />\r\n                  )}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n  return {\r\n    devices: state.devices.devices, //устройства\r\n    types: state.devices.types, //типы устройств\r\n    pageQty: state.devices.pageQty, //количества страниц\r\n    limit: state.devices.limit, //сколько устройств на странице\r\n    typeId: state.devices.typeId, // айдишник типа\r\n    brandId: state.devices.brandId, // айдишник брэнда\r\n    isLoadinDevice: state.devices.isLoadinDevice, //крутилка у стройств\r\n    isLoadinTypes: state.devices.isLoadinTypes, //крутилка типов\r\n    isFetchErrorDevice: state.devices.isFetchErrorDevice, //ошибка устройств\r\n    isFetchErrorTypes: state.devices.isFetchErrorTypes, //ошибка типов\r\n    auth: state.auth.auth, //авторизация\r\n    isAuth: state.auth.isAuth, //маркер авторизации\r\n    alertMessage: state.devices.alertMessage, // маркер получения сообщения о невозможности удаления типа устройства\r\n  };\r\n};\r\nexport default connect<\r\n  MapStateToPropsType,\r\n  MapDispathPropsType,\r\n  unknown, // личные пропсы\r\n  RootStateType\r\n>(mapStateToProps, {\r\n  getDevices,\r\n  setTypeId,\r\n  setBrandId,\r\n  removeDevice,\r\n  removeType,\r\n  setAlertMessage,\r\n})(Content);\r\n"]},"metadata":{},"sourceType":"module"}