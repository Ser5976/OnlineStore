{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\pages\\\\ProfileType.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Box, Container } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { useLocation, useHistory, useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport PaginationItem from '@material-ui/lab/PaginationItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ActiveLastBreadcrumb from '../components/ActiveLastBreadcrumb';\nimport Device from '../components/Device';\n//типизиция всего стора\nimport { setTypeId, //запись выбранного типа устройства\nsetBrandId } from '../store/reducer/deviceReducer';\nimport { getDevices, //запрос на получение устройств\ngetSelectedType //запрос на получение выбранного типа устройства\n} from '../action/deviceAction';\nimport { addProductCart } from '../action/basketAction';\nimport { connect } from 'react-redux'; //типизация--------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//-----------------------------------------\nconst useStyles = makeStyles(theme => createStyles({\n  breadcrumb: {\n    margin: 15\n  },\n  pagination: {\n    '& > *': {\n      marginTop: theme.spacing(7)\n    },\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginBottom: theme.spacing(7)\n  },\n  textTitle: {\n    marginTop: '50px',\n    cursor: 'pointer'\n  },\n  root: {\n    maxWidth: 'auto',\n    '&:hover': {\n      boxShadow: '0 3px 10px rgb(0 0 0/0.2)'\n    },\n    cursor: 'pointer'\n  }\n}));\n\nconst ProfileType = ({\n  getDevices,\n  getSelectedType,\n  setTypeId,\n  setBrandId,\n  addProductCart,\n  //санка для добавления продукта в корзину\n  devices,\n  selectedType,\n  pageQty,\n  name,\n  limit,\n  typeId,\n  brandId,\n  isLoadinDevice,\n  isFetchErrorDevice,\n  isLoadinSelectedType,\n  isFetchErrorSelectedType\n}) => {\n  _s();\n\n  var _location$search;\n\n  const classes = useStyles();\n  const {\n    id\n  } = useParams(); //  хук роутера ,который помогает получить значение params(это выбранный typeId)\n\n  const history = useHistory(); //для изменения строки запроса\n\n  const location = useLocation(); // для получения строки запроса\n\n  const searchPage = parseInt(((_location$search = location.search) === null || _location$search === void 0 ? void 0 : _location$search.split('=')[1]) || '1'); // получаем число страницы из строки запроса\n  //console.log(search);\n  // пагинация, данные о текущей странице( по умолчанию: 1 или, если есть ,информация о текущей странице в адресной строке )\n\n  const [page, setPage] = useState(searchPage); // изменения текущей страницы\n\n  const handleChange = (event, value) => {\n    setPage(value);\n  }; //костыль,чтобы синхронизировать пагинацию и строку запроса\n\n\n  useEffect(() => {\n    console.log('костыль');\n\n    if (history.action === 'POP') {\n      setPage(searchPage);\n    } // eslint-disable-next-line\n\n  }, [searchPage]); // запрос на сервак для получения выбранного типа с брэндами\n\n  useEffect(() => {\n    getSelectedType(id);\n    setTypeId(id);\n    setBrandId(null);\n    console.log('id:', id); // eslint-disable-next-line\n  }, [id]); // запрос на сервак для получения устройств(фильтруем устройства по типу и бренду,а также пагинация)\n\n  useEffect(() => {\n    // setPage(searchPage); //костыль,чтобы синхронизировать пагинацию и строку запроса\n    getDevices(typeId, brandId, limit, page, name, setPage, history); // eslint-disable-next-line\n  }, [typeId, brandId, page, name]); //удаление выбранного брэнда\n\n  const removeBrand = () => {\n    setBrandId(null);\n  }; //console.log(selectedType);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.breadcrumb,\n      children: /*#__PURE__*/_jsxDEV(ActiveLastBreadcrumb, {\n        name: selectedType.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 10,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              marginTop: '115px',\n              fontWeight: 'bold'\n            },\n            children: [' ', \"\\u041F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u0438\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), isFetchErrorSelectedType ? /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            color: \"error\",\n            style: {\n              marginTop: '25px'\n            },\n            children: \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this) : isLoadinSelectedType ? /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            style: {\n              height: window.innerHeight - 65.6\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this) : selectedType.brands.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            style: {\n              margin: '100px'\n            },\n            children: \"\\u041F\\u043E\\u043A\\u0430 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u0435\\u0439 \\u043D\\u0435\\u0442!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(List, {\n            component: \"nav\",\n            children: selectedType.brands && selectedType.brands.map(brand => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  onClick: () => setBrandId(brand._id),\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: brand.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 25\n                }, this)]\n              }, brand._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 9,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: classes.textTitle,\n            onClick: removeBrand,\n            children: selectedType.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), isFetchErrorDevice ? /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            color: \"error\",\n            style: {\n              marginTop: '25px'\n            },\n            children: \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this) : isLoadinDevice ? /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            style: {\n              height: window.innerHeight - 65.6\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this) : devices.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            style: {\n              margin: '100px'\n            },\n            children: \"\\u041F\\u043E\\u043A\\u0430 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432 \\u043D\\u0435\\u0442!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            style: {\n              display: 'flex',\n              flexDirection: 'column'\n            },\n            children: devices && devices.map(item => {\n              return /*#__PURE__*/_jsxDEV(Device, {\n                item: item,\n                addProductCart: addProductCart\n              }, Math.random(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), !!pageQty && /*#__PURE__*/_jsxDEV(Pagination, {\n        className: classes.pagination,\n        count: pageQty,\n        page: page,\n        showFirstButton: true,\n        showLastButton: true,\n        onChange: handleChange // интегрируем роутер\n        ,\n        renderItem: item => /*#__PURE__*/_jsxDEV(PaginationItem, {\n          component: Link,\n          to: `/profileType/${id}?page=${item.page}`,\n          ...item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProfileType, \"EFFA5X1EKPKFfuZD2mTbZIZ8y4g=\", false, function () {\n  return [useStyles, useParams, useHistory, useLocation];\n});\n\n_c = ProfileType;\n\nconst mapStateToProps = state => {\n  return {\n    devices: state.devices.devices,\n    //устройства\n    name: state.devices.name,\n    // имя для поиска\n    selectedType: state.devices.selectedType,\n    //выбранный тип устройства\n    pageQty: state.devices.pageQty,\n    //количества страниц\n    limit: state.devices.limit,\n    //сколько устройств на странице\n    typeId: state.devices.typeId,\n    // айдишник типа\n    brandId: state.devices.brandId,\n    // айдишник брэнда\n    isLoadinDevice: state.devices.isLoadinDevice,\n    //крутилка у стройств\n    isLoadinSelectedType: state.devices.isLoadinSelectedType,\n    //крутилка типов\n    isFetchErrorDevice: state.devices.isFetchErrorDevice,\n    //ошибка устройств\n    isFetchErrorSelectedType: state.devices.isFetchErrorSelectedType //ошибка типов\n\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getDevices,\n  getSelectedType,\n  setTypeId,\n  setBrandId,\n  addProductCart\n})(ProfileType);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileType\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/pages/ProfileType.tsx"],"names":["React","useEffect","useState","Grid","Typography","Box","Container","List","ListItem","ListItemText","Divider","makeStyles","createStyles","useLocation","useHistory","useParams","Link","Pagination","PaginationItem","CircularProgress","ActiveLastBreadcrumb","Device","setTypeId","setBrandId","getDevices","getSelectedType","addProductCart","connect","useStyles","theme","breadcrumb","margin","pagination","marginTop","spacing","display","flexDirection","justifyContent","marginBottom","textTitle","cursor","root","maxWidth","boxShadow","ProfileType","devices","selectedType","pageQty","name","limit","typeId","brandId","isLoadinDevice","isFetchErrorDevice","isLoadinSelectedType","isFetchErrorSelectedType","classes","id","history","location","searchPage","parseInt","search","split","page","setPage","handleChange","event","value","console","log","action","removeBrand","fontWeight","height","window","innerHeight","brands","length","map","brand","_id","item","Math","random","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport { useLocation, useHistory, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport PaginationItem from '@material-ui/lab/PaginationItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ActiveLastBreadcrumb from '../components/ActiveLastBreadcrumb';\r\nimport Device from '../components/Device';\r\nimport { RootStateType } from '../store/store'; //типизиция всего стора\r\n\r\nimport {\r\n  setTypeId, //запись выбранного типа устройства\r\n  setBrandId, //запись выбранного  брэнда устройства\r\n  setTypeIdActionType, // типизация экшенов\r\n  setBrandIdActionType,\r\n  DeviceType,\r\n  TypeDeviceType,\r\n} from '../store/reducer/deviceReducer';\r\nimport {\r\n  getDevices, //запрос на получение устройств\r\n  getSelectedType, //запрос на получение выбранного типа устройства\r\n} from '../action/deviceAction';\r\nimport { addProductCart, ProductType } from '../action/basketAction';\r\nimport { connect } from 'react-redux';\r\n\r\n//типизация--------------------------------\r\ntype MapStateToPropsType = {\r\n  devices: DeviceType[];\r\n  selectedType: TypeDeviceType;\r\n  pageQty: number;\r\n  limit: number;\r\n  name: string | null;\r\n  typeId: string | null;\r\n  brandId: string | null;\r\n  isLoadinDevice: boolean;\r\n  isFetchErrorDevice: boolean;\r\n  isLoadinSelectedType: boolean;\r\n  isFetchErrorSelectedType: boolean;\r\n};\r\ntype MapDispathPropsType = {\r\n  getDevices: (\r\n    typeId: string | null,\r\n    brandId: string | null,\r\n    limit: number,\r\n    page: number,\r\n    name: string | null,\r\n    setPage: React.Dispatch<React.SetStateAction<number>>,\r\n    history: any\r\n  ) => void;\r\n  getSelectedType: (id: string) => void;\r\n  setTypeId: (data: string | null) => setTypeIdActionType;\r\n  setBrandId: (data: string | null) => setBrandIdActionType;\r\n  addProductCart: (product: ProductType) => void;\r\n};\r\n\r\ntype PropsType = MapDispathPropsType & MapStateToPropsType;\r\ntype ParamsType = {\r\n  id: string;\r\n};\r\n//-----------------------------------------\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    breadcrumb: {\r\n      margin: 15,\r\n    },\r\n    pagination: {\r\n      '& > *': {\r\n        marginTop: theme.spacing(7),\r\n      },\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      marginBottom: theme.spacing(7),\r\n    },\r\n\r\n    textTitle: {\r\n      marginTop: '50px',\r\n      cursor: 'pointer',\r\n    },\r\n\r\n    root: {\r\n      maxWidth: 'auto',\r\n      '&:hover': {\r\n        boxShadow: '0 3px 10px rgb(0 0 0/0.2)',\r\n      },\r\n      cursor: 'pointer',\r\n    },\r\n  })\r\n);\r\n\r\nconst ProfileType: React.FC<PropsType> = ({\r\n  getDevices,\r\n  getSelectedType,\r\n  setTypeId,\r\n  setBrandId,\r\n  addProductCart, //санка для добавления продукта в корзину\r\n  devices,\r\n  selectedType,\r\n  pageQty,\r\n  name,\r\n  limit,\r\n  typeId,\r\n  brandId,\r\n  isLoadinDevice,\r\n  isFetchErrorDevice,\r\n  isLoadinSelectedType,\r\n  isFetchErrorSelectedType,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { id } = useParams<ParamsType>(); //  хук роутера ,который помогает получить значение params(это выбранный typeId)\r\n\r\n  const history = useHistory(); //для изменения строки запроса\r\n  const location = useLocation(); // для получения строки запроса\r\n  const searchPage = parseInt(location.search?.split('=')[1] || '1'); // получаем число страницы из строки запроса\r\n  //console.log(search);\r\n  // пагинация, данные о текущей странице( по умолчанию: 1 или, если есть ,информация о текущей странице в адресной строке )\r\n  const [page, setPage] = useState(searchPage);\r\n  // изменения текущей страницы\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setPage(value);\r\n  };\r\n  //костыль,чтобы синхронизировать пагинацию и строку запроса\r\n  useEffect(() => {\r\n    console.log('костыль');\r\n    if (history.action === 'POP') {\r\n      setPage(searchPage);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [searchPage]);\r\n\r\n  // запрос на сервак для получения выбранного типа с брэндами\r\n  useEffect(() => {\r\n    getSelectedType(id);\r\n    setTypeId(id);\r\n    setBrandId(null);\r\n    console.log('id:', id);\r\n    // eslint-disable-next-line\r\n  }, [id]);\r\n\r\n  // запрос на сервак для получения устройств(фильтруем устройства по типу и бренду,а также пагинация)\r\n  useEffect(() => {\r\n    // setPage(searchPage); //костыль,чтобы синхронизировать пагинацию и строку запроса\r\n    getDevices(typeId, brandId, limit, page, name, setPage, history);\r\n\r\n    // eslint-disable-next-line\r\n  }, [typeId, brandId, page, name]);\r\n\r\n  //удаление выбранного брэнда\r\n  const removeBrand = () => {\r\n    setBrandId(null);\r\n  };\r\n\r\n  //console.log(selectedType);\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.breadcrumb}>\r\n        <ActiveLastBreadcrumb name={selectedType.name} />\r\n      </Box>\r\n\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={10}>\r\n          <Grid item xs={12} sm={3}>\r\n            <Typography style={{ marginTop: '115px', fontWeight: 'bold' }}>\r\n              {' '}\r\n              Производители\r\n            </Typography>\r\n            {isFetchErrorSelectedType ? (\r\n              <Typography\r\n                align=\"center\"\r\n                color=\"error\"\r\n                style={{ marginTop: '25px' }}\r\n              >\r\n                Что-то пошло не так!\r\n              </Typography>\r\n            ) : isLoadinSelectedType ? (\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                style={{ height: window.innerHeight - 65.6 }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : selectedType.brands.length === 0 ? (\r\n              <Typography align=\"center\" style={{ margin: '100px' }}>\r\n                Пока производителей нет!\r\n              </Typography>\r\n            ) : (\r\n              <List component=\"nav\">\r\n                {selectedType.brands &&\r\n                  selectedType.brands.map((brand) => {\r\n                    return (\r\n                      <div key={brand._id}>\r\n                        <ListItem button onClick={() => setBrandId(brand._id)}>\r\n                          <ListItemText primary={brand.name} />\r\n                        </ListItem>\r\n                        <Divider />\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </List>\r\n            )}\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={9}>\r\n            <Typography\r\n              variant=\"h6\"\r\n              className={classes.textTitle}\r\n              onClick={removeBrand}\r\n            >\r\n              {selectedType.name}\r\n            </Typography>\r\n            <Divider />\r\n            {isFetchErrorDevice ? (\r\n              <Typography\r\n                align=\"center\"\r\n                color=\"error\"\r\n                style={{ marginTop: '25px' }}\r\n              >\r\n                Что-то пошло не так!\r\n              </Typography>\r\n            ) : isLoadinDevice ? (\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                style={{ height: window.innerHeight - 65.6 }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : devices.length === 0 ? (\r\n              <Typography align=\"center\" style={{ margin: '100px' }}>\r\n                Пока товаров нет!\r\n              </Typography>\r\n            ) : (\r\n              <Box style={{ display: 'flex', flexDirection: 'column' }}>\r\n                {devices &&\r\n                  devices.map((item) => {\r\n                    return (\r\n                      <Device\r\n                        item={item}\r\n                        key={Math.random()}\r\n                        addProductCart={addProductCart}\r\n                      />\r\n                    );\r\n                  })}\r\n              </Box>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {!!pageQty && (\r\n          <Pagination\r\n            className={classes.pagination}\r\n            count={pageQty}\r\n            page={page}\r\n            showFirstButton\r\n            showLastButton\r\n            onChange={handleChange}\r\n            // интегрируем роутер\r\n            renderItem={(item) => (\r\n              <PaginationItem\r\n                component={Link}\r\n                to={`/profileType/${id}?page=${item.page}`}\r\n                {...item}\r\n              />\r\n            )}\r\n          />\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n  return {\r\n    devices: state.devices.devices, //устройства\r\n    name: state.devices.name, // имя для поиска\r\n    selectedType: state.devices.selectedType, //выбранный тип устройства\r\n    pageQty: state.devices.pageQty, //количества страниц\r\n    limit: state.devices.limit, //сколько устройств на странице\r\n    typeId: state.devices.typeId, // айдишник типа\r\n    brandId: state.devices.brandId, // айдишник брэнда\r\n    isLoadinDevice: state.devices.isLoadinDevice, //крутилка у стройств\r\n    isLoadinSelectedType: state.devices.isLoadinSelectedType, //крутилка типов\r\n    isFetchErrorDevice: state.devices.isFetchErrorDevice, //ошибка устройств\r\n    isFetchErrorSelectedType: state.devices.isFetchErrorSelectedType, //ошибка типов\r\n  };\r\n};\r\nexport default connect<\r\n  MapStateToPropsType,\r\n  MapDispathPropsType,\r\n  unknown, // личные пропсы\r\n  RootStateType\r\n>(mapStateToProps, {\r\n  getDevices,\r\n  getSelectedType,\r\n  setTypeId,\r\n  setBrandId,\r\n  addProductCart,\r\n})(ProfileType);\r\n"]},"metadata":{},"sourceType":"module"}