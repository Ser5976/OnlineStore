{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\components\\\\Header.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\nimport Badge from '@material-ui/core/Badge';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport Divider from '@material-ui/core/Divider';\nimport Logout from './Logout';\nimport MenuBar from './MenuBar';\nimport { setAuth, //записть авторизации в стор\nsetIsAuth, // маркер авторизации\nsetLogout // типизация экшена маркера типизации\n} from '../store/reducer/authReducer';\nimport { //типизация типа\n//типизация экшена\n//типтзация экшена\n// типизация экшен\nsetBrandId, //запись в стейт выбранного брэнда\nsetTypeId, //запись в стейт выбранного типа\nsetName //запись имени товара(для поиска)\n} from '../store/reducer/deviceReducer';\nimport { getBrands, getTypes } from '../action/deviceAction'; //запрос на получениe типов устройств\n\n//типизация всего стейта\nimport { useHistory } from 'react-router-dom';\nimport Logo7 from '../img/logo7.png';\nimport MenuAdmin from './MenuAdmin';\nimport { connect } from 'react-redux';\nimport { alpha, createStyles } from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search'; //типизация--------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//-----------------------------------------\nconst useStyles = makeStyles(theme => createStyles({\n  grow: {\n    flexGrow: 1\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.black, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.black, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'darck'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch'\n    }\n  },\n  toolBar: {\n    display: 'block',\n    '@media (min-width:600px)': {\n      display: 'flex'\n    }\n  }\n}));\n\nconst Header = ({\n  auth,\n  isAuth,\n  types,\n  isFetchErrorTypes,\n  setAuth,\n  setLogout,\n  setIsAuth,\n  getTypes,\n  getBrands,\n  setBrandId,\n  setTypeId\n}) => {\n  _s();\n\n  const history = useHistory();\n  const classes = useStyles();\n  useEffect(() => {\n    setIsAuth(!!sessionStorage.getItem('token')); //берём токен из sessionStorage и приводим его к булевому значению\n\n    const authorizationData = {\n      //берём данные из sessionStorage и записываем в стор\n      token: sessionStorage.getItem('token'),\n      email: sessionStorage.getItem('email'),\n      role: sessionStorage.getItem('role')\n    };\n    setAuth(authorizationData); // загрузка типов устройств\n\n    getTypes(); // загрузка брендов\n\n    getBrands(); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      style: {\n        background: '#fff',\n        padding: '0'\n      },\n      elevation: 0,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolBar,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Logo7,\n            style: {\n              height: '100px',\n              width: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.grow,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.search,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.searchIcon,\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n              placeholder: \"Search\\u2026\",\n              classes: {\n                root: classes.inputRoot,\n                input: classes.inputInput\n              },\n              inputProps: {\n                'aria-label': 'search'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), isAuth && auth.role === 'ADMIN' && /*#__PURE__*/_jsxDEV(MenuAdmin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 47\n        }, this), isAuth ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            children: /*#__PURE__*/_jsxDEV(Badge, {\n              badgeContent: 3,\n              color: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(ShoppingCartOutlinedIcon, {\n                style: {\n                  fontSize: '35px',\n                  color: 'black'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Logout, {\n            setLogout: setLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => history.push('/login'),\n          children: /*#__PURE__*/_jsxDEV(PersonAddOutlinedIcon, {\n            style: {\n              fontSize: '35px',\n              color: 'black'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuBar, {\n      types: types,\n      setBrandId: setBrandId,\n      setTypeId: setTypeId,\n      isFetchErrorTypes: isFetchErrorTypes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Header, \"a770Wo9grBp66oG4IhbrG9riUrM=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = Header;\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.isAuth,\n    //  маркер авторизации\n    auth: state.auth.auth,\n    //авторизация для role\n    types: state.devices.types,\n    //  типы устройств\n    isFetchErrorTypes: state.devices.isFetchErrorTypes //ошибка загруки типов устройств\n\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setAuth,\n  setLogout,\n  setIsAuth,\n  getTypes,\n  getBrands,\n  setBrandId,\n  setTypeId,\n  setName\n})(Header);\n{\n  /* \r\n  import { alpha, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\n  import AppBar from '@material-ui/core/AppBar';\r\n  import Toolbar from '@material-ui/core/Toolbar';\r\n  import IconButton from '@material-ui/core/IconButton';\r\n  import Typography from '@material-ui/core/Typography';\r\n  import InputBase from '@material-ui/core/InputBase';\r\n  import Badge from '@material-ui/core/Badge';\r\n  import MenuItem from '@material-ui/core/MenuItem';\r\n  import Menu from '@material-ui/core/Menu';\r\n  import MenuIcon from '@material-ui/icons/Menu';\r\n  import SearchIcon from '@material-ui/icons/Search';\r\n  import AccountCircle from '@material-ui/icons/AccountCircle';\r\n  import MailIcon from '@material-ui/icons/Mail';\r\n  import NotificationsIcon from '@material-ui/icons/Notifications';\r\n  import MoreIcon from '@material-ui/icons/MoreVert';\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n   \r\n    title: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  }),\r\n  );\r\n  \r\n    return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          \r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Material-UI\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n  }\r\n  \r\n  title: {\r\n    flexGrow: 1,\r\n    backgroundImage: \"url('/images/logo3.png')\",\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'left',\r\n  },\r\n    toolBar: {\r\n    display: 'block',\r\n    '@media (min-width:600px)': {\r\n      display: 'flex',\r\n    },\r\n  \r\n  */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/components/Header.tsx"],"names":["React","useEffect","makeStyles","AppBar","Toolbar","IconButton","PersonAddOutlinedIcon","Badge","ShoppingCartOutlinedIcon","Divider","Logout","MenuBar","setAuth","setIsAuth","setLogout","setBrandId","setTypeId","setName","getBrands","getTypes","useHistory","Logo7","MenuAdmin","connect","alpha","createStyles","InputBase","SearchIcon","useStyles","theme","grow","flexGrow","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","palette","common","black","marginRight","spacing","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","toolBar","Header","auth","isAuth","types","isFetchErrorTypes","history","classes","sessionStorage","getItem","authorizationData","token","email","role","background","root","input","fontSize","push","mapStateToProps","state","devices"],"mappings":"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":["import React, { useEffect } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Logout from './Logout';\r\nimport MenuBar from './MenuBar';\r\nimport {\r\n  setAuth, //записть авторизации в стор\r\n  setIsAuth, // маркер авторизации\r\n  setLogout, // выход из авторизации\r\n  AuthReducerType, //типизация авторизации\r\n  SetAuthActionType, // типизация экшена авторизации\r\n  SetLogoutActionType, // типизация экшена выхода из авторизации\r\n  SetIsAuthActionType, // типизация экшена маркера типизации\r\n} from '../store/reducer/authReducer';\r\nimport {\r\n  TypeDeviceType, //типизация типа\r\n  setTypeIdActionType, //типизация экшена\r\n  setBrandIdActionType, //типтзация экшена\r\n  setNameActionType, // типизация экшен\r\n  setBrandId, //запись в стейт выбранного брэнда\r\n  setTypeId, //запись в стейт выбранного типа\r\n  setName, //запись имени товара(для поиска)\r\n} from '../store/reducer/deviceReducer';\r\nimport { getBrands, getTypes } from '../action/deviceAction'; //запрос на получениe типов устройств\r\nimport { RootStateType } from '../store/store'; //типизация всего стейта\r\nimport { useHistory } from 'react-router-dom';\r\nimport Logo7 from '../img/logo7.png';\r\nimport MenuAdmin from './MenuAdmin';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { alpha, createStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n//типизация--------------------------------\r\ntype MapStateToPropsType = {\r\n  isAuth: boolean;\r\n  auth: AuthReducerType;\r\n  types: TypeDeviceType[];\r\n  isFetchErrorTypes: boolean;\r\n};\r\ntype MapDispathPropsType = {\r\n  setAuth: (value: AuthReducerType) => SetAuthActionType;\r\n  setIsAuth: (value: boolean) => SetIsAuthActionType;\r\n  setTypeId: (data: string | null) => setTypeIdActionType;\r\n  setBrandId: (data: string | null) => setBrandIdActionType;\r\n  setName: (data: string | null) => setNameActionType;\r\n  setLogout: () => SetLogoutActionType;\r\n  getTypes: () => void;\r\n  getBrands: () => void;\r\n};\r\ntype PropsType = MapDispathPropsType & MapStateToPropsType;\r\n//-----------------------------------------\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n\r\n    title: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: alpha(theme.palette.common.black, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.black, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'darck',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n\r\n    toolBar: {\r\n      display: 'block',\r\n      '@media (min-width:600px)': {\r\n        display: 'flex',\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst Header: React.FC<PropsType> = ({\r\n  auth,\r\n  isAuth,\r\n  types,\r\n  isFetchErrorTypes,\r\n  setAuth,\r\n  setLogout,\r\n  setIsAuth,\r\n  getTypes,\r\n  getBrands,\r\n  setBrandId,\r\n  setTypeId,\r\n}) => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setIsAuth(!!sessionStorage.getItem('token')); //берём токен из sessionStorage и приводим его к булевому значению\r\n\r\n    const authorizationData: AuthReducerType = {\r\n      //берём данные из sessionStorage и записываем в стор\r\n      token: sessionStorage.getItem('token'),\r\n      email: sessionStorage.getItem('email'),\r\n      role: sessionStorage.getItem('role'),\r\n    };\r\n    setAuth(authorizationData);\r\n    // загрузка типов устройств\r\n    getTypes();\r\n    // загрузка брендов\r\n    getBrands();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ background: '#fff', padding: '0' }}\r\n        elevation={0}\r\n      >\r\n        <Toolbar className={classes.toolBar}>\r\n          <div>\r\n            <img src={Logo7} style={{ height: '100px', width: 'auto' }} />\r\n          </div>\r\n          <div className={classes.grow}>\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search…\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {isAuth && auth.role === 'ADMIN' && <MenuAdmin />}\r\n          {isAuth ? (\r\n            <>\r\n              <IconButton color=\"inherit\">\r\n                <Badge badgeContent={3} color=\"secondary\">\r\n                  <ShoppingCartOutlinedIcon\r\n                    style={{ fontSize: '35px', color: 'black' }}\r\n                  />\r\n                </Badge>\r\n              </IconButton>\r\n              <Logout setLogout={setLogout} />\r\n            </>\r\n          ) : (\r\n            <IconButton onClick={() => history.push('/login')}>\r\n              <PersonAddOutlinedIcon\r\n                style={{ fontSize: '35px', color: 'black' }}\r\n              />\r\n            </IconButton>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Divider />\r\n      <MenuBar\r\n        types={types}\r\n        setBrandId={setBrandId}\r\n        setTypeId={setTypeId}\r\n        isFetchErrorTypes={isFetchErrorTypes}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n  return {\r\n    isAuth: state.auth.isAuth, //  маркер авторизации\r\n    auth: state.auth.auth, //авторизация для role\r\n    types: state.devices.types, //  типы устройств\r\n    isFetchErrorTypes: state.devices.isFetchErrorTypes, //ошибка загруки типов устройств\r\n  };\r\n};\r\nexport default connect<\r\n  MapStateToPropsType,\r\n  MapDispathPropsType,\r\n  unknown, // личные пропсы\r\n  RootStateType\r\n>(mapStateToProps, {\r\n  setAuth,\r\n  setLogout,\r\n  setIsAuth,\r\n  getTypes,\r\n  getBrands,\r\n  setBrandId,\r\n  setTypeId,\r\n  setName,\r\n})(Header);\r\n\r\n{\r\n  /* \r\n\r\nimport { alpha, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n   \r\n    title: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          \r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Material-UI\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\ntitle: {\r\n    flexGrow: 1,\r\n    backgroundImage: \"url('/images/logo3.png')\",\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'left',\r\n  },\r\n\r\n  toolBar: {\r\n    display: 'block',\r\n    '@media (min-width:600px)': {\r\n      display: 'flex',\r\n    },\r\n\r\n\r\n*/\r\n}\r\n"]},"metadata":{},"sourceType":"module"}