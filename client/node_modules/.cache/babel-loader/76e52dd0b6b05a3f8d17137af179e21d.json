{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\pages\\\\Content.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Box, Container, Divider } from '@material-ui/core';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { useLocation, useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport PaginationItem from '@material-ui/lab/PaginationItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TypeBar from '../components/TypeBar';\nimport ImageContainer from '../components/ImageContainer';\nimport DeviceContainer from '../components/DeviceContainer';\n//типизиция всего стора\nimport { setTypeId, //запись выбранного типа устройства\nsetBrandId //запись выбранного  брэнда устройства\n} from '../store/reducer/deviceReducer';\n//типизация данных\nimport { getDevices, //запрос на получение устройств\ngetTypes //запрос на получение типов\n} from '../action/deviceAction';\nimport byk1 from '../img/byk1.jpg';\nimport planshet1 from '../img/planshet1.jpg';\nimport reclama1 from '../img/reclama1.jpg';\nimport { connect } from 'react-redux'; //типизация--------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//-----------------------------------------\nconst useStyles = makeStyles(theme => createStyles({\n  pagination: {\n    '& > *': {\n      marginTop: theme.spacing(7)\n    },\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginBottom: theme.spacing(7)\n  },\n  textTitle: {\n    marginTop: '25px'\n  }\n}));\n\nconst Content = ({\n  getDevices,\n  setTypeId,\n  setBrandId,\n  name,\n  devices,\n  types,\n  brands,\n  pageQty,\n  limit,\n  typeId,\n  brandId,\n  isLoadinDevice,\n  isFetchErrorDevice,\n  isLoadinTypes,\n  isFetchErrorTypes\n}) => {\n  _s();\n\n  var _location$search;\n\n  const classes = useStyles();\n  const history = useHistory(); //для изменения строки запроса\n  // console.log('история', history);\n\n  const location = useLocation(); // для получения строки запроса\n\n  const searchPage = parseInt(((_location$search = location.search) === null || _location$search === void 0 ? void 0 : _location$search.split('=')[1]) || '1'); // получаем число страницы из строки запроса\n  // console.log(searchPage);\n  // пагинация, данные о текущей странице( по умолчанию: 1 или, если есть ,информация о текущей странице в адресной строке )\n\n  const [page, setPage] = useState(searchPage); // console.log('номер страницы:', page);\n  // изменения текущей страницы\n\n  const handleChange = (event, value) => {\n    setPage(value);\n  }; //костыль,чтобы синхронизировать пагинацию и строку запроса\n\n\n  useEffect(() => {\n    if (history.action === 'POP') {\n      setPage(searchPage);\n    } // eslint-disable-next-line\n\n  }, [searchPage]); // запрос на сервак для получения устройств(фильтруем устройства по типу и бренду,а также пагинация)\n\n  useEffect(() => {\n    // console.log('рендеринг');\n    getDevices(null, null, limit, page, name, setPage, history); // eslint-disable-next-line\n  }, [page]); // запрос на сервак для получения типов устройств\n\n  useEffect(() => {\n    getTypes(); // eslint-disable-next-line\n  }, []); //console.log(devices);\n  // console.log(info);\n  // console.log('рендеринг');\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ImageContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 10,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              marginTop: '115px',\n              fontWeight: 'bold'\n            },\n            children: [' ', \"\\u041A\\u0430\\u0442\\u0430\\u043B\\u043E\\u0433 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), isFetchErrorTypes ? /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            color: \"error\",\n            className: classes.textTitle,\n            children: \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this) : isLoadinTypes ? /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            style: {\n              height: window.innerHeight - 65.6\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this) : types.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            className: classes.textTitle,\n            children: \"\\u041F\\u043E\\u043A\\u0430 \\u043A\\u0430\\u0442\\u0430\\u043B\\u043E\\u0433 \\u043F\\u0443\\u0441\\u0442 !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(TypeBar, {\n            types: types,\n            setTypeId: setTypeId,\n            setBrandId: setBrandId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '25px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: reclama1,\n              style: {\n                height: '200px',\n                width: 'auto',\n                marginTop: '25px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: planshet1,\n              style: {\n                height: '205px',\n                width: 'auto',\n                marginTop: '25px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: byk1,\n              style: {\n                height: '205px',\n                width: 'auto',\n                marginTop: '25px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 9,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            style: {\n              marginTop: '50px'\n            },\n            children: [' ', \"\\u0412\\u0441\\u0435 \\u0442\\u043E\\u0432\\u0430\\u0440\\u044B\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), isFetchErrorDevice ? /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            color: \"error\",\n            className: classes.textTitle,\n            children: \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this) : isLoadinDevice ? /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            style: {\n              height: window.innerHeight - 65.6\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this) : devices.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            className: classes.textTitle,\n            children: \"\\u041F\\u043E\\u043A\\u0430 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432 \\u043D\\u0435\\u0442!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(DeviceContainer, {\n              devices: devices\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), !!pageQty && /*#__PURE__*/_jsxDEV(Pagination, {\n        className: classes.pagination,\n        count: pageQty,\n        page: page,\n        showFirstButton: true,\n        showLastButton: true,\n        onChange: handleChange // интегрируем роутер\n        ,\n        renderItem: item => /*#__PURE__*/_jsxDEV(PaginationItem, {\n          component: Link,\n          to: `/?page=${item.page}`,\n          ...item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Content, \"VGjEKd9kQFVMjiw+xYKcT8whyGA=\", false, function () {\n  return [useStyles, useHistory, useLocation];\n});\n\n_c = Content;\n\nconst mapStateToProps = state => {\n  return {\n    devices: state.devices.devices,\n    //устройства\n    types: state.devices.types,\n    //типы устройств\n    brands: state.devices.brands,\n    //брэнды устройств\n    name: state.devices.name,\n    // имя для поиска\n    pageQty: state.devices.pageQty,\n    //количества страниц\n    limit: state.devices.limit,\n    //сколько устройств на странице\n    typeId: state.devices.typeId,\n    // айдишник типа\n    brandId: state.devices.brandId,\n    // айдишник брэнда\n    isLoadinDevice: state.devices.isLoadinDevice,\n    //крутилка у стройств\n    isLoadinTypes: state.devices.isLoadinTypes,\n    //крутилка типов\n    isFetchErrorDevice: state.devices.isFetchErrorDevice,\n    //ошибка устройств\n    isFetchErrorTypes: state.devices.isFetchErrorTypes //ошибка типов\n\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getDevices,\n  setTypeId,\n  setBrandId\n})(Content);\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/pages/Content.tsx"],"names":["React","useEffect","useState","Grid","Typography","Box","Container","Divider","makeStyles","createStyles","useLocation","useHistory","Link","Pagination","PaginationItem","CircularProgress","TypeBar","ImageContainer","DeviceContainer","setTypeId","setBrandId","getDevices","getTypes","byk1","planshet1","reclama1","connect","useStyles","theme","pagination","marginTop","spacing","display","flexDirection","justifyContent","marginBottom","textTitle","Content","name","devices","types","brands","pageQty","limit","typeId","brandId","isLoadinDevice","isFetchErrorDevice","isLoadinTypes","isFetchErrorTypes","classes","history","location","searchPage","parseInt","search","split","page","setPage","handleChange","event","value","action","fontWeight","height","window","innerHeight","length","width","item","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box, Container, Divider } from '@material-ui/core';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport { useLocation, useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport PaginationItem from '@material-ui/lab/PaginationItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TypeBar from '../components/TypeBar';\r\nimport ImageContainer from '../components/ImageContainer';\r\nimport DeviceContainer from '../components/DeviceContainer';\r\nimport { RootStateType } from '../store/store'; //типизиция всего стора\r\nimport {\r\n  setTypeId, //запись выбранного типа устройства\r\n  setBrandId, //запись выбранного  брэнда устройства\r\n} from '../store/reducer/deviceReducer';\r\nimport {\r\n  setTypeIdActionType,\r\n  setBrandIdActionType,\r\n} from '../store/reducer/deviceReducer'; // типизация экшенов\r\nimport {\r\n  DeviceType,\r\n  TypeDeviceType,\r\n  BrandType,\r\n} from '../store/reducer/deviceReducer'; //типизация данных\r\nimport {\r\n  getDevices, //запрос на получение устройств\r\n  getTypes, //запрос на получение типов\r\n} from '../action/deviceAction';\r\n\r\nimport byk1 from '../img/byk1.jpg';\r\nimport planshet1 from '../img/planshet1.jpg';\r\nimport reclama1 from '../img/reclama1.jpg';\r\nimport { connect } from 'react-redux';\r\n\r\n//типизация--------------------------------\r\ntype MapStateToPropsType = {\r\n  devices: DeviceType[];\r\n  types: TypeDeviceType[];\r\n  name: string | null;\r\n  brands: BrandType[];\r\n  pageQty: number;\r\n  limit: number;\r\n  typeId: string | null;\r\n  brandId: string | null;\r\n  isLoadinDevice: boolean;\r\n  isFetchErrorDevice: boolean;\r\n  isLoadinTypes: boolean;\r\n  isFetchErrorTypes: boolean;\r\n};\r\ntype MapDispathPropsType = {\r\n  getDevices: (\r\n    typeId: string | null,\r\n    brandId: string | null,\r\n    limit: number,\r\n    page: number,\r\n    name: string | null,\r\n    setPage: React.Dispatch<React.SetStateAction<number>>,\r\n    history: any\r\n  ) => void;\r\n  setTypeId: (data: string | null) => setTypeIdActionType;\r\n  setBrandId: (data: string | null) => setBrandIdActionType;\r\n};\r\n\r\ntype PropsType = MapDispathPropsType & MapStateToPropsType;\r\n//-----------------------------------------\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    pagination: {\r\n      '& > *': {\r\n        marginTop: theme.spacing(7),\r\n      },\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      marginBottom: theme.spacing(7),\r\n    },\r\n    textTitle: {\r\n      marginTop: '25px',\r\n    },\r\n  })\r\n);\r\n\r\nconst Content: React.FC<PropsType> = ({\r\n  getDevices,\r\n  setTypeId,\r\n  setBrandId,\r\n  name,\r\n  devices,\r\n  types,\r\n  brands,\r\n  pageQty,\r\n  limit,\r\n  typeId,\r\n  brandId,\r\n  isLoadinDevice,\r\n  isFetchErrorDevice,\r\n  isLoadinTypes,\r\n  isFetchErrorTypes,\r\n}) => {\r\n  const classes = useStyles();\r\n  const history = useHistory(); //для изменения строки запроса\r\n  // console.log('история', history);\r\n  const location = useLocation(); // для получения строки запроса\r\n  const searchPage = parseInt(location.search?.split('=')[1] || '1'); // получаем число страницы из строки запроса\r\n  // console.log(searchPage);\r\n  // пагинация, данные о текущей странице( по умолчанию: 1 или, если есть ,информация о текущей странице в адресной строке )\r\n\r\n  const [page, setPage] = useState(searchPage);\r\n\r\n  // console.log('номер страницы:', page);\r\n  // изменения текущей страницы\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setPage(value);\r\n  };\r\n  //костыль,чтобы синхронизировать пагинацию и строку запроса\r\n  useEffect(() => {\r\n    if (history.action === 'POP') {\r\n      setPage(searchPage);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [searchPage]);\r\n\r\n  // запрос на сервак для получения устройств(фильтруем устройства по типу и бренду,а также пагинация)\r\n  useEffect(() => {\r\n    // console.log('рендеринг');\r\n    getDevices(null, null, limit, page, name, setPage, history);\r\n    // eslint-disable-next-line\r\n  }, [page]);\r\n  // запрос на сервак для получения типов устройств\r\n  useEffect(() => {\r\n    getTypes();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  //console.log(devices);\r\n\r\n  // console.log(info);\r\n  // console.log('рендеринг');\r\n\r\n  return (\r\n    <>\r\n      <ImageContainer />\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={10}>\r\n          <Grid item xs={12} sm={3}>\r\n            <Typography style={{ marginTop: '115px', fontWeight: 'bold' }}>\r\n              {' '}\r\n              Каталог товаров\r\n            </Typography>\r\n            {isFetchErrorTypes ? (\r\n              <Typography\r\n                align=\"center\"\r\n                color=\"error\"\r\n                className={classes.textTitle}\r\n              >\r\n                Что-то пошло не так!\r\n              </Typography>\r\n            ) : isLoadinTypes ? (\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                style={{ height: window.innerHeight - 65.6 }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : types.length === 0 ? (\r\n              <Typography align=\"center\" className={classes.textTitle}>\r\n                Пока каталог пуст !\r\n              </Typography>\r\n            ) : (\r\n              <TypeBar\r\n                types={types}\r\n                setTypeId={setTypeId}\r\n                setBrandId={setBrandId}\r\n              />\r\n            )}\r\n            <div style={{ marginBottom: '25px' }}>\r\n              <img\r\n                src={reclama1}\r\n                style={{ height: '200px', width: 'auto', marginTop: '25px' }}\r\n              />\r\n              <img\r\n                src={planshet1}\r\n                style={{ height: '205px', width: 'auto', marginTop: '25px' }}\r\n              />\r\n              <img\r\n                src={byk1}\r\n                style={{ height: '205px', width: 'auto', marginTop: '25px' }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} sm={9}>\r\n            <Typography variant=\"h6\" style={{ marginTop: '50px' }}>\r\n              {' '}\r\n              Все товары\r\n            </Typography>\r\n            <Divider />\r\n            {isFetchErrorDevice ? (\r\n              <Typography\r\n                align=\"center\"\r\n                color=\"error\"\r\n                className={classes.textTitle}\r\n              >\r\n                Что-то пошло не так!\r\n              </Typography>\r\n            ) : isLoadinDevice ? (\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                style={{ height: window.innerHeight - 65.6 }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : devices.length === 0 ? (\r\n              <Typography align=\"center\" className={classes.textTitle}>\r\n                Пока товаров нет!\r\n              </Typography>\r\n            ) : (\r\n              <>\r\n                <DeviceContainer devices={devices} />\r\n              </>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        {!!pageQty && (\r\n          <Pagination\r\n            className={classes.pagination}\r\n            count={pageQty}\r\n            page={page}\r\n            showFirstButton\r\n            showLastButton\r\n            onChange={handleChange}\r\n            // интегрируем роутер\r\n            renderItem={(item) => (\r\n              <PaginationItem\r\n                component={Link}\r\n                to={`/?page=${item.page}`}\r\n                {...item}\r\n              />\r\n            )}\r\n          />\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n  return {\r\n    devices: state.devices.devices, //устройства\r\n    types: state.devices.types, //типы устройств\r\n    brands: state.devices.brands, //брэнды устройств\r\n    name: state.devices.name, // имя для поиска\r\n    pageQty: state.devices.pageQty, //количества страниц\r\n    limit: state.devices.limit, //сколько устройств на странице\r\n    typeId: state.devices.typeId, // айдишник типа\r\n    brandId: state.devices.brandId, // айдишник брэнда\r\n    isLoadinDevice: state.devices.isLoadinDevice, //крутилка у стройств\r\n    isLoadinTypes: state.devices.isLoadinTypes, //крутилка типов\r\n    isFetchErrorDevice: state.devices.isFetchErrorDevice, //ошибка устройств\r\n    isFetchErrorTypes: state.devices.isFetchErrorTypes, //ошибка типов\r\n  };\r\n};\r\nexport default connect<\r\n  MapStateToPropsType,\r\n  MapDispathPropsType,\r\n  unknown, // личные пропсы\r\n  RootStateType\r\n>(mapStateToProps, {\r\n  getDevices,\r\n  setTypeId,\r\n  setBrandId,\r\n})(Content);\r\n"]},"metadata":{},"sourceType":"module"}