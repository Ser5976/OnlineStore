{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\components\\\\DeviceContainer.tsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Masonry from 'react-masonry-css'; // контейнерный компонент для стиля(расположение элементов)\n\nimport Device from './Device';\nimport Grid from '@material-ui/core/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//-------------------------\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}));\nconst breakpoints = {\n  default: 4,\n  1100: 2,\n  700: 1\n}; // это для Masonry,компонент регулирет расположение карточек(отдельно установлен)\n\nconst Devices = ({\n  devices,\n  totalCount,\n  limit,\n  setCurrentPage\n}) => {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    sm: 10,\n    children: /*#__PURE__*/_jsxDEV(Masonry, {\n      breakpointCols: breakpoints,\n      className: \"my-masonry-grid\",\n      columnClassName: \"my-masonry-grid_column\",\n      children: devices.map(item => {\n        return /*#__PURE__*/_jsxDEV(Device, {\n          item: item\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Devices;\nexport default Devices;\n\nvar _c;\n\n$RefreshReg$(_c, \"Devices\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/components/DeviceContainer.tsx"],"names":["React","makeStyles","Masonry","Device","Grid","useStyles","theme","root","padding","spacing","breakpoints","default","Devices","devices","totalCount","limit","setCurrentPage","map","item","Math","random"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAASC,UAAT,QAAkC,0BAAlC;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CAAyC;;AACzC,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAaA;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAmB;AAC9CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADL;AADwC,CAAnB,CAAD,CAA5B;AAMA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,OAAO,EAAE,CADS;AAElB,QAAM,CAFY;AAGlB,OAAK;AAHa,CAApB,C,CAIG;;AACH,MAAMC,OAA4B,GAAG,CAAC;AACpCC,EAAAA,OADoC;AAEpCC,EAAAA,UAFoC;AAGpCC,EAAAA,KAHoC;AAIpCC,EAAAA;AAJoC,CAAD,KAK/B;AACJ,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAAA,2BACE,QAAC,OAAD;AACE,MAAA,cAAc,EAAEN,WADlB;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,MAAA,eAAe,EAAC,wBAHlB;AAAA,gBAKGG,OAAO,CAACI,GAAR,CAAaC,IAAD,IAAU;AACrB,4BAAO,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAEA;AAAd,WAAyBC,IAAI,CAACC,MAAL,EAAzB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAnBD;;KAAMR,O;AAqBN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Masonry from 'react-masonry-css'; // контейнерный компонент для стиля(расположение элементов)\r\nimport Device from './Device';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  DeviceType,\r\n  setCurrentPageActionType,\r\n} from '../store/reducer/deviceReducer';\r\n\r\n//----типизация пропсов----\r\ntype PropsType = {\r\n  devices: DeviceType[];\r\n  totalCount: number;\r\n  limit: number;\r\n  setCurrentPage: (data: number) => setCurrentPageActionType;\r\n};\r\n//-------------------------\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst breakpoints = {\r\n  default: 4,\r\n  1100: 2,\r\n  700: 1,\r\n}; // это для Masonry,компонент регулирет расположение карточек(отдельно установлен)\r\nconst Devices: React.FC<PropsType> = ({\r\n  devices,\r\n  totalCount,\r\n  limit,\r\n  setCurrentPage,\r\n}) => {\r\n  return (\r\n    <Grid item xs={12} sm={10}>\r\n      <Masonry\r\n        breakpointCols={breakpoints}\r\n        className=\"my-masonry-grid\"\r\n        columnClassName=\"my-masonry-grid_column\"\r\n      >\r\n        {devices.map((item) => {\r\n          return <Device item={item} key={Math.random()} />;\r\n        })}\r\n      </Masonry>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Devices;\r\n"]},"metadata":{},"sourceType":"module"}