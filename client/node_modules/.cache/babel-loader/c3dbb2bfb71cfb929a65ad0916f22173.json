{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\components\\\\Logout.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { useHistory } from 'react-router-dom'; //типизация--------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n//-----------------------------------------\nconst Logout = ({\n  setLogout\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"account of current user\",\n      \"aria-controls\": \"menu-appbar\",\n      \"aria-haspopup\": \"true\",\n      onClick: handleMenu,\n      color: \"inherit\",\n      children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"menu-appbar\",\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      keepMounted: true,\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      open: open,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => {\n          setLogout(); // удаление данных из sessionStorage\n\n          sessionStorage.removeItem('token');\n          sessionStorage.removeItem('username');\n          history.push('/');\n        },\n        children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Logout, \"rPV2B6xweC6TRDKQ1cD3xc5mi/U=\", false, function () {\n  return [useHistory];\n});\n\n_c = Logout;\nexport default Logout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/components/Logout.tsx"],"names":["React","IconButton","AccountCircle","MenuItem","Menu","useHistory","Logout","setLogout","history","anchorEl","setAnchorEl","useState","open","Boolean","handleMenu","event","currentTarget","handleClose","vertical","horizontal","sessionStorage","removeItem","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;;;;;AAEA;AAEA,MAAMC,MAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACrD,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BV,KAAK,CAACW,QAAN,CAAmC,IAAnC,CAAhC;AACA,QAAMC,IAAI,GAAGC,OAAO,CAACJ,QAAD,CAApB;;AAEA,QAAMK,UAAU,GAAIC,KAAD,IAA0C;AAC3DL,IAAAA,WAAW,CAACK,KAAK,CAACC,aAAP,CAAX;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,UAAD;AACE,oBAAW,yBADb;AAEE,uBAAc,aAFhB;AAGE,uBAAc,MAHhB;AAIE,MAAA,OAAO,EAAEI,UAJX;AAKE,MAAA,KAAK,EAAC,SALR;AAAA,6BAOE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,IAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,QAAQ,EAAEL,QAFZ;AAGE,MAAA,YAAY,EAAE;AACZS,QAAAA,QAAQ,EAAE,KADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OAHhB;AAOE,MAAA,WAAW,MAPb;AAQE,MAAA,eAAe,EAAE;AACfD,QAAAA,QAAQ,EAAE,KADK;AAEfC,QAAAA,UAAU,EAAE;AAFG,OARnB;AAYE,MAAA,IAAI,EAAEP,IAZR;AAaE,MAAA,OAAO,EAAEK,WAbX;AAAA,6BAeE,QAAC,QAAD;AACE,QAAA,OAAO,EAAE,MAAM;AACbV,UAAAA,SAAS,GADI,CAEb;;AACAa,UAAAA,cAAc,CAACC,UAAf,CAA0B,OAA1B;AACAD,UAAAA,cAAc,CAACC,UAAf,CAA0B,UAA1B;AACAb,UAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACD,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAwCD,CArDD;;GAAMhB,M;UACYD,U;;;KADZC,M;AAsDN,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { SetLogoutActionType } from '../store/reducer/authReducer';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//типизация--------------------------------\r\ntype PropsType = { setLogout: () => SetLogoutActionType };\r\n//-----------------------------------------\r\n\r\nconst Logout: React.FC<PropsType> = ({ setLogout }) => {\r\n  const history = useHistory();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        aria-label=\"account of current user\"\r\n        aria-controls=\"menu-appbar\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleMenu}\r\n        color=\"inherit\"\r\n      >\r\n        <AccountCircle />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"menu-appbar\"\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        keepMounted\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            setLogout();\r\n            // удаление данных из sessionStorage\r\n            sessionStorage.removeItem('token');\r\n            sessionStorage.removeItem('username');\r\n            history.push('/');\r\n          }}\r\n        >\r\n          Выйти\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\nexport default Logout;\r\n"]},"metadata":{},"sourceType":"module"}