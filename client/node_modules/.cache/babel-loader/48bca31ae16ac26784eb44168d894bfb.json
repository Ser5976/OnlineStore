{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\pages\\\\ProfileDevice.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n// типизация всего стейта( для типизации state)\nimport { getSelectedDevice } from '../action/deviceAction';\nimport { connect } from 'react-redux'; //типизация---------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//-----------------------------------------------------------------\nconst useStyles = makeStyles(theme => ({}));\n\nconst ProfileDevice = ({\n  getSelectedDevice,\n  selectedDevice\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    id\n  } = useParams(); //  хук роутера ,который помогает получить значение params\n\n  console.log(selectedDevice);\n  useEffect(() => {\n    getSelectedDevice(id); // eslint-disable-next-line\n  }, []);\n  const {\n    name,\n    picture,\n    price,\n    info\n  } = selectedDevice;\n  let params;\n  info.length !== 0 ? params = [...info] : params = []; //console.log(params);\n\n  let image;\n  picture.length !== 0 ? image = [...picture] : image = [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"\\u042F \\u0442\\u0443\\u0442\\u0430\", JSON.stringify(selectedDevice)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileDevice, \"73SEqc3PxR30cJdZ/9QZxhpi9/I=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = ProfileDevice;\n\nconst mapStateToProps = state => {\n  return {\n    selectedDevice: state.devices.selectedDevice\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getSelectedDevice\n})(ProfileDevice);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileDevice\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/pages/ProfileDevice.tsx"],"names":["React","useEffect","useParams","makeStyles","getSelectedDevice","connect","useStyles","theme","ProfileDevice","selectedDevice","classes","id","console","log","name","picture","price","info","params","length","image","JSON","stringify","mapStateToProps","state","devices"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,QAAkC,0BAAlC;AACgD;AAChD,SAASC,iBAAT,QAAkC,wBAAlC;AAEA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;;AAWA;AACA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY,EAAZ,CAAD,CAA5B;;AAEA,MAAMC,aAAkC,GAAG,CAAC;AAC1CJ,EAAAA,iBAD0C;AAE1CK,EAAAA;AAF0C,CAAD,KAGrC;AAAA;;AACJ,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAST,SAAS,EAAxB,CAFI,CAEoC;;AACxCU,EAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAZ;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,iBAAiB,CAACO,EAAD,CAAjB,CADc,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAIA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,MAAiCR,cAAvC;AAEA,MAAIS,MAAJ;AACAD,EAAAA,IAAI,CAACE,MAAL,KAAgB,CAAhB,GAAqBD,MAAM,GAAG,CAAC,GAAGD,IAAJ,CAA9B,GAA4CC,MAAM,GAAG,EAArD,CAXI,CAYJ;;AACA,MAAIE,KAAJ;AACAL,EAAAA,OAAO,CAACI,MAAR,KAAmB,CAAnB,GAAwBC,KAAK,GAAG,CAAC,GAAGL,OAAJ,CAAhC,GAAiDK,KAAK,GAAG,EAAzD;AACA,sBACE;AAAA,kDAEGC,IAAI,CAACC,SAAL,CAAeb,cAAf,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAxBD;;GAAMD,a;UAIYF,S,EACDJ,S;;;KALXM,a;;AA0BN,MAAMe,eAAe,GAAIC,KAAD,IAA+C;AACrE,SAAO;AACLf,IAAAA,cAAc,EAAEe,KAAK,CAACC,OAAN,CAAchB;AADzB,GAAP;AAGD,CAJD;;AAKA,eAAeJ,OAAO,CAKpBkB,eALoB,EAKH;AAAEnB,EAAAA;AAAF,CALG,CAAP,CAK2BI,aAL3B,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { RootStateType } from '../store/store'; // типизация всего стейта( для типизации state)\r\nimport { getSelectedDevice } from '../action/deviceAction';\r\nimport { DeviceType, InfoType } from '../store/reducer/deviceReducer';\r\nimport { connect } from 'react-redux';\r\n\r\n//типизация---------------------------------------------------------------------\r\ntype MapStateToPropsType = {\r\n  selectedDevice: DeviceType;\r\n};\r\ntype MapDispathPropsType = {\r\n  getSelectedDevice: (id: string) => void;\r\n};\r\ntype PropsType = MapStateToPropsType & MapDispathPropsType;\r\ntype ParamsType = {\r\n  id: string;\r\n};\r\n//-----------------------------------------------------------------\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nconst ProfileDevice: React.FC<PropsType> = ({\r\n  getSelectedDevice,\r\n  selectedDevice,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { id } = useParams<ParamsType>(); //  хук роутера ,который помогает получить значение params\r\n  console.log(selectedDevice);\r\n  useEffect(() => {\r\n    getSelectedDevice(id);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  const { name, picture, price, info } = selectedDevice;\r\n\r\n  let params: InfoType[];\r\n  info.length !== 0 ? (params = [...info]) : (params = []);\r\n  //console.log(params);\r\n  let image: string[];\r\n  picture.length !== 0 ? (image = [...picture]) : (image = []);\r\n  return (\r\n    <div>\r\n      Я тута\r\n      {JSON.stringify(selectedDevice)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n  return {\r\n    selectedDevice: state.devices.selectedDevice,\r\n  };\r\n};\r\nexport default connect<\r\n  MapStateToPropsType,\r\n  MapDispathPropsType,\r\n  unknown, // первичные пропсы\r\n  RootStateType\r\n>(mapStateToProps, { getSelectedDevice })(ProfileDevice);\r\n"]},"metadata":{},"sourceType":"module"}