{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\pages\\\\AddDevicesContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport DeviceData from '../components/DeviceData';\nimport DeviceProperty from '../components/DeviceProperty';\nimport Step3 from '../components/Step3';\n//типизиция всего стора\nimport { //типизация типов\n//типизация брэндов\n//типизация добаленного девайса\nsetAddedDevice //типизация экшена\n} from '../store/reducer/deviceReducer';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackSharpIcon from '@material-ui/icons/ArrowBackSharp';\nimport { connect } from 'react-redux'; //типизация--------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//-----------------------------------------\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(3)\n    }\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5)\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  }\n}));\nconst steps = ['Данные о товаре', 'Добавить новые данные', 'Результат'];\n\nconst AddDevicesContainer = ({\n  types,\n  //типы\n  brands,\n  //брэнды\n  addedDevice,\n  //добавленный девайс\n  setAddedDevice //запись добавленного девайса в стейт\n\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const getStepContent = step => {\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(DeviceData, {\n          types: types,\n          brands: brands,\n          handleNext: handleNext,\n          setAddedDevice: setAddedDevice,\n          addedDevice: addedDevice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(DeviceProperty, {\n          handleNext: handleNext,\n          setAddedDevice: setAddedDevice,\n          addedDevice: addedDevice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Step3, {\n          setAddedDevice: setAddedDevice,\n          addedDevice: addedDevice,\n          handleNext: handleNext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this);\n\n      default:\n        throw new Error('Unknown step');\n    }\n  };\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.layout,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        align: \"center\",\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u043E\\u0432\\u0430\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        className: classes.stepper,\n        children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: activeStep === steps.length ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: \"Thank you for your order.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Your order number is #2001539. We have emailed your order confirmation, and will send you an update when your order has shipped.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [getStepContent(activeStep), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.buttons,\n            children: [activeStep !== 0 && /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleBack,\n              className: classes.button,\n              children: /*#__PURE__*/_jsxDEV(ArrowBackSharpIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this), activeStep === steps.length - 1 && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\" // onClick={handleNext}\n              ,\n              className: classes.button,\n              children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddDevicesContainer, \"5/ANSN4aidVPv0P4apAyeUUfwXQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddDevicesContainer;\n\nconst mapStateToProps = state => {\n  return {\n    types: state.devices.types,\n    brands: state.devices.brands,\n    addedDevice: state.devices.addedDevice\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setAddedDevice\n})(AddDevicesContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddDevicesContainer\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/pages/AddDevicesContainer.tsx"],"names":["React","makeStyles","Paper","Stepper","Step","StepLabel","Button","Typography","DeviceData","DeviceProperty","Step3","setAddedDevice","IconButton","ArrowBackSharpIcon","connect","useStyles","theme","layout","width","marginLeft","spacing","marginRight","breakpoints","up","paper","marginTop","marginBottom","padding","stepper","buttons","display","justifyContent","button","steps","AddDevicesContainer","types","brands","addedDevice","classes","activeStep","setActiveStep","useState","getStepContent","step","handleNext","Error","handleBack","map","label","length","mapStateToProps","state","devices"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeviceData from '../components/DeviceData';\r\nimport DeviceProperty from '../components/DeviceProperty';\r\nimport Step3 from '../components/Step3';\r\nimport { RootStateType } from '../store/store'; //типизиция всего стора\r\nimport {\r\n  TypeDeviceType, //типизация типов\r\n  BrandType, //типизация брэндов\r\n  DeviceType, //типизация добаленного девайса\r\n  setAddedDevice, //экшен запись добавленного девайса в стейт\r\n  setAddedDeviceActionType, //типизация экшена\r\n} from '../store/reducer/deviceReducer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackSharpIcon from '@material-ui/icons/ArrowBackSharp';\r\nimport { connect } from 'react-redux';\r\n\r\n//типизация--------------------------------\r\ntype MapStateToPropsType = {\r\n  types: TypeDeviceType[];\r\n  brands: BrandType[];\r\n  addedDevice: DeviceType;\r\n};\r\ntype MapDispathPropsType = {\r\n  setAddedDevice: (data: DeviceType) => setAddedDeviceActionType;\r\n};\r\n\r\ntype PropsType = MapDispathPropsType & MapStateToPropsType;\r\n//-----------------------------------------\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst steps = ['Данные о товаре', 'Добавить новые данные', 'Результат'];\r\n\r\nconst AddDevicesContainer: React.FC<PropsType> = ({\r\n  types, //типы\r\n  brands, //брэнды\r\n  addedDevice, //добавленный девайс\r\n  setAddedDevice, //запись добавленного девайса в стейт\r\n}) => {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const getStepContent = (step: number): JSX.Element => {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <DeviceData\r\n            types={types}\r\n            brands={brands}\r\n            handleNext={handleNext}\r\n            setAddedDevice={setAddedDevice}\r\n            addedDevice={addedDevice}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <DeviceProperty\r\n            handleNext={handleNext}\r\n            setAddedDevice={setAddedDevice}\r\n            addedDevice={addedDevice}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <Step3\r\n            setAddedDevice={setAddedDevice}\r\n            addedDevice={addedDevice}\r\n            handleNext={handleNext}\r\n          />\r\n        );\r\n      default:\r\n        throw new Error('Unknown step');\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  return (\r\n    <main className={classes.layout}>\r\n      <Paper className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\" align=\"center\">\r\n          Добавить товар\r\n        </Typography>\r\n        <Stepper activeStep={activeStep} className={classes.stepper}>\r\n          {steps.map((label) => (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n        <React.Fragment>\r\n          {activeStep === steps.length ? (\r\n            <React.Fragment>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                Thank you for your order.\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                Your order number is #2001539. We have emailed your order\r\n                confirmation, and will send you an update when your order has\r\n                shipped.\r\n              </Typography>\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              {getStepContent(activeStep)}\r\n              <div className={classes.buttons}>\r\n                {activeStep !== 0 && (\r\n                  <IconButton onClick={handleBack} className={classes.button}>\r\n                    <ArrowBackSharpIcon />\r\n                  </IconButton>\r\n                )}\r\n                {activeStep === steps.length - 1 && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    // onClick={handleNext}\r\n                    className={classes.button}\r\n                  >\r\n                    Сохранить\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </React.Fragment>\r\n      </Paper>\r\n    </main>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n  return {\r\n    types: state.devices.types,\r\n    brands: state.devices.brands,\r\n    addedDevice: state.devices.addedDevice,\r\n  };\r\n};\r\nexport default connect<\r\n  MapStateToPropsType,\r\n  MapDispathPropsType,\r\n  unknown, // личные пропсы\r\n  RootStateType\r\n>(mapStateToProps, { setAddedDevice })(AddDevicesContainer);\r\n"]},"metadata":{},"sourceType":"module"}