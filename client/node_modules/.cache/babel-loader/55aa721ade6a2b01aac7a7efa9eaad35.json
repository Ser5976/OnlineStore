{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\components\\\\DeviceContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Grid, Typography, Divider } from '@material-ui/core';\nimport Masonry from 'react-masonry-css'; // контейнерный компонент для стиля(расположение элементов)\n\nimport Device from './Device';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useHistory } from 'react-router-dom';\nimport byk1 from '../img/byk1.jpg';\nimport planshet1 from '../img/planshet1.jpg';\nimport reclama1 from '../img/reclama1.jpg'; //----типизация пропсов----\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//-------------------------\nconst useStyles = makeStyles(theme => ({}));\nconst breakpoints = {\n  default: 3,\n  1100: 2,\n  700: 1\n}; // это для Masonry,компонент регулирет расположение карточек(отдельно установлен)\n\nconst DeviceContainer = ({\n  devices,\n  // устройства\n  types,\n  // типы устройств\n  setTypeId,\n  // запись типа устройства в стейт\n  setBrandId,\n  //запись брэнда устройства в стейт\n  auth,\n  isAuth,\n  removeDevice\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory(); //запись выбранного типа устройства в стейт и удаление существующего брэнда из стейта и маршрутизация\n\n  const handleDevice = id => {\n    history.push(`/profileType/${id}`);\n    setTypeId(id);\n    setBrandId(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 10,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              marginTop: '115px',\n              fontWeight: 'bold'\n            },\n            children: [' ', \"\\u041A\\u0430\\u0442\\u0430\\u043B\\u043E\\u0433 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            component: \"nav\",\n            \"aria-label\": \"main mailbox folders\",\n            children: types && types.map(type => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  onClick: () => {\n                    handleDevice(type._id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: type.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 23\n                }, this)]\n              }, type._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: reclama1,\n              style: {\n                height: '200px',\n                width: 'auto',\n                marginTop: '25px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: planshet1,\n              style: {\n                height: '205px',\n                width: 'auto',\n                marginTop: '25px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: byk1,\n              style: {\n                height: '205px',\n                width: 'auto',\n                marginTop: '25px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: false,\n          sm: 9,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            style: {\n              marginTop: '50px'\n            },\n            children: [' ', \"\\u0412\\u0441\\u0435 \\u0442\\u043E\\u0432\\u0430\\u0440\\u044B\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Masonry, {\n            breakpointCols: breakpoints,\n            className: \"my-masonry-grid\",\n            columnClassName: \"my-masonry-grid_column\",\n            children: devices.map(item => {\n              return /*#__PURE__*/_jsxDEV(Device, {\n                item: item,\n                auth: auth,\n                isAuth: isAuth,\n                removeDevice: removeDevice\n              }, Math.random(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(DeviceContainer, \"cXZz/rbrhPrjL6gJaTc75NCtuak=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = DeviceContainer;\nexport default DeviceContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeviceContainer\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/components/DeviceContainer.tsx"],"names":["React","makeStyles","Container","Grid","Typography","Divider","Masonry","Device","List","ListItem","ListItemText","useHistory","byk1","planshet1","reclama1","useStyles","theme","breakpoints","default","DeviceContainer","devices","types","setTypeId","setBrandId","auth","isAuth","removeDevice","classes","history","handleDevice","id","push","marginTop","fontWeight","map","type","_id","name","height","width","item","Math","random"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Container, Grid, Typography, Divider } from '@material-ui/core';\r\nimport Masonry from 'react-masonry-css'; // контейнерный компонент для стиля(расположение элементов)\r\nimport Device from './Device';\r\nimport { DeviceType } from '../store/reducer/deviceReducer'; //типизация устройств\r\nimport { AuthReducerType } from '../store/reducer/authReducer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  TypeDeviceType, // типизация типов устройст\r\n  setBrandIdActionType, //типизация экшена запись брэнда в стейт\r\n  setTypeIdActionType, //типизация экшена запись типа в стейт\r\n} from '../store/reducer/deviceReducer';\r\nimport byk1 from '../img/byk1.jpg';\r\nimport planshet1 from '../img/planshet1.jpg';\r\nimport reclama1 from '../img/reclama1.jpg';\r\n\r\n//----типизация пропсов----\r\ntype PropsType = {\r\n  devices: DeviceType[];\r\n  types: TypeDeviceType[];\r\n  setTypeId: (data: string | null) => setTypeIdActionType;\r\n  setBrandId: (data: string | null) => setBrandIdActionType;\r\n\r\n  auth: AuthReducerType;\r\n  isAuth: boolean;\r\n  removeDevice: (id: string | undefined) => void;\r\n};\r\n//-------------------------\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({}));\r\n\r\nconst breakpoints = {\r\n  default: 3,\r\n  1100: 2,\r\n  700: 1,\r\n}; // это для Masonry,компонент регулирет расположение карточек(отдельно установлен)\r\nconst DeviceContainer: React.FC<PropsType> = ({\r\n  devices, // устройства\r\n  types, // типы устройств\r\n  setTypeId, // запись типа устройства в стейт\r\n  setBrandId, //запись брэнда устройства в стейт\r\n\r\n  auth,\r\n  isAuth,\r\n  removeDevice,\r\n}) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //запись выбранного типа устройства в стейт и удаление существующего брэнда из стейта и маршрутизация\r\n  const handleDevice = (id: string) => {\r\n    history.push(`/profileType/${id}`);\r\n    setTypeId(id);\r\n    setBrandId(null);\r\n  };\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={10}>\r\n          <Grid item xs={12} sm={3}>\r\n            <Typography style={{ marginTop: '115px', fontWeight: 'bold' }}>\r\n              {' '}\r\n              Каталог товаров\r\n            </Typography>\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n              {types &&\r\n                types.map((type) => {\r\n                  return (\r\n                    <div key={type._id}>\r\n                      <ListItem\r\n                        button\r\n                        onClick={() => {\r\n                          handleDevice(type._id);\r\n                        }}\r\n                      >\r\n                        <ListItemText primary={type.name} />\r\n                      </ListItem>\r\n                      <Divider />\r\n                    </div>\r\n                  );\r\n                })}\r\n            </List>\r\n            <div>\r\n              <img\r\n                src={reclama1}\r\n                style={{ height: '200px', width: 'auto', marginTop: '25px' }}\r\n              />\r\n              <img\r\n                src={planshet1}\r\n                style={{ height: '205px', width: 'auto', marginTop: '25px' }}\r\n              />\r\n              <img\r\n                src={byk1}\r\n                style={{ height: '205px', width: 'auto', marginTop: '25px' }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={false} sm={9}>\r\n            <Typography variant=\"h6\" style={{ marginTop: '50px' }}>\r\n              {' '}\r\n              Все товары\r\n            </Typography>\r\n            <Divider />\r\n            <Masonry\r\n              breakpointCols={breakpoints}\r\n              className=\"my-masonry-grid\"\r\n              columnClassName=\"my-masonry-grid_column\"\r\n            >\r\n              {devices.map((item) => {\r\n                return (\r\n                  <Device\r\n                    item={item}\r\n                    key={Math.random()}\r\n                    auth={auth}\r\n                    isAuth={isAuth}\r\n                    removeDevice={removeDevice}\r\n                  />\r\n                );\r\n              })}\r\n            </Masonry>{' '}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeviceContainer;\r\n"]},"metadata":{},"sourceType":"module"}