{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\pages\\\\ProfileDevice.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n// типизация всего стейта( для типизации state)\nimport { connect } from 'react-redux'; //типизация---------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//-----------------------------------------------------------------\nconst useStyles = makeStyles(theme => ({}));\n\nconst ProfileDevice = ({}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    id\n  } = useParams(); //  хук роутера ,который помогает получить значение params\n\n  useEffect(() => {// eslint-disable-next-line\n  }, []);\n  /* let rat: any;\r\n  Ratings ? (rat = [...Ratings]) : (rat = []);\r\n  //console.log(rat); */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u042F \\u0442\\u0443\\u0442\\u0430\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ProfileDevice, \"73SEqc3PxR30cJdZ/9QZxhpi9/I=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = ProfileDevice;\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default connect(mapStateToProps, {})(ProfileDevice);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileDevice\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/pages/ProfileDevice.tsx"],"names":["React","useEffect","useParams","makeStyles","connect","useStyles","theme","ProfileDevice","classes","id","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,QAAkC,0BAAlC;AACgD;AAEhD,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;;AAOA;AACA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY,EAAZ,CAAD,CAA5B;;AAEA,MAAMC,aAAkC,GAAG,CAAC,EAAD,KAAQ;AAAA;;AACjD,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAASP,SAAS,EAAxB,CAFiD,CAET;;AAExCD,EAAAA,SAAS,CAAC,MAAM,CACd;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA;AACF;AACA;;AACE,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAXD;;GAAMM,a;UACYF,S,EACDH,S;;;KAFXK,a;;AAaN,MAAMG,eAAe,GAAIC,KAAD,IAA+C;AACrE,SAAO,EAAP;AACD,CAFD;;AAGA,eAAeP,OAAO,CAMpBM,eANoB,EAOpB,EAPoB,CAAP,CAQbH,aARa,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { RootStateType } from '../store/store'; // типизация всего стейта( для типизации state)\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n//типизация---------------------------------------------------------------------\r\ntype MapStateToPropsType = {};\r\ntype MapDispathPropsType = {};\r\ntype PropsType = MapStateToPropsType & MapDispathPropsType;\r\ntype ParamsType = {\r\n  id: string;\r\n};\r\n//-----------------------------------------------------------------\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nconst ProfileDevice: React.FC<PropsType> = ({}) => {\r\n  const classes = useStyles();\r\n  const { id } = useParams<ParamsType>(); //  хук роутера ,который помогает получить значение params\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  /* let rat: any;\r\n  Ratings ? (rat = [...Ratings]) : (rat = []);\r\n  //console.log(rat); */\r\n  return <div>Я тута</div>;\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n  return {};\r\n};\r\nexport default connect<\r\n  MapStateToPropsType,\r\n  MapDispathPropsType,\r\n  unknown, // первичные пропсы\r\n  RootStateType\r\n>(\r\n  mapStateToProps,\r\n  {}\r\n)(ProfileDevice);\r\n"]},"metadata":{},"sourceType":"module"}