{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\components\\\\DeviceProperty.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm, useFieldArray, Controller } from 'react-hook-form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardSharpIcon from '@material-ui/icons/ArrowForwardSharp';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport TextField from '@material-ui/core/TextField';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//схема валидации---------------------\n//массива info\nconst schemaInfo = yup.object().shape({\n  title: yup.string().required('Поле обязательное для заполнения'),\n  description: yup.string().required('Поле обязательное для заполнения')\n}); //общая\n\nconst schema = yup.object().shape({\n  info: yup.array().of(schemaInfo).optional()\n}); //-----------------------------------------\n\n/* const info = [\r\n  { title: 'gfgfgfgf', description: 'gfgfg' },\r\n  { title: 'kghkhkhjkj', description: 'dgfbjfgghk' },\r\n]; */\n\nconst useStyles = makeStyles(theme => ({\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-start'\n  }\n}));\n\nconst DeviceProperty = ({\n  addedDevice,\n  setAddedDevice,\n  handleNext\n}) => {\n  _s();\n\n  const {\n    info\n  } = addedDevice;\n  const classes = useStyles();\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      info: info\n    },\n    resolver: yupResolver(schema),\n    mode: 'onBlur'\n  });\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name: 'info'\n  });\n\n  const onSubmit = data => {\n    console.log('data', data);\n    handleNext();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      style: {\n        marginBottom: 15,\n        fontSize: 12\n      },\n      onClick: () => {\n        append({\n          title: '',\n          description: ''\n        });\n      },\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0435 \\u043F\\u043E\\u043B\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), fields.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: `info.${index}.title`,\n            control: control,\n            defaultValue: item.title,\n            render: ({\n              field\n            }) => {\n              var _errors$info, _errors$info$index, _errors$info$index$ti;\n\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \" \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \",\n                ...field,\n                error: !!errors.info,\n                helperText: (errors === null || errors === void 0 ? void 0 : (_errors$info = errors.info) === null || _errors$info === void 0 ? void 0 : (_errors$info$index = _errors$info[index]) === null || _errors$info$index === void 0 ? void 0 : _errors$info$index.title) ? (_errors$info$index$ti = errors.info[index].title) === null || _errors$info$index$ti === void 0 ? void 0 : _errors$info$index$ti.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 7,\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: `info.${index}.description`,\n            control: control,\n            defaultValue: item.description,\n            render: ({\n              field\n            }) => {\n              var _errors$info2, _errors$info2$index, _errors$info$index$de;\n\n              return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                multiline: true,\n                fullWidth: true,\n                label: \" \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \",\n                error: !!errors.info,\n                helperText: (errors === null || errors === void 0 ? void 0 : (_errors$info2 = errors.info) === null || _errors$info2 === void 0 ? void 0 : (_errors$info2$index = _errors$info2[index]) === null || _errors$info2$index === void 0 ? void 0 : _errors$info2$index.description) ? (_errors$info$index$de = errors.info[index].description) === null || _errors$info$index$de === void 0 ? void 0 : _errors$info$index$de.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => remove(index),\n            children: /*#__PURE__*/_jsxDEV(HighlightOffIcon, {\n              style: {\n                fontSize: 30\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(IconButton, {\n      type: \"submit\",\n      style: {\n        color: '#3f51b5'\n      },\n      children: /*#__PURE__*/_jsxDEV(ArrowForwardSharpIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeviceProperty, \"bWS7U8HWK9ygrvvq1Kt3tXHEmeE=\", false, function () {\n  return [useStyles, useForm, useFieldArray];\n});\n\n_c = DeviceProperty;\nexport default DeviceProperty;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeviceProperty\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/components/DeviceProperty.tsx"],"names":["React","useForm","useFieldArray","Controller","makeStyles","IconButton","ArrowForwardSharpIcon","HighlightOffIcon","TextField","yupResolver","yup","Grid","Button","schemaInfo","object","shape","title","string","required","description","schema","info","array","of","optional","useStyles","theme","submit","margin","spacing","buttons","display","justifyContent","DeviceProperty","addedDevice","setAddedDevice","handleNext","classes","control","handleSubmit","formState","errors","defaultValues","resolver","mode","fields","append","remove","name","onSubmit","data","console","log","marginBottom","fontSize","map","item","index","field","message","id","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useForm, useFieldArray, Controller } from 'react-hook-form';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowForwardSharpIcon from '@material-ui/icons/ArrowForwardSharp';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  addedDeviceType,\r\n  InfoType,\r\n  setAddedDeviceActionType,\r\n} from '../store/reducer/deviceReducer'; //типизация данных\r\n\r\n//-----типизация------\r\n\r\n// пропсы\r\ntype PropsType = {\r\n  addedDevice: addedDeviceType;\r\n  setAddedDevice: (data: addedDeviceType) => setAddedDeviceActionType;\r\n  handleNext: () => void;\r\n};\r\n\r\n//схема валидации---------------------\r\n//массива info\r\nconst schemaInfo = yup.object().shape({\r\n  title: yup.string().required('Поле обязательное для заполнения'),\r\n  description: yup.string().required('Поле обязательное для заполнения'),\r\n});\r\n//общая\r\nconst schema = yup.object().shape({\r\n  info: yup.array().of(schemaInfo).optional(),\r\n});\r\n//-----------------------------------------\r\n/* const info = [\r\n  { title: 'gfgfgfgf', description: 'gfgfg' },\r\n  { title: 'kghkhkhjkj', description: 'dgfbjfgghk' },\r\n]; */\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n  },\r\n}));\r\n\r\nconst DeviceProperty: React.FC<PropsType> = ({\r\n  addedDevice,\r\n  setAddedDevice,\r\n  handleNext,\r\n}) => {\r\n  const { info } = addedDevice;\r\n  const classes = useStyles();\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      info: info,\r\n    },\r\n    resolver: yupResolver(schema),\r\n    mode: 'onBlur',\r\n  });\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: 'info',\r\n  });\r\n\r\n  const onSubmit = (data: InfoType[]): void => {\r\n    console.log('data', data);\r\n    handleNext();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <Button\r\n        color=\"primary\"\r\n        style={{ marginBottom: 15, fontSize: 12 }}\r\n        onClick={() => {\r\n          append({ title: '', description: '' });\r\n        }}\r\n      >\r\n        Добавить новое поле\r\n      </Button>\r\n      {fields.map((item, index) => {\r\n        return (\r\n          <Grid container spacing={3} key={item.id}>\r\n            <Grid item xs={12} sm={3}>\r\n              <Controller\r\n                name={`info.${index}.title` as const}\r\n                control={control}\r\n                defaultValue={item.title}\r\n                render={({ field }) => (\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\" название \"\r\n                    {...field}\r\n                    error={!!errors.info}\r\n                    helperText={\r\n                      errors?.info?.[index]?.title\r\n                        ? errors.info[index].title?.message\r\n                        : null\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={7}>\r\n              <Controller\r\n                name={`info.${index}.description` as const}\r\n                control={control}\r\n                defaultValue={item.description}\r\n                render={({ field }) => (\r\n                  <TextField\r\n                    {...field}\r\n                    multiline\r\n                    fullWidth\r\n                    label=\" описание \"\r\n                    error={!!errors.info}\r\n                    helperText={\r\n                      errors?.info?.[index]?.description\r\n                        ? errors.info[index].description?.message\r\n                        : null\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <IconButton onClick={() => remove(index)}>\r\n                <HighlightOffIcon style={{ fontSize: 30 }} />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      })}\r\n      <IconButton type=\"submit\" style={{ color: '#3f51b5' }}>\r\n        <ArrowForwardSharpIcon />\r\n      </IconButton>\r\n    </form>\r\n  );\r\n};\r\nexport default DeviceProperty;\r\n"]},"metadata":{},"sourceType":"module"}