{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\pages\\\\ProfileDevice.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n// типизация всего стейта( для типизации state)\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Box, Container, Divider, Button } from '@material-ui/core'; //import Divider from '@material-ui/core/Divider';\n\nimport { getSelectedDevice } from '../action/deviceAction';\nimport ImageList from '../components/ImageList';\nimport ActiveLastBreadcrumb from '../components/ActiveLastBreadcrumb';\nimport { connect } from 'react-redux'; //типизация---------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//-----------------------------------------------------------------\nconst useStyles = makeStyles(theme => ({\n  breadcrumb: {\n    marginTop: 15\n  },\n  grid_container: {\n    marginTop: 25\n  },\n  name: {\n    fontSize: '1.2rem',\n    '@media (min-width:600px)': {\n      fontSize: '1.5rem'\n    },\n    [theme.breakpoints.up('md')]: {\n      fontSize: '2rem'\n    },\n    marginTop: 35\n  },\n  listImage: {\n    display: 'flex',\n    flexWrap: 'nowrap',\n    overflow: 'auto',\n    marginTop: 5,\n    padding: 5\n  },\n  image: {\n    height: 50,\n    width: 'auto',\n    margin: 5,\n    cursor: 'pointer'\n  },\n  italic: {\n    fontStyle: 'italic'\n  },\n  bold: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst ProfileDevice = ({\n  getSelectedDevice,\n  selectedDevice\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    id\n  } = useParams(); //  хук роутера ,который помогает получить значение params\n\n  console.log(selectedDevice);\n  useEffect(() => {\n    getSelectedDevice(id); // eslint-disable-next-line\n  }, []);\n  const {\n    name,\n    picture,\n    price,\n    info\n  } = selectedDevice;\n  let params;\n  info ? params = [...info] : params = []; //console.log(params[0]);\n\n  let image;\n  picture ? image = [...picture] : image = [];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.breadcrumb,\n      children: /*#__PURE__*/_jsxDEV(ActiveLastBreadcrumb, {\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.name,\n      variant: \"h3\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.grid_container,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: [/*#__PURE__*/_jsxDEV(ImageList, {\n          image: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h6\",\n          align: \"center\",\n          className: classes.bold,\n          children: [\"\\u0426\\u0435\\u043D\\u0430: \", price, \" p\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          style: {\n            marginTop: '25px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              fullWidth: true,\n              style: {\n                marginBottom: 15,\n                fontSize: 12\n              },\n              onClick: () => {},\n              children: \"\\u041A\\u0443\\u043F\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              fullWidth: true,\n              style: {\n                marginBottom: 15,\n                fontSize: 12\n              },\n              onClick: () => {},\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 \\u043A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h6\",\n          align: \"center\",\n          children: \"\\u0425\\u0430\\u0440\\u0430\\u043A\\u0442\\u0435\\u0440\\u0438\\u0441\\u0442\\u0438\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), params.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              marginLeft: '25px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.bold,\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.italic,\n              children: [\" \", item.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileDevice, \"73SEqc3PxR30cJdZ/9QZxhpi9/I=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = ProfileDevice;\n\nconst mapStateToProps = state => {\n  return {\n    selectedDevice: state.devices.selectedDevice\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getSelectedDevice\n})(ProfileDevice);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileDevice\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/pages/ProfileDevice.tsx"],"names":["React","useEffect","useParams","makeStyles","Grid","Typography","Box","Container","Divider","Button","getSelectedDevice","ImageList","ActiveLastBreadcrumb","connect","useStyles","theme","breadcrumb","marginTop","grid_container","name","fontSize","breakpoints","up","listImage","display","flexWrap","overflow","padding","image","height","width","margin","cursor","italic","fontStyle","bold","fontWeight","ProfileDevice","selectedDevice","classes","id","console","log","picture","price","info","params","marginBottom","map","item","index","marginLeft","title","description","mapStateToProps","state","devices"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { RootStateType } from '../store/store'; // типизация всего стейта( для типизации state)\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box, Container, Divider, Button } from '@material-ui/core';\r\n//import Divider from '@material-ui/core/Divider';\r\nimport { getSelectedDevice } from '../action/deviceAction';\r\nimport { DeviceType, InfoType } from '../store/reducer/deviceReducer';\r\nimport { ROOT_URL } from '../constants/url';\r\nimport ImageList from '../components/ImageList';\r\nimport ActiveLastBreadcrumb from '../components/ActiveLastBreadcrumb';\r\nimport { connect } from 'react-redux';\r\n\r\n//типизация---------------------------------------------------------------------\r\ntype MapStateToPropsType = {\r\n  selectedDevice: DeviceType;\r\n};\r\ntype MapDispathPropsType = {\r\n  getSelectedDevice: (id: string) => void;\r\n};\r\ntype PropsType = MapStateToPropsType & MapDispathPropsType;\r\ntype ParamsType = {\r\n  id: string;\r\n};\r\n//-----------------------------------------------------------------\r\nconst useStyles = makeStyles((theme) => ({\r\n  breadcrumb: {\r\n    marginTop: 15,\r\n  },\r\n  grid_container: {\r\n    marginTop: 25,\r\n  },\r\n  name: {\r\n    fontSize: '1.2rem',\r\n    '@media (min-width:600px)': {\r\n      fontSize: '1.5rem',\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      fontSize: '2rem',\r\n    },\r\n    marginTop: 35,\r\n  },\r\n  listImage: {\r\n    display: 'flex',\r\n    flexWrap: 'nowrap',\r\n    overflow: 'auto',\r\n    marginTop: 5,\r\n    padding: 5,\r\n  },\r\n  image: {\r\n    height: 50,\r\n    width: 'auto',\r\n    margin: 5,\r\n    cursor: 'pointer',\r\n  },\r\n  italic: {\r\n    fontStyle: 'italic',\r\n  },\r\n  bold: {\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\n\r\nconst ProfileDevice: React.FC<PropsType> = ({\r\n  getSelectedDevice,\r\n  selectedDevice,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { id } = useParams<ParamsType>(); //  хук роутера ,который помогает получить значение params\r\n  console.log(selectedDevice);\r\n  useEffect(() => {\r\n    getSelectedDevice(id);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  const { name, picture, price, info } = selectedDevice;\r\n\r\n  let params: InfoType[];\r\n  info ? (params = [...info]) : (params = []);\r\n  //console.log(params[0]);\r\n  let image: string[];\r\n  picture ? (image = [...picture]) : (image = []);\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Box className={classes.breadcrumb}>\r\n        <ActiveLastBreadcrumb name={name} />\r\n      </Box>\r\n      <Typography className={classes.name} variant=\"h3\">\r\n        {name}\r\n      </Typography>\r\n      <Grid container spacing={2} className={classes.grid_container}>\r\n        <Grid item xs={12} sm={6}>\r\n          <ImageList image={image} />\r\n          <Typography\r\n            variant=\"h5\"\r\n            component=\"h6\"\r\n            align=\"center\"\r\n            className={classes.bold}\r\n          >\r\n            Цена: {price} p\r\n          </Typography>\r\n          <Grid container spacing={2} style={{ marginTop: '25px' }}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                style={{ marginBottom: 15, fontSize: 12 }}\r\n                onClick={() => {}}\r\n              >\r\n                Купить\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                style={{ marginBottom: 15, fontSize: 12 }}\r\n                onClick={() => {}}\r\n              >\r\n                Добавить в корзину\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h5\" component=\"h6\" align=\"center\">\r\n            Характеристики\r\n          </Typography>\r\n          {params.map((item: InfoType, index: number) => {\r\n            return (\r\n              <Typography style={{ marginLeft: '25px' }} key={index}>\r\n                <span className={classes.bold}>{item.title}</span>:\r\n                <span className={classes.italic}> {item.description}</span>\r\n              </Typography>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Grid>\r\n      <Divider />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n  return {\r\n    selectedDevice: state.devices.selectedDevice,\r\n  };\r\n};\r\nexport default connect<\r\n  MapStateToPropsType,\r\n  MapDispathPropsType,\r\n  unknown, // первичные пропсы\r\n  RootStateType\r\n>(mapStateToProps, { getSelectedDevice })(ProfileDevice);\r\n"]},"metadata":{},"sourceType":"module"}