{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\components\\\\TypeBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n//типизация\nimport byk1 from '../img/byk1.jpg';\nimport planshet1 from '../img/planshet1.jpg';\nimport reclama1 from '../img/reclama1.jpg'; //----типизация пропсов----\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//-------------------------\nconst useStyles = makeStyles(() => ({\n  list: {\n    width: '100%',\n    maxHeight: 300,\n    overflow: 'auto'\n  }\n}));\n\nconst TypeBar = ({\n  types,\n  setTypeId,\n  setBrandId\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory(); //для изменения строки запроса\n  //запись выбранного типа устройства в стейт и удаление существующего брэнда из стейта и маршрутизация\n\n  const handleDevice = id => {\n    history.push(`/profileType/${id}`);\n    setTypeId(id);\n    setBrandId(null);\n  };\n\n  types = [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        marginTop: '115px',\n        fontWeight: 'bold'\n      },\n      children: [' ', \"\\u041A\\u0430\\u0442\\u0430\\u043B\\u043E\\u0433 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      component: \"nav\",\n      \"aria-label\": \"main mailbox folders\",\n      className: classes.list,\n      children: types && types.map(type => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: () => {\n              handleDevice(type._id);\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: type.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, type._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: reclama1,\n        style: {\n          height: '200px',\n          width: 'auto',\n          marginTop: '25px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: planshet1,\n        style: {\n          height: '205px',\n          width: 'auto',\n          marginTop: '25px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: byk1,\n        style: {\n          height: '205px',\n          width: 'auto',\n          marginTop: '25px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TypeBar, \"cXZz/rbrhPrjL6gJaTc75NCtuak=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = TypeBar;\nexport default TypeBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypeBar\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/components/TypeBar.tsx"],"names":["React","useHistory","makeStyles","Typography","Divider","List","ListItem","ListItemText","byk1","planshet1","reclama1","useStyles","list","width","maxHeight","overflow","TypeBar","types","setTypeId","setBrandId","classes","history","handleDevice","id","push","marginTop","fontWeight","map","type","_id","name","height"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {\r\n  TypeDeviceType,\r\n  setTypeIdActionType,\r\n  setBrandIdActionType,\r\n} from '../store/reducer/deviceReducer'; //типизация\r\nimport byk1 from '../img/byk1.jpg';\r\nimport planshet1 from '../img/planshet1.jpg';\r\nimport reclama1 from '../img/reclama1.jpg';\r\n\r\n//----типизация пропсов----\r\ntype PropsType = {\r\n  types: TypeDeviceType[];\r\n  setTypeId: (data: string | null) => setTypeIdActionType;\r\n  setBrandId: (data: string | null) => setBrandIdActionType;\r\n};\r\n//-------------------------\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  list: {\r\n    width: '100%',\r\n    maxHeight: 300,\r\n    overflow: 'auto',\r\n  },\r\n}));\r\n\r\nconst TypeBar: React.FC<PropsType> = ({ types, setTypeId, setBrandId }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory(); //для изменения строки запроса\r\n  //запись выбранного типа устройства в стейт и удаление существующего брэнда из стейта и маршрутизация\r\n  const handleDevice = (id: string) => {\r\n    history.push(`/profileType/${id}`);\r\n    setTypeId(id);\r\n    setBrandId(null);\r\n  };\r\n  types = [];\r\n  return (\r\n    <>\r\n      <Typography style={{ marginTop: '115px', fontWeight: 'bold' }}>\r\n        {' '}\r\n        Каталог товаров\r\n      </Typography>\r\n      <List\r\n        component=\"nav\"\r\n        aria-label=\"main mailbox folders\"\r\n        className={classes.list}\r\n      >\r\n        {types &&\r\n          types.map((type) => {\r\n            return (\r\n              <div key={type._id}>\r\n                <ListItem\r\n                  button\r\n                  onClick={() => {\r\n                    handleDevice(type._id);\r\n                  }}\r\n                >\r\n                  <ListItemText primary={type.name} />\r\n                </ListItem>\r\n                <Divider />\r\n              </div>\r\n            );\r\n          })}\r\n      </List>\r\n      <div>\r\n        <img\r\n          src={reclama1}\r\n          style={{ height: '200px', width: 'auto', marginTop: '25px' }}\r\n        />\r\n        <img\r\n          src={planshet1}\r\n          style={{ height: '205px', width: 'auto', marginTop: '25px' }}\r\n        />\r\n        <img\r\n          src={byk1}\r\n          style={{ height: '205px', width: 'auto', marginTop: '25px' }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TypeBar;\r\n"]},"metadata":{},"sourceType":"module"}