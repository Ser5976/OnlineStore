{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\components\\\\Step3.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport Dropzone from 'react-dropzone';\nimport Paper from '@material-ui/core/Paper';\nimport CloudUpload from '@material-ui/icons/CloudUpload';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport Button from '@material-ui/core/Button'; //-----------------------------------------\n// типизация пропсов\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//--------------------------------------------\nconst schema = yup.object().shape({\n  picture: yup.array().required('First name is a required field') //  .test('fileSize', 'The file is too large', (value) => {\n  //   return value && value[0].size <= 20000;\n  //  }),\n\n});\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: '#eee',\n    textAlign: 'center',\n    cursor: 'pointer',\n    color: '#333',\n    padding: '10px',\n    marginTop: '20px'\n  },\n  icon: {\n    marginTop: '16px',\n    color: '#888888',\n    fontSize: '42px'\n  }\n}));\n\nconst Step3 = ({\n  addedDevice,\n  setAddedDevice,\n  handleNext\n}) => {\n  _s();\n\n  const styles = useStyles();\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: 'onBlur',\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  console.log(errors);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Controller, {\n      control: control,\n      name: \"picture\",\n      defaultValue: [],\n      render: ({\n        field: {\n          onChange,\n          onBlur,\n          value,\n          name\n        }\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n          onDrop: onChange,\n          children: ({\n            getRootProps,\n            getInputProps\n          }) => /*#__PURE__*/_jsxDEV(Paper, {\n            variant: \"outlined\",\n            className: styles.root,\n            ...getRootProps(),\n            children: [/*#__PURE__*/_jsxDEV(CloudUpload, {\n              className: styles.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps(),\n              name: name // onBlur={onBlur}\n              ,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drag 'n' drop files here, or click to select files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: value.map((f, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(InsertDriveFile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: f.name,\n              secondary: f.size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), errors.picture && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errors.picture.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      fullWidth: true,\n      color: \"primary\",\n      children: \"\\u0414\\u0430\\u043B\\u0435\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Step3, \"C/RB1nL6bik9VFCo89QAGRUD3xs=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = Step3;\nexport default Step3;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step3\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/components/Step3.tsx"],"names":["React","useForm","Controller","makeStyles","yupResolver","yup","Dropzone","Paper","CloudUpload","List","ListItem","ListItemIcon","ListItemText","InsertDriveFile","Button","schema","object","shape","picture","array","required","useStyles","theme","root","backgroundColor","textAlign","cursor","color","padding","marginTop","icon","fontSize","Step3","addedDevice","setAddedDevice","handleNext","styles","control","handleSubmit","formState","errors","mode","resolver","onSubmit","data","console","log","field","onChange","onBlur","value","name","getRootProps","getInputProps","map","f","index","size","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAKA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CAEA;AACA;;;;AAMA;AACA,MAAMC,MAAM,GAAGV,GAAG,CAACW,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,EAAAA,OAAO,EAAEb,GAAG,CAACc,KAAJ,GAAYC,QAAZ,CAAqB,gCAArB,CADuB,CAEhC;AACA;AACA;;AAJgC,CAAnB,CAAf;AAMA,MAAMC,SAAS,GAAGlB,UAAU,CAAEmB,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAE,MADb;AAEJC,IAAAA,SAAS,EAAE,QAFP;AAGJC,IAAAA,MAAM,EAAE,SAHJ;AAIJC,IAAAA,KAAK,EAAE,MAJH;AAKJC,IAAAA,OAAO,EAAE,MALL;AAMJC,IAAAA,SAAS,EAAE;AANP,GADiC;AASvCC,EAAAA,IAAI,EAAE;AACJD,IAAAA,SAAS,EAAE,MADP;AAEJF,IAAAA,KAAK,EAAE,SAFH;AAGJI,IAAAA,QAAQ,EAAE;AAHN;AATiC,CAAZ,CAAD,CAA5B;;AAgBA,MAAMC,KAA0B,GAAG,CAAC;AAClCC,EAAAA,WADkC;AAElCC,EAAAA,cAFkC;AAGlCC,EAAAA;AAHkC,CAAD,KAI7B;AAAA;;AACJ,QAAMC,MAAM,GAAGf,SAAS,EAAxB;AACA,QAAM;AACJgB,IAAAA,OADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAHP,MAIFvC,OAAO,CAAC;AACVwC,IAAAA,IAAI,EAAE,QADI;AAEVC,IAAAA,QAAQ,EAAEtC,WAAW,CAACW,MAAD;AAFX,GAAD,CAJX;;AASA,QAAM4B,QAAQ,GAAIC,IAAD,IAAe;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAFD;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,sBACE;AAAM,IAAA,QAAQ,EAAEF,YAAY,CAACK,QAAD,CAA5B;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,OAAO,EAAEN,OADX;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,YAAY,EAAE,EAHhB;AAIE,MAAA,MAAM,EAAE,CAAC;AAAEU,QAAAA,KAAK,EAAE;AAAEC,UAAAA,QAAF;AAAYC,UAAAA,MAAZ;AAAoBC,UAAAA,KAApB;AAA2BC,UAAAA;AAA3B;AAAT,OAAD,kBACN;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,MAAM,EAAEH,QAAlB;AAAA,oBACG,CAAC;AAAEI,YAAAA,YAAF;AAAgBC,YAAAA;AAAhB,WAAD,kBACC,QAAC,KAAD;AACE,YAAA,OAAO,EAAC,UADV;AAEE,YAAA,SAAS,EAAEjB,MAAM,CAACb,IAFpB;AAAA,eAGM6B,YAAY,EAHlB;AAAA,oCAKE,QAAC,WAAD;AAAa,cAAA,SAAS,EAAEhB,MAAM,CAACN;AAA/B;AAAA;AAAA;AAAA;AAAA,oBALF,eAME,sBACMuB,aAAa,EADnB;AAEE,cAAA,IAAI,EAAEF,IAFR,CAGE;AAHF;AAIE,cAAA,QAAQ;AAJV;AAAA;AAAA;AAAA;AAAA,oBANF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAmBE,QAAC,IAAD;AAAA,oBACGD,KAAK,CAACI,GAAN,CAAU,CAACC,CAAD,EAASC,KAAT,kBACT,QAAC,QAAD;AAAA,oCACE,QAAC,YAAD;AAAA,qCACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,YAAD;AAAc,cAAA,OAAO,EAAED,CAAC,CAACJ,IAAzB;AAA+B,cAAA,SAAS,EAAEI,CAAC,CAACE;AAA5C;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA,aAAeD,KAAf;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YADF,EAsCGhB,MAAM,CAACtB,OAAP,iBAAkB;AAAA,gBAAIsB,MAAM,CAACtB,OAAP,CAAewC;AAAnB;AAAA;AAAA;AAAA;AAAA,YAtCrB,eAuCE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAC,WAA9B;AAA0C,MAAA,SAAS,MAAnD;AAAoD,MAAA,KAAK,EAAC,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD,CAhED;;GAAM1B,K;UAKWX,S,EAKXpB,O;;;KAVA+B,K;AAiEN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n  addedDeviceType,\r\n  setAddedDeviceActionType,\r\n} from '../store/reducer/deviceReducer';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport Dropzone from 'react-dropzone';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CloudUpload from '@material-ui/icons/CloudUpload';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n//-----------------------------------------\r\n// типизация пропсов\r\ntype PropsType = {\r\n  addedDevice: addedDeviceType;\r\n  setAddedDevice: (data: addedDeviceType) => setAddedDeviceActionType;\r\n  handleNext: () => void;\r\n};\r\n//--------------------------------------------\r\nconst schema = yup.object().shape({\r\n  picture: yup.array().required('First name is a required field'),\r\n  //  .test('fileSize', 'The file is too large', (value) => {\r\n  //   return value && value[0].size <= 20000;\r\n  //  }),\r\n});\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: '#eee',\r\n    textAlign: 'center',\r\n    cursor: 'pointer',\r\n    color: '#333',\r\n    padding: '10px',\r\n    marginTop: '20px',\r\n  },\r\n  icon: {\r\n    marginTop: '16px',\r\n    color: '#888888',\r\n    fontSize: '42px',\r\n  },\r\n}));\r\n\r\nconst Step3: React.FC<PropsType> = ({\r\n  addedDevice,\r\n  setAddedDevice,\r\n  handleNext,\r\n}) => {\r\n  const styles = useStyles();\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: 'onBlur',\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const onSubmit = (data: any) => {\r\n    console.log(data);\r\n  };\r\n  console.log(errors);\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <Controller\r\n        control={control}\r\n        name=\"picture\"\r\n        defaultValue={[]}\r\n        render={({ field: { onChange, onBlur, value, name } }) => (\r\n          <>\r\n            <Dropzone onDrop={onChange}>\r\n              {({ getRootProps, getInputProps }) => (\r\n                <Paper\r\n                  variant=\"outlined\"\r\n                  className={styles.root}\r\n                  {...getRootProps()}\r\n                >\r\n                  <CloudUpload className={styles.icon} />\r\n                  <input\r\n                    {...getInputProps()}\r\n                    name={name}\r\n                    // onBlur={onBlur}\r\n                    required\r\n                  />\r\n                  <p>Drag 'n' drop files here, or click to select files</p>\r\n                </Paper>\r\n              )}\r\n            </Dropzone>\r\n            <List>\r\n              {value.map((f: any, index: any) => (\r\n                <ListItem key={index}>\r\n                  <ListItemIcon>\r\n                    <InsertDriveFile />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={f.name} secondary={f.size} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </>\r\n        )}\r\n      />\r\n      {errors.picture && <p>{errors.picture.message}</p>}\r\n      <Button type=\"submit\" variant=\"contained\" fullWidth color=\"primary\">\r\n        Далее\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\nexport default Step3;\r\n"]},"metadata":{},"sourceType":"module"}