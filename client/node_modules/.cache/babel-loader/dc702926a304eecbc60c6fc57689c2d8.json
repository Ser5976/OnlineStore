{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\components\\\\FormDevice.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { MenuItem } from '@material-ui/core';\nimport { DropzoneArea } from 'material-ui-dropzone'; // загрузка файлов\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//схема валидации---------------------\nconst schema = yup.object().shape({}); //-----------------------------------------\n// типизация пропсов\n\n//--------------------------------------------\nconst useStyles = makeStyles(theme => ({\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  link: {\n    pointerEvents: 'none'\n  },\n  button: {\n    margin: '15px 15x'\n  },\n  dropzone: {\n    minHeight: 50,\n    // marginTop: 15,\n    border: '0px',\n    '& \t.MuiDropzoneArea-text': {\n      color: '#3f51b5',\n      fontSize: '1.00rem'\n    },\n    '& \t.MuiDropzoneArea-icon': {\n      color: '#3f51b5'\n    }\n  }\n}));\n\nconst FormDevice = ({\n  types,\n  brands\n}) => {\n  _s();\n\n  const history = useHistory();\n  const classes = useStyles();\n  const {\n    handleSubmit,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: 'onChange'\n  }); // получение данных из формы и отправка на сервак(авторизация или регистрация)\n\n  const onSubmit = data => {\n    console.log('Отправлено:', data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    noValidate: true,\n    className: classes.form,\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      component: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        component: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          style: {\n            padding: '5px 5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Controller, {\n            name: \"types\",\n            control: control,\n            defaultValue: \"\",\n            render: ({\n              field\n            }) => {\n              var _errors$types;\n\n              return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                variant: \"outlined\",\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                id: \"type\",\n                label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0442\\u0438\\u043F\",\n                autoFocus: true,\n                error: !!errors.types,\n                select: true,\n                helperText: errors.types ? (_errors$types = errors.types) === null || _errors$types === void 0 ? void 0 : _errors$types.message : null,\n                children: types.map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item._id,\n                    children: item.name\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0438\\u043F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          style: {\n            padding: '5px 5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Controller, {\n            name: \"brands\",\n            control: control,\n            defaultValue: \"\",\n            render: ({\n              field\n            }) => {\n              var _errors$brands;\n\n              return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                variant: \"outlined\",\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                id: \"brands\",\n                label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0431\\u0440\\u044D\\u043D\\u0434\",\n                autoFocus: true,\n                error: !!errors.brands,\n                select: true,\n                helperText: errors.brands ? (_errors$brands = errors.brands) === null || _errors$brands === void 0 ? void 0 : _errors$brands.message : null,\n                children: brands.map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item._id,\n                    children: item.name\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0431\\u0440\\u044D\\u043D\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"name\",\n        control: control,\n        defaultValue: \"\",\n        render: ({\n          field\n        }) => {\n          var _errors$email;\n\n          return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"name\",\n            label: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0443\\u0441\\u0442\\u0440\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430\",\n            autoFocus: true,\n            error: !!errors.name,\n            helperText: errors.name ? (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.name : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"price\",\n        control: control,\n        defaultValue: \"\",\n        render: ({\n          field\n        }) => {\n          var _errors$price;\n\n          return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"price\",\n            label: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C \\u0443\\u0441\\u0442\\u0440\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430\",\n            type: \"number\",\n            autoFocus: true,\n            error: !!errors.price,\n            helperText: errors.prace ? (_errors$price = errors.price) === null || _errors$price === void 0 ? void 0 : _errors$price.name : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"picture\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(DropzoneArea, { ...field,\n          dropzoneText: \"\\u041F\\u0435\\u0440\\u0435\\u0442\\u0430\\u0449\\u0438\\u0442\\u0435 \\u0441\\u044E\\u0434\\u0430 \\u0444\\u0430\\u0439\\u043B \\u0438\\u043B\\u0438 \\u0449\\u0435\\u043B\\u043A\\u043D\\u0438\\u0442\\u0435\",\n          dropzoneClass: classes.dropzone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormDevice, \"KGe7YBJ7JGZw3p2a3kR+lbmR1Sw=\", false, function () {\n  return [useHistory, useStyles, useForm];\n});\n\n_c = FormDevice;\nexport default FormDevice;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDevice\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/components/FormDevice.tsx"],"names":["React","useForm","Controller","yupResolver","yup","Button","TextField","MenuItem","DropzoneArea","Grid","makeStyles","useHistory","schema","object","shape","useStyles","theme","form","width","marginTop","spacing","submit","margin","link","pointerEvents","button","dropzone","minHeight","border","color","fontSize","FormDevice","types","brands","history","classes","handleSubmit","control","formState","errors","resolver","mode","onSubmit","data","console","log","padding","field","message","map","item","index","_id","name","email","price","prace"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useForm, SubmitHandler, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport { DropzoneArea } from 'material-ui-dropzone'; // загрузка файлов\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TypeDeviceType, BrandType } from '../store/reducer/deviceReducer';\r\n\r\n//типизация данных\r\ntype InfoType = {\r\n  title: string;\r\n  discription: string;\r\n};\r\n\r\ntype DataDeviceType = {\r\n  name: string;\r\n  price: number;\r\n  picture: any;\r\n  info: InfoType[];\r\n  typeId: string;\r\n  brandId: string;\r\n};\r\n\r\n//схема валидации---------------------\r\nconst schema = yup.object().shape({});\r\n//-----------------------------------------\r\n// типизация пропсов\r\ntype PropsType = {\r\n  types: TypeDeviceType[];\r\n  brands: BrandType[];\r\n};\r\n//--------------------------------------------\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  link: {\r\n    pointerEvents: 'none',\r\n  },\r\n  button: {\r\n    margin: '15px 15x',\r\n  },\r\n  dropzone: {\r\n    minHeight: 50,\r\n    // marginTop: 15,\r\n    border: '0px',\r\n    '& \t.MuiDropzoneArea-text': { color: '#3f51b5', fontSize: '1.00rem' },\r\n    '& \t.MuiDropzoneArea-icon': { color: '#3f51b5' },\r\n  },\r\n}));\r\n\r\nconst FormDevice: React.FC<PropsType> = ({ types, brands }) => {\r\n  const history: any = useHistory();\r\n  const classes = useStyles();\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n    mode: 'onChange',\r\n  });\r\n  // получение данных из формы и отправка на сервак(авторизация или регистрация)\r\n  const onSubmit: SubmitHandler<DataDeviceType> = (\r\n    data: DataDeviceType\r\n  ): void => {\r\n    console.log('Отправлено:', data);\r\n  };\r\n\r\n  return (\r\n    <form noValidate className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n      <Grid container component=\"main\">\r\n        <Grid container component=\"main\">\r\n          <Grid item xs={12} sm={6} style={{ padding: '5px 5px' }}>\r\n            <Controller\r\n              name=\"types\"\r\n              control={control}\r\n              defaultValue=\"\"\r\n              render={({ field }) => (\r\n                <TextField\r\n                  {...field}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"type\"\r\n                  label=\"Выберите тип\"\r\n                  autoFocus\r\n                  error={!!errors.types}\r\n                  select\r\n                  helperText={errors.types ? errors.types?.message : null}\r\n                >\r\n                  {types.map((item, index) => {\r\n                    return (\r\n                      <MenuItem value={item._id} key={index}>\r\n                        {item.name}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </TextField>\r\n              )}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" fullWidth>\r\n              Добавить тип\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} style={{ padding: '5px 5px' }}>\r\n            <Controller\r\n              name=\"brands\"\r\n              control={control}\r\n              defaultValue=\"\"\r\n              render={({ field }) => (\r\n                <TextField\r\n                  {...field}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"brands\"\r\n                  label=\"Выберите брэнд\"\r\n                  autoFocus\r\n                  error={!!errors.brands}\r\n                  select\r\n                  helperText={errors.brands ? errors.brands?.message : null}\r\n                >\r\n                  {brands.map((item, index) => {\r\n                    return (\r\n                      <MenuItem value={item._id} key={index}>\r\n                        {item.name}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </TextField>\r\n              )}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" fullWidth>\r\n              Добавить брэнд\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Controller\r\n          name=\"name\"\r\n          control={control}\r\n          defaultValue=\"\"\r\n          render={({ field }) => (\r\n            <TextField\r\n              {...field}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"name\"\r\n              label=\"Введите название устройства\"\r\n              autoFocus\r\n              error={!!errors.name}\r\n              helperText={errors.name ? errors.email?.name : null}\r\n            />\r\n          )}\r\n        />\r\n        <Controller\r\n          name=\"price\"\r\n          control={control}\r\n          defaultValue=\"\"\r\n          render={({ field }) => (\r\n            <TextField\r\n              {...field}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"price\"\r\n              label=\"Введите стоимость устройства\"\r\n              type=\"number\"\r\n              autoFocus\r\n              error={!!errors.price}\r\n              helperText={errors.prace ? errors.price?.name : null}\r\n            />\r\n          )}\r\n        />\r\n        <Controller\r\n          name=\"picture\"\r\n          control={control}\r\n          render={({ field }) => (\r\n            <DropzoneArea\r\n              {...field}\r\n              dropzoneText=\"Перетащите сюда файл или щелкните\"\r\n              dropzoneClass={classes.dropzone}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\nexport default FormDevice;\r\n"]},"metadata":{},"sourceType":"module"}