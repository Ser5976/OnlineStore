{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\components\\\\DeviceContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Divider } from '@material-ui/core';\nimport Masonry from 'react-masonry-css'; // контейнерный компонент для стиля(расположение элементов)\n\nimport Device from './Device';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//-------------------------\nconst useStyles = makeStyles(theme => ({}));\nconst breakpoints = {\n  default: 3,\n  1100: 2,\n  700: 1\n}; // это для Masonry,компонент регулирет расположение карточек(отдельно установлен)\n\nconst DeviceContainer = ({\n  devices,\n  // устройства\n  types,\n  // типы устройств\n  setTypeId,\n  // запись типа устройства в стейт\n  setBrandId,\n  //запись брэнда устройства в стейт\n  auth,\n  isAuth,\n  removeDevice\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory(); //запись выбранного типа устройства в стейт и удаление существующего брэнда из стейта и маршрутизация\n\n  const handleDevice = id => {\n    history.push(`/profileType/${id}`);\n    setTypeId(id);\n    setBrandId(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      style: {\n        marginTop: '50px'\n      },\n      children: [' ', \"\\u0412\\u0441\\u0435 \\u0442\\u043E\\u0432\\u0430\\u0440\\u044B\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Masonry, {\n      breakpointCols: breakpoints,\n      className: \"my-masonry-grid\",\n      columnClassName: \"my-masonry-grid_column\",\n      children: devices.map(item => {\n        return /*#__PURE__*/_jsxDEV(Device, {\n          item: item,\n          auth: auth,\n          isAuth: isAuth,\n          removeDevice: removeDevice\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), ' ']\n  }, void 0, true);\n};\n\n_s(DeviceContainer, \"cXZz/rbrhPrjL6gJaTc75NCtuak=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = DeviceContainer;\nexport default DeviceContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeviceContainer\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/components/DeviceContainer.tsx"],"names":["React","makeStyles","Typography","Divider","Masonry","Device","useHistory","useStyles","theme","breakpoints","default","DeviceContainer","devices","types","setTypeId","setBrandId","auth","isAuth","removeDevice","classes","history","handleDevice","id","push","marginTop","map","item","Math","random"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAAkC,0BAAlC;AACA,SAA0BC,UAA1B,EAAsCC,OAAtC,QAAqD,mBAArD;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CAAyC;;AACzC,OAAOC,MAAP,MAAmB,UAAnB;AAMA,SAASC,UAAT,QAA2B,kBAA3B;;;AAqBA;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAmB,EAAnB,CAAD,CAA5B;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,OAAO,EAAE,CADS;AAElB,QAAM,CAFY;AAGlB,OAAK;AAHa,CAApB,C,CAIG;;AACH,MAAMC,eAAoC,GAAG,CAAC;AAC5CC,EAAAA,OAD4C;AACnC;AACTC,EAAAA,KAF4C;AAErC;AACPC,EAAAA,SAH4C;AAGjC;AACXC,EAAAA,UAJ4C;AAIhC;AAEZC,EAAAA,IAN4C;AAO5CC,EAAAA,MAP4C;AAQ5CC,EAAAA;AAR4C,CAAD,KASvC;AAAA;;AACJ,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAMa,OAAO,GAAGd,UAAU,EAA1B,CAFI,CAGJ;;AACA,QAAMe,YAAY,GAAIC,EAAD,IAAgB;AACnCF,IAAAA,OAAO,CAACG,IAAR,CAAc,gBAAeD,EAAG,EAAhC;AACAR,IAAAA,SAAS,CAACQ,EAAD,CAAT;AACAP,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAJD;;AAKA,sBACE;AAAA,4BAuCE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,KAAK,EAAE;AAAES,QAAAA,SAAS,EAAE;AAAb,OAAhC;AAAA,iBACG,GADH;AAAA;AAAA;AAAA;AAAA;AAAA,YAvCF,eA2CE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YA3CF,eA4CE,QAAC,OAAD;AACE,MAAA,cAAc,EAAEf,WADlB;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,MAAA,eAAe,EAAC,wBAHlB;AAAA,gBAKGG,OAAO,CAACa,GAAR,CAAaC,IAAD,IAAU;AACrB,4BACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAEA,IADR;AAGE,UAAA,IAAI,EAAEV,IAHR;AAIE,UAAA,MAAM,EAAEC,MAJV;AAKE,UAAA,YAAY,EAAEC;AALhB,WAEOS,IAAI,CAACC,MAAL,EAFP;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVA;AALH;AAAA;AAAA;AAAA;AAAA,YA5CF,EA4Da,GA5Db;AAAA,kBADF;AAgED,CAlFD;;GAAMjB,e;UAUYJ,S,EACAD,U;;;KAXZK,e;AAoFN,eAAeA,eAAf","sourcesContent":["import React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Container, Grid, Typography, Divider } from '@material-ui/core';\r\nimport Masonry from 'react-masonry-css'; // контейнерный компонент для стиля(расположение элементов)\r\nimport Device from './Device';\r\nimport { DeviceType } from '../store/reducer/deviceReducer'; //типизация устройств\r\nimport { AuthReducerType } from '../store/reducer/authReducer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  TypeDeviceType, // типизация типов устройст\r\n  setBrandIdActionType, //типизация экшена запись брэнда в стейт\r\n  setTypeIdActionType, //типизация экшена запись типа в стейт\r\n} from '../store/reducer/deviceReducer';\r\nimport byk1 from '../img/byk1.jpg';\r\nimport planshet1 from '../img/planshet1.jpg';\r\nimport reclama1 from '../img/reclama1.jpg';\r\n\r\n//----типизация пропсов----\r\ntype PropsType = {\r\n  devices: DeviceType[];\r\n  types: TypeDeviceType[];\r\n  setTypeId: (data: string | null) => setTypeIdActionType;\r\n  setBrandId: (data: string | null) => setBrandIdActionType;\r\n\r\n  auth: AuthReducerType;\r\n  isAuth: boolean;\r\n  removeDevice: (id: string | undefined) => void;\r\n};\r\n//-------------------------\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({}));\r\n\r\nconst breakpoints = {\r\n  default: 3,\r\n  1100: 2,\r\n  700: 1,\r\n}; // это для Masonry,компонент регулирет расположение карточек(отдельно установлен)\r\nconst DeviceContainer: React.FC<PropsType> = ({\r\n  devices, // устройства\r\n  types, // типы устройств\r\n  setTypeId, // запись типа устройства в стейт\r\n  setBrandId, //запись брэнда устройства в стейт\r\n\r\n  auth,\r\n  isAuth,\r\n  removeDevice,\r\n}) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //запись выбранного типа устройства в стейт и удаление существующего брэнда из стейта и маршрутизация\r\n  const handleDevice = (id: string) => {\r\n    history.push(`/profileType/${id}`);\r\n    setTypeId(id);\r\n    setBrandId(null);\r\n  };\r\n  return (\r\n    <>\r\n      {/* <Grid item xs={12} sm={3}>\r\n        <Typography style={{ marginTop: '115px', fontWeight: 'bold' }}>\r\n          {' '}\r\n          Каталог товаров\r\n        </Typography>\r\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n          {types &&\r\n            types.map((type) => {\r\n              return (\r\n                <div key={type._id}>\r\n                  <ListItem\r\n                    button\r\n                    onClick={() => {\r\n                      handleDevice(type._id);\r\n                    }}\r\n                  >\r\n                    <ListItemText primary={type.name} />\r\n                  </ListItem>\r\n                  <Divider />\r\n                </div>\r\n              );\r\n            })}\r\n        </List>\r\n        <div>\r\n          <img\r\n            src={reclama1}\r\n            style={{ height: '200px', width: 'auto', marginTop: '25px' }}\r\n          />\r\n          <img\r\n            src={planshet1}\r\n            style={{ height: '205px', width: 'auto', marginTop: '25px' }}\r\n          />\r\n          <img\r\n            src={byk1}\r\n            style={{ height: '205px', width: 'auto', marginTop: '25px' }}\r\n          />\r\n        </div>\r\n      </Grid> */}\r\n      <Typography variant=\"h6\" style={{ marginTop: '50px' }}>\r\n        {' '}\r\n        Все товары\r\n      </Typography>\r\n      <Divider />\r\n      <Masonry\r\n        breakpointCols={breakpoints}\r\n        className=\"my-masonry-grid\"\r\n        columnClassName=\"my-masonry-grid_column\"\r\n      >\r\n        {devices.map((item) => {\r\n          return (\r\n            <Device\r\n              item={item}\r\n              key={Math.random()}\r\n              auth={auth}\r\n              isAuth={isAuth}\r\n              removeDevice={removeDevice}\r\n            />\r\n          );\r\n        })}\r\n      </Masonry>{' '}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeviceContainer;\r\n"]},"metadata":{},"sourceType":"module"}