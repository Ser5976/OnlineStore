{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\pages\\\\SearchPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, Container, Divider, Typography, makeStyles, createStyles } from '@material-ui/core';\nimport { useLocation, useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Pagination, PaginationItem } from '@material-ui/lab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n//типизация данных\nimport { getDevices, //запрос на получение типов\nremoveDevice //удаление брэнда\n} from '../action/deviceAction';\nimport DeleteDevice from '../components/DeleteDevice';\nimport ActiveLastBreadcrumb from '../components/ActiveLastBreadcrumb';\nimport { connect } from 'react-redux'; //типизация--------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//-----------------------------------------\nconst useStyles = makeStyles(theme => createStyles({\n  pagination: {\n    '& > *': {\n      marginTop: theme.spacing(7)\n    },\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginBottom: theme.spacing(7)\n  },\n  textTitle: {\n    marginTop: '50px',\n    marginBottom: '50px'\n  }\n}));\n\nconst DeleteContainer = ({\n  devices,\n  name,\n  pageQty,\n  limit,\n  typeId,\n  brandId,\n  isLoadinDevice,\n  isFetchErrorDevice,\n  getDevices\n}) => {\n  _s();\n\n  var _location$search;\n\n  const classes = useStyles();\n  const history = useHistory(); //для изменения строки запроса\n\n  const location = useLocation(); // для получения строки запроса\n\n  const searchPage = parseInt(((_location$search = location.search) === null || _location$search === void 0 ? void 0 : _location$search.split('=')[1]) || '1'); // получаем номер страницы из строки запроса\n  // console.log(searchPage);\n  // пагинация, данные о текущей странице( по умолчанию: 1 или, если есть ,информация о текущей странице в адресной строке )\n\n  const [page, setPage] = useState(searchPage); // console.log('номер страницы:', page);\n  // изменения текущей страницы\n\n  const handleChange = (event, value) => {\n    setPage(value);\n  }; //костыль,чтобы синхронизировать пагинацию и иторию строки запроса(назад, вперёд)\n\n\n  useEffect(() => {\n    if (history.action === 'POP') {\n      setPage(searchPage);\n    } // eslint-disable-next-line\n\n  }, [searchPage]); // запрос на сервак для получения устройств(фильтруем устройства по типу и бренду,а также пагинация,поиск)\n\n  useEffect(() => {\n    console.log('рендеринг');\n    getDevices(typeId, brandId, limit, page, name, setPage, history); // eslint-disable-next-line\n  }, [typeId, brandId, page, name]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        margin: '25px'\n      },\n      children: /*#__PURE__*/_jsxDEV(ActiveLastBreadcrumb, {\n        name: \"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442 \\u043F\\u043E\\u0438\\u0441\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        align: \"center\",\n        children: \"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442 \\u043F\\u043E\\u0438\\u0441\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), isFetchErrorDevice ? /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        color: \"error\",\n        className: classes.textTitle,\n        children: \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this) : isLoadinDevice ? /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        style: {\n          height: window.innerHeight - 65.6\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this) : devices.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        className: classes.textTitle,\n        children: \"\\u041D\\u0438\\u0447\\u0435\\u0433\\u043E \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          style: {\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: devices && devices.map(item => {\n            return /*#__PURE__*/_jsxDEV(DeleteDevice, {\n              removeDevice: removeDevice,\n              item: item\n            }, Math.random(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), !!pageQty && /*#__PURE__*/_jsxDEV(Pagination, {\n        className: classes.pagination,\n        count: pageQty,\n        page: page,\n        showFirstButton: true,\n        showLastButton: true,\n        onChange: handleChange // интегрируем роутер\n        ,\n        renderItem: item => /*#__PURE__*/_jsxDEV(PaginationItem, {\n          component: Link,\n          to: `searchPage?page=${item.page}`,\n          ...item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DeleteContainer, \"te+uoGQs+JFWaRciidgJG4OsUH4=\", false, function () {\n  return [useStyles, useHistory, useLocation];\n});\n\n_c = DeleteContainer;\n\nconst mapStateToProps = state => {\n  return {\n    devices: state.devices.devices,\n    //устройства\n    isLoadinDevice: state.devices.isLoadinDevice,\n    //крутилка у стройств\n    isFetchErrorDevice: state.devices.isFetchErrorDevice,\n    //ошибка устройств\n    name: state.devices.name,\n    //имя для поиска\n    pageQty: state.devices.pageQty,\n    //количества страниц\n    limit: state.devices.limit,\n    //сколько устройств на странице\n    typeId: state.devices.typeId,\n    // айдишник типа\n    brandId: state.devices.brandId // айдишник брэнда\n\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getDevices\n})(DeleteContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteContainer\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/pages/SearchPage.tsx"],"names":["React","useEffect","useState","Box","Container","Divider","Typography","makeStyles","createStyles","useLocation","useHistory","Link","Pagination","PaginationItem","CircularProgress","getDevices","removeDevice","DeleteDevice","ActiveLastBreadcrumb","connect","useStyles","theme","pagination","marginTop","spacing","display","flexDirection","justifyContent","marginBottom","textTitle","DeleteContainer","devices","name","pageQty","limit","typeId","brandId","isLoadinDevice","isFetchErrorDevice","classes","history","location","searchPage","parseInt","search","split","page","setPage","handleChange","event","value","action","console","log","margin","height","window","innerHeight","length","map","item","Math","random","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Divider,\r\n  Typography,\r\n  Grid,\r\n  makeStyles,\r\n  createStyles,\r\n} from '@material-ui/core';\r\nimport { useLocation, useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { Pagination, PaginationItem } from '@material-ui/lab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { RootStateType } from '../store/store'; //типизиция всего стора\r\nimport {\r\n  setTypeId, //запись выбранного типа устройства\r\n  setBrandId, //запись выбранного  брэнда устройства\r\n  setAlertMessage, // изменения маркера получения сообщения о невозможности удаления типа/брэнда устройства\r\n} from '../store/reducer/deviceReducer';\r\nimport {\r\n  setTypeIdActionType,\r\n  setBrandIdActionType,\r\n} from '../store/reducer/deviceReducer'; // типизация экшенов\r\nimport {\r\n  DeviceType,\r\n  TypeDeviceType,\r\n  BrandType,\r\n} from '../store/reducer/deviceReducer'; //типизация данных\r\nimport {\r\n  getDevices, //запрос на получение устройств\r\n  getTypes, //запрос на получение типов\r\n  removeDevice, //удаление устройства\r\n  removeType, //удаление типа\r\n  removeBrand, //удаление брэнда\r\n} from '../action/deviceAction';\r\nimport DeleteDevice from '../components/DeleteDevice';\r\nimport AlertMessage from '../components/AlertMessage';\r\nimport ActiveLastBreadcrumb from '../components/ActiveLastBreadcrumb';\r\nimport TypeBarDelete from '../components/TypeBarDelete';\r\nimport { connect } from 'react-redux';\r\n\r\n//типизация--------------------------------\r\ntype MapStateToPropsType = {\r\n  devices: DeviceType[];\r\n  name: string | null;\r\n  pageQty: number;\r\n  limit: number;\r\n  typeId: string | null;\r\n  brandId: string | null;\r\n  isLoadinDevice: boolean;\r\n  isFetchErrorDevice: boolean;\r\n};\r\ntype MapDispathPropsType = {\r\n  getDevices: (\r\n    typeId: string | null,\r\n    brandId: string | null,\r\n    limit: number,\r\n    page: number,\r\n    name: string | null,\r\n    setPage: React.Dispatch<React.SetStateAction<number>>,\r\n    history: any\r\n  ) => void;\r\n};\r\n\r\ntype PropsType = MapDispathPropsType & MapStateToPropsType;\r\n//-----------------------------------------\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    pagination: {\r\n      '& > *': {\r\n        marginTop: theme.spacing(7),\r\n      },\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      marginBottom: theme.spacing(7),\r\n    },\r\n    textTitle: {\r\n      marginTop: '50px',\r\n      marginBottom: '50px',\r\n    },\r\n  })\r\n);\r\n\r\nconst DeleteContainer: React.FC<PropsType> = ({\r\n  devices,\r\n  name,\r\n  pageQty,\r\n  limit,\r\n  typeId,\r\n  brandId,\r\n  isLoadinDevice,\r\n  isFetchErrorDevice,\r\n  getDevices,\r\n}) => {\r\n  const classes = useStyles();\r\n  const history = useHistory(); //для изменения строки запроса\r\n  const location = useLocation(); // для получения строки запроса\r\n  const searchPage = parseInt(location.search?.split('=')[1] || '1'); // получаем номер страницы из строки запроса\r\n  // console.log(searchPage);\r\n  // пагинация, данные о текущей странице( по умолчанию: 1 или, если есть ,информация о текущей странице в адресной строке )\r\n  const [page, setPage] = useState(searchPage);\r\n  // console.log('номер страницы:', page);\r\n  // изменения текущей страницы\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setPage(value);\r\n  };\r\n  //костыль,чтобы синхронизировать пагинацию и иторию строки запроса(назад, вперёд)\r\n  useEffect(() => {\r\n    if (history.action === 'POP') {\r\n      setPage(searchPage);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [searchPage]);\r\n\r\n  // запрос на сервак для получения устройств(фильтруем устройства по типу и бренду,а также пагинация,поиск)\r\n\r\n  useEffect(() => {\r\n    console.log('рендеринг');\r\n    getDevices(typeId, brandId, limit, page, name, setPage, history);\r\n    // eslint-disable-next-line\r\n  }, [typeId, brandId, page, name]);\r\n\r\n  return (\r\n    <>\r\n      <Box style={{ margin: '25px' }}>\r\n        <ActiveLastBreadcrumb name=\"Результат поиска\" />\r\n      </Box>\r\n      <Container maxWidth=\"md\">\r\n        <Typography component=\"h1\" variant=\"h5\" align=\"center\">\r\n          Результат поиска\r\n        </Typography>\r\n\r\n        <Divider />\r\n        {isFetchErrorDevice ? (\r\n          <Typography\r\n            align=\"center\"\r\n            color=\"error\"\r\n            className={classes.textTitle}\r\n          >\r\n            Что-то пошло не так!\r\n          </Typography>\r\n        ) : isLoadinDevice ? (\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            style={{ height: window.innerHeight - 65.6 }}\r\n          >\r\n            <CircularProgress />\r\n          </Box>\r\n        ) : devices.length === 0 ? (\r\n          <Typography align=\"center\" className={classes.textTitle}>\r\n            Ничего не найдено!\r\n          </Typography>\r\n        ) : (\r\n          <>\r\n            <Box style={{ display: 'flex', flexDirection: 'column' }}>\r\n              {devices &&\r\n                devices.map((item) => {\r\n                  return (\r\n                    <DeleteDevice\r\n                      removeDevice={removeDevice}\r\n                      item={item}\r\n                      key={Math.random()}\r\n                    />\r\n                  );\r\n                })}\r\n            </Box>\r\n          </>\r\n        )}\r\n        {!!pageQty && (\r\n          <Pagination\r\n            className={classes.pagination}\r\n            count={pageQty}\r\n            page={page}\r\n            showFirstButton\r\n            showLastButton\r\n            onChange={handleChange}\r\n            // интегрируем роутер\r\n            renderItem={(item) => (\r\n              <PaginationItem\r\n                component={Link}\r\n                to={`searchPage?page=${item.page}`}\r\n                {...item}\r\n              />\r\n            )}\r\n          />\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n  return {\r\n    devices: state.devices.devices, //устройства\r\n    isLoadinDevice: state.devices.isLoadinDevice, //крутилка у стройств\r\n    isFetchErrorDevice: state.devices.isFetchErrorDevice, //ошибка устройств\r\n    name: state.devices.name, //имя для поиска\r\n    pageQty: state.devices.pageQty, //количества страниц\r\n    limit: state.devices.limit, //сколько устройств на странице\r\n    typeId: state.devices.typeId, // айдишник типа\r\n    brandId: state.devices.brandId, // айдишник брэнда\r\n  };\r\n};\r\nexport default connect<\r\n  MapStateToPropsType,\r\n  MapDispathPropsType,\r\n  unknown, // личные пропсы\r\n  RootStateType\r\n>(mapStateToProps, { getDevices })(DeleteContainer);\r\n"]},"metadata":{},"sourceType":"module"}