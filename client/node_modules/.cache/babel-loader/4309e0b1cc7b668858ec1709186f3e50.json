{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\components\\\\DeviceProperty.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport Button from '@material-ui/core/Button'; //типизация данных\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//схема валидации---------------------\nconst schema = yup.object().shape({}); //-----------------------------------------\n\nconst DeviceProperty = () => {\n  _s();\n\n  const {\n    handleSubmit,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: 'onChange'\n  }); // получение данных из формы и отправка на сервак(авторизация или регистрация)\n\n  const onSubmit = data => {\n    console.log('Отправлено:', data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\" //className={classes.button}\n      ,\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0435 \\u0441\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"title\",\n          control: control,\n          defaultValue: \"\",\n          render: ({\n            field\n          }) => {\n            var _errors$title;\n\n            return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n              required: true,\n              fullWidth: true,\n              id: \"title\",\n              label: \" \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \",\n              autoFocus: true,\n              error: !!errors.title,\n              helperText: errors.title ? (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 7,\n        children: /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"description\",\n          control: control,\n          defaultValue: \"\",\n          render: ({\n            field\n          }) => {\n            var _errors$description;\n\n            return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n              required: true,\n              fullWidth: true,\n              id: \"description\",\n              label: \" \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \",\n              multiline: true,\n              error: !!errors.description,\n              helperText: errors.description ? (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 2,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(HighlightOffIcon, {\n            style: {\n              fontSize: 30\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeviceProperty, \"9JAYldp2EVuH7/5pkO1XuGJVh14=\", false, function () {\n  return [useForm];\n});\n\n_c = DeviceProperty;\nexport default DeviceProperty;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeviceProperty\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/components/DeviceProperty.tsx"],"names":["React","useForm","Controller","yupResolver","yup","Grid","TextField","IconButton","HighlightOffIcon","Button","schema","object","shape","DeviceProperty","handleSubmit","control","formState","errors","resolver","mode","onSubmit","data","console","log","field","title","message","description","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useForm, SubmitHandler, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n//типизация данных\r\ntype InfoType = {\r\n  title: string;\r\n  description: string;\r\n};\r\n\r\n//схема валидации---------------------\r\nconst schema = yup.object().shape({});\r\n//-----------------------------------------\r\n\r\nconst DeviceProperty = () => {\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n    mode: 'onChange',\r\n  });\r\n  // получение данных из формы и отправка на сервак(авторизация или регистрация)\r\n  const onSubmit: SubmitHandler<InfoType[]> = (data: InfoType[]): void => {\r\n    console.log('Отправлено:', data);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n\r\n        //className={classes.button}\r\n      >\r\n        Добавить новое свойство\r\n      </Button>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={3}>\r\n          <Controller\r\n            name=\"title\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field }) => (\r\n              <TextField\r\n                {...field}\r\n                required\r\n                fullWidth\r\n                id=\"title\"\r\n                label=\" название \"\r\n                autoFocus\r\n                error={!!errors.title}\r\n                helperText={errors.title ? errors.title?.message : null}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={7}>\r\n          <Controller\r\n            name=\"description\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field }) => (\r\n              <TextField\r\n                {...field}\r\n                required\r\n                fullWidth\r\n                id=\"description\"\r\n                label=\" описание \"\r\n                multiline\r\n                error={!!errors.description}\r\n                helperText={\r\n                  errors.description ? errors.description?.message : null\r\n                }\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={2}>\r\n          <IconButton>\r\n            <HighlightOffIcon style={{ fontSize: 30 }} />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default DeviceProperty;\r\n"]},"metadata":{},"sourceType":"module"}