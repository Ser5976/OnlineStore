{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\components\\\\DeviceContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Grid, Typography, Divider } from '@material-ui/core';\nimport Masonry from 'react-masonry-css'; // контейнерный компонент для стиля(расположение элементов)\n\nimport Device from './Device';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useHistory } from 'react-router-dom';\nimport byk1 from '../img/byk1.jpg';\nimport planshet1 from '../img/planshet1.jpg';\nimport reclama1 from '../img/reclama1.jpg'; //----типизация пропсов----\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//-------------------------\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  },\n  jumbo2: {\n    backgroundImage: \"url('/images/os5.png')\",\n    backgroundRepeat: 'no-repeat fixed bottom',\n    backgroundSize: 'cover',\n    color: '#efefef',\n    height: '400px',\n    position: 'relative',\n    zIndex: -2,\n    top: 0\n  },\n  jumbo: {\n    backgroundImage: \"url('/images/os9.png')\",\n    backgroundRepeat: 'no-repeat fixed bottom',\n    backgroundSize: 'cover',\n    color: '#efefef',\n    height: '400px',\n    position: 'relative',\n    zIndex: -2,\n    top: 0\n  },\n  overlay: {\n    backgroundColor: '#000',\n    opacity: 0.5,\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    zIndex: -1\n  },\n  imageContainer: {\n    display: 'none',\n    '@media (min-width:600px)': {\n      marginTop: '20px',\n      display: 'flex'\n    }\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'initial'\n  }\n}));\nconst breakpoints = {\n  default: 3,\n  1100: 2,\n  700: 1\n}; // это для Masonry,компонент регулирет расположение карточек(отдельно установлен)\n\nconst DeviceContainer = ({\n  devices,\n  // устройства\n  types,\n  // типы устройств\n  setTypeId,\n  // запись типа устройства в стейт\n  setBrandId,\n  //запись брэнда устройства в стейт\n  auth,\n  isAuth,\n  removeDevice\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory(); //запись выбранного типа устройства в стейт и удаление существующего брэнда из стейта\n\n  const handleDevice = id => {\n    history.push(`/profileType/${id}`);\n    setTypeId(id);\n    setBrandId(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.imageContainer,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.jumbo2,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.overlay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.jumbo,\n          style: {\n            marginRight: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.overlay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 10,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              marginTop: '115px',\n              fontWeight: 'bold'\n            },\n            children: [' ', \"\\u041A\\u0430\\u0442\\u0430\\u043B\\u043E\\u0433 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            component: \"nav\",\n            \"aria-label\": \"main mailbox folders\",\n            children: types && types.map(type => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  onClick: () => {\n                    handleDevice(type._id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: type.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 23\n                }, this)]\n              }, type._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: reclama1,\n              style: {\n                height: '200px',\n                width: 'auto',\n                marginTop: '25px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: planshet1,\n              style: {\n                height: '205px',\n                width: 'auto',\n                marginTop: '25px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: byk1,\n              style: {\n                height: '205px',\n                width: 'auto',\n                marginTop: '25px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: false,\n          sm: 9,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            style: {\n              marginTop: '50px'\n            },\n            children: [' ', \"\\u0412\\u0441\\u0435 \\u0442\\u043E\\u0432\\u0430\\u0440\\u044B\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Masonry, {\n            breakpointCols: breakpoints,\n            className: \"my-masonry-grid\",\n            columnClassName: \"my-masonry-grid_column\",\n            children: devices.map(item => {\n              return /*#__PURE__*/_jsxDEV(Device, {\n                item: item,\n                auth: auth,\n                isAuth: isAuth,\n                removeDevice: removeDevice\n              }, Math.random(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DeviceContainer, \"cXZz/rbrhPrjL6gJaTc75NCtuak=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = DeviceContainer;\nexport default DeviceContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeviceContainer\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/components/DeviceContainer.tsx"],"names":["React","makeStyles","Container","Grid","Typography","Divider","Masonry","Device","List","ListItem","ListItemText","useHistory","byk1","planshet1","reclama1","useStyles","theme","root","padding","spacing","jumbo2","backgroundImage","backgroundRepeat","backgroundSize","color","height","position","zIndex","top","jumbo","overlay","backgroundColor","opacity","bottom","left","right","imageContainer","display","marginTop","link","textDecoration","breakpoints","default","DeviceContainer","devices","types","setTypeId","setBrandId","auth","isAuth","removeDevice","classes","history","handleDevice","id","push","marginRight","fontWeight","map","type","_id","name","width","item","Math","random"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Container, Grid, Typography, Divider } from '@material-ui/core';\r\nimport Masonry from 'react-masonry-css'; // контейнерный компонент для стиля(расположение элементов)\r\nimport Device from './Device';\r\nimport { DeviceType } from '../store/reducer/deviceReducer'; //типизация устройств\r\nimport { AuthReducerType } from '../store/reducer/authReducer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport {\r\n  TypeDeviceType, // типизация типов устройст\r\n  setBrandIdActionType, //типизация экшена запись брэнда в стейт\r\n  setTypeIdActionType, //типизация экшена запись типа в стейт\r\n} from '../store/reducer/deviceReducer';\r\nimport byk1 from '../img/byk1.jpg';\r\nimport planshet1 from '../img/planshet1.jpg';\r\nimport reclama1 from '../img/reclama1.jpg';\r\n\r\n//----типизация пропсов----\r\ntype PropsType = {\r\n  devices: DeviceType[];\r\n  types: TypeDeviceType[];\r\n  setTypeId: (data: string | null) => setTypeIdActionType;\r\n  setBrandId: (data: string | null) => setBrandIdActionType;\r\n\r\n  auth: AuthReducerType;\r\n  isAuth: boolean;\r\n  removeDevice: (id: string | undefined) => void;\r\n};\r\n//-------------------------\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  jumbo2: {\r\n    backgroundImage: \"url('/images/os5.png')\",\r\n    backgroundRepeat: 'no-repeat fixed bottom',\r\n    backgroundSize: 'cover',\r\n    color: '#efefef',\r\n    height: '400px',\r\n    position: 'relative',\r\n    zIndex: -2,\r\n    top: 0,\r\n  },\r\n  jumbo: {\r\n    backgroundImage: \"url('/images/os9.png')\",\r\n    backgroundRepeat: 'no-repeat fixed bottom',\r\n    backgroundSize: 'cover',\r\n    color: '#efefef',\r\n    height: '400px',\r\n    position: 'relative',\r\n    zIndex: -2,\r\n    top: 0,\r\n  },\r\n  overlay: {\r\n    backgroundColor: '#000',\r\n    opacity: 0.5,\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    zIndex: -1,\r\n  },\r\n  imageContainer: {\r\n    display: 'none',\r\n    '@media (min-width:600px)': {\r\n      marginTop: '20px',\r\n      display: 'flex',\r\n    },\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'initial',\r\n  },\r\n}));\r\n\r\nconst breakpoints = {\r\n  default: 3,\r\n  1100: 2,\r\n  700: 1,\r\n}; // это для Masonry,компонент регулирет расположение карточек(отдельно установлен)\r\nconst DeviceContainer: React.FC<PropsType> = ({\r\n  devices, // устройства\r\n  types, // типы устройств\r\n  setTypeId, // запись типа устройства в стейт\r\n  setBrandId, //запись брэнда устройства в стейт\r\n\r\n  auth,\r\n  isAuth,\r\n  removeDevice,\r\n}) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //запись выбранного типа устройства в стейт и удаление существующего брэнда из стейта\r\n  const handleDevice = (id: string) => {\r\n    history.push(`/profileType/${id}`);\r\n    setTypeId(id);\r\n    setBrandId(null);\r\n  };\r\n  return (\r\n    <>\r\n      <Grid container className={classes.imageContainer}>\r\n        <Grid item sm={6}>\r\n          <Container maxWidth=\"md\">\r\n            <div className={classes.jumbo2}>\r\n              <div className={classes.overlay}></div>\r\n            </div>\r\n          </Container>\r\n        </Grid>\r\n        <Grid item sm={6}>\r\n          <div className={classes.jumbo} style={{ marginRight: '20px' }}>\r\n            <div className={classes.overlay}></div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={10}>\r\n          <Grid item xs={12} sm={3}>\r\n            <Typography style={{ marginTop: '115px', fontWeight: 'bold' }}>\r\n              {' '}\r\n              Каталог товаров\r\n            </Typography>\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n              {types &&\r\n                types.map((type) => {\r\n                  return (\r\n                    <div key={type._id}>\r\n                      <ListItem\r\n                        button\r\n                        onClick={() => {\r\n                          handleDevice(type._id);\r\n                        }}\r\n                      >\r\n                        <ListItemText primary={type.name} />\r\n                      </ListItem>\r\n                      <Divider />\r\n                    </div>\r\n                  );\r\n                })}\r\n            </List>\r\n            <div>\r\n              <img\r\n                src={reclama1}\r\n                style={{ height: '200px', width: 'auto', marginTop: '25px' }}\r\n              />\r\n              <img\r\n                src={planshet1}\r\n                style={{ height: '205px', width: 'auto', marginTop: '25px' }}\r\n              />\r\n              <img\r\n                src={byk1}\r\n                style={{ height: '205px', width: 'auto', marginTop: '25px' }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={false} sm={9}>\r\n            <Typography variant=\"h6\" style={{ marginTop: '50px' }}>\r\n              {' '}\r\n              Все товары\r\n            </Typography>\r\n            <Divider />\r\n            <Masonry\r\n              breakpointCols={breakpoints}\r\n              className=\"my-masonry-grid\"\r\n              columnClassName=\"my-masonry-grid_column\"\r\n            >\r\n              {devices.map((item) => {\r\n                return (\r\n                  <Device\r\n                    item={item}\r\n                    key={Math.random()}\r\n                    auth={auth}\r\n                    isAuth={isAuth}\r\n                    removeDevice={removeDevice}\r\n                  />\r\n                );\r\n              })}\r\n            </Masonry>{' '}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeviceContainer;\r\n"]},"metadata":{},"sourceType":"module"}