{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\pages\\\\SearchPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Box, Container, Divider, Typography, makeStyles, createStyles } from '@material-ui/core';\nimport { useHistory } from 'react-router';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n//типизация данных\nimport { //запрос на получение устройств\n//запрос на получение типов\nremoveDevice //удаление брэнда\n} from '../action/deviceAction';\nimport DeleteDevice from '../components/DeleteDevice';\nimport ActiveLastBreadcrumb from '../components/ActiveLastBreadcrumb';\nimport { connect } from 'react-redux'; //типизация--------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//-----------------------------------------\nconst useStyles = makeStyles(theme => createStyles({\n  textTitle: {\n    marginTop: '25px'\n  }\n}));\n\nconst DeleteContainer = ({\n  devices,\n  isLoadinDevice,\n  isFetchErrorDevice\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory(); //для изменения строки запроса\n  //console.log('история', history);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        margin: '25px'\n      },\n      children: /*#__PURE__*/_jsxDEV(ActiveLastBreadcrumb, {\n        name: \"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442 \\u043F\\u043E\\u0438\\u0441\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        align: \"center\",\n        children: \"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442 \\u043F\\u043E\\u0438\\u0441\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), isFetchErrorDevice ? /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        color: \"error\",\n        className: classes.textTitle,\n        children: \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this) : isLoadinDevice ? /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        style: {\n          height: window.innerHeight - 65.6\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : devices.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        className: classes.textTitle,\n        children: \"\\u041D\\u0438\\u0447\\u0435\\u0433\\u043E \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          style: {\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: devices && devices.map(item => {\n            return /*#__PURE__*/_jsxDEV(DeleteDevice, {\n              removeDevice: removeDevice,\n              item: item\n            }, Math.random(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DeleteContainer, \"cXZz/rbrhPrjL6gJaTc75NCtuak=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = DeleteContainer;\n\nconst mapStateToProps = state => {\n  return {\n    devices: state.devices.devices,\n    //устройства\n    isLoadinDevice: state.devices.isLoadinDevice,\n    //крутилка у стройств\n    isFetchErrorDevice: state.devices.isFetchErrorDevice //ошибка устройств\n\n  };\n};\n\nexport default connect(mapStateToProps, {})(DeleteContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteContainer\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/pages/SearchPage.tsx"],"names":["React","Box","Container","Divider","Typography","makeStyles","createStyles","useHistory","CircularProgress","removeDevice","DeleteDevice","ActiveLastBreadcrumb","connect","useStyles","theme","textTitle","marginTop","DeleteContainer","devices","isLoadinDevice","isFetchErrorDevice","classes","history","margin","height","window","innerHeight","length","display","flexDirection","map","item","Math","random","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Divider,\r\n  Typography,\r\n  Grid,\r\n  makeStyles,\r\n  createStyles,\r\n} from '@material-ui/core';\r\nimport { useLocation, useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { Pagination, PaginationItem } from '@material-ui/lab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { RootStateType } from '../store/store'; //типизиция всего стора\r\nimport {\r\n  setTypeId, //запись выбранного типа устройства\r\n  setBrandId, //запись выбранного  брэнда устройства\r\n  setAlertMessage, // изменения маркера получения сообщения о невозможности удаления типа/брэнда устройства\r\n} from '../store/reducer/deviceReducer';\r\nimport {\r\n  setTypeIdActionType,\r\n  setBrandIdActionType,\r\n} from '../store/reducer/deviceReducer'; // типизация экшенов\r\nimport {\r\n  DeviceType,\r\n  TypeDeviceType,\r\n  BrandType,\r\n} from '../store/reducer/deviceReducer'; //типизация данных\r\nimport {\r\n  getDevices, //запрос на получение устройств\r\n  getTypes, //запрос на получение типов\r\n  removeDevice, //удаление устройства\r\n  removeType, //удаление типа\r\n  removeBrand, //удаление брэнда\r\n} from '../action/deviceAction';\r\nimport DeleteDevice from '../components/DeleteDevice';\r\nimport AlertMessage from '../components/AlertMessage';\r\nimport ActiveLastBreadcrumb from '../components/ActiveLastBreadcrumb';\r\nimport TypeBarDelete from '../components/TypeBarDelete';\r\nimport { connect } from 'react-redux';\r\n\r\n//типизация--------------------------------\r\ntype MapStateToPropsType = {\r\n  devices: DeviceType[];\r\n  isLoadinDevice: boolean;\r\n  isFetchErrorDevice: boolean;\r\n};\r\ntype MapDispathPropsType = {};\r\n\r\ntype PropsType = MapDispathPropsType & MapStateToPropsType;\r\n//-----------------------------------------\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    textTitle: {\r\n      marginTop: '25px',\r\n    },\r\n  })\r\n);\r\n\r\nconst DeleteContainer: React.FC<PropsType> = ({\r\n  devices,\r\n  isLoadinDevice,\r\n  isFetchErrorDevice,\r\n}) => {\r\n  const classes = useStyles();\r\n  const history = useHistory(); //для изменения строки запроса\r\n  //console.log('история', history);\r\n\r\n  return (\r\n    <>\r\n      <Box style={{ margin: '25px' }}>\r\n        <ActiveLastBreadcrumb name=\"Результат поиска\" />\r\n      </Box>\r\n      <Container maxWidth=\"md\">\r\n        <Typography component=\"h1\" variant=\"h5\" align=\"center\">\r\n          Результат поиска\r\n        </Typography>\r\n\r\n        <Divider />\r\n        {isFetchErrorDevice ? (\r\n          <Typography\r\n            align=\"center\"\r\n            color=\"error\"\r\n            className={classes.textTitle}\r\n          >\r\n            Что-то пошло не так!\r\n          </Typography>\r\n        ) : isLoadinDevice ? (\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            style={{ height: window.innerHeight - 65.6 }}\r\n          >\r\n            <CircularProgress />\r\n          </Box>\r\n        ) : devices.length === 0 ? (\r\n          <Typography align=\"center\" className={classes.textTitle}>\r\n            Ничего не найдено!\r\n          </Typography>\r\n        ) : (\r\n          <>\r\n            <Box style={{ display: 'flex', flexDirection: 'column' }}>\r\n              {devices &&\r\n                devices.map((item) => {\r\n                  return (\r\n                    <DeleteDevice\r\n                      removeDevice={removeDevice}\r\n                      item={item}\r\n                      key={Math.random()}\r\n                    />\r\n                  );\r\n                })}\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n  return {\r\n    devices: state.devices.devices, //устройства\r\n    isLoadinDevice: state.devices.isLoadinDevice, //крутилка у стройств\r\n    isFetchErrorDevice: state.devices.isFetchErrorDevice, //ошибка устройств\r\n  };\r\n};\r\nexport default connect<\r\n  MapStateToPropsType,\r\n  MapDispathPropsType,\r\n  unknown, // личные пропсы\r\n  RootStateType\r\n>(\r\n  mapStateToProps,\r\n  {}\r\n)(DeleteContainer);\r\n"]},"metadata":{},"sourceType":"module"}