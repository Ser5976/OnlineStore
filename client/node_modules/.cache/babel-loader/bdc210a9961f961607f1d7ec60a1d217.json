{"ast":null,"code":"import axios from 'axios';\n//типизация всего стора\nimport { ModelUrls } from '../constants/url';\n//типизация экшенов устройств\nimport { setDevices, setTypes, setTotalCount } from '../store/reducer/deviceReducer'; // запись устройств в стейт\n// типизация санки\n\n// получение выбранных устройств и запись в стейт\nexport const getDevices = (typeId, brandId, limit, page) => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`${ModelUrls.DEVICES}`, {\n        params: {\n          typeId,\n          brandId,\n          limit,\n          page\n        }\n      });\n      console.log(response); //запись в стейт\n\n      dispatch(setDevices(response.data.device));\n      dispatch(setTotalCount(response.data.count));\n    } catch (e) {}\n  };\n}; // получение выбранных устройств и запись в стейт\n\nexport const getTypes = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(ModelUrls.TYPES);\n      console.log(response); //запись в стейт\n\n      dispatch(setTypes(response.data));\n    } catch (e) {}\n  };\n};","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/action/deviceAction.ts"],"names":["axios","ModelUrls","setDevices","setTypes","setTotalCount","getDevices","typeId","brandId","limit","page","dispatch","response","get","DEVICES","params","console","log","data","device","count","e","getTypes","TYPES"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEgD;AAChD,SAASC,SAAT,QAA0B,kBAA1B;AACkE;AAClE,SACEC,UADF,EAEEC,QAFF,EAGEC,aAHF,QAIO,gCAJP,C,CAIyC;AAEzC;;AAOA;AACA,OAAO,MAAMC,UAAU,GAAG,CACxBC,MADwB,EAExBC,OAFwB,EAGxBC,KAHwB,EAIxBC,IAJwB,KAKV;AACd,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAEX,SAAS,CAACY,OAAQ,EAA/B,EAAkC;AACvDC,QAAAA,MAAM,EAAE;AACNR,UAAAA,MADM;AAENC,UAAAA,OAFM;AAGNC,UAAAA,KAHM;AAINC,UAAAA;AAJM;AAD+C,OAAlC,CAAvB;AAQAM,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EATE,CAUF;;AACAD,MAAAA,QAAQ,CAACR,UAAU,CAACS,QAAQ,CAACM,IAAT,CAAcC,MAAf,CAAX,CAAR;AACAR,MAAAA,QAAQ,CAACN,aAAa,CAACO,QAAQ,CAACM,IAAT,CAAcE,KAAf,CAAd,CAAR;AACD,KAbD,CAaE,OAAOC,CAAP,EAAe,CAAE;AACpB,GAfD;AAgBD,CAtBM,C,CAuBP;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAiB;AACvC,SAAO,MAAOX,QAAP,IAAoB;AACzB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUX,SAAS,CAACqB,KAApB,CAAvB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAFE,CAGF;;AACAD,MAAAA,QAAQ,CAACP,QAAQ,CAACQ,QAAQ,CAACM,IAAV,CAAT,CAAR;AACD,KALD,CAKE,OAAOG,CAAP,EAAe,CAAE;AACpB,GAPD;AAQD,CATM","sourcesContent":["import axios from 'axios';\r\nimport { ThunkAction } from 'redux-thunk'; // для типизации санки\r\nimport { RootStateType } from '../store/store'; //типизация всего стора\r\nimport { ModelUrls } from '../constants/url';\r\nimport { DeviceAtionType } from '../store/reducer/deviceReducer'; //типизация экшенов устройств\r\nimport {\r\n  setDevices,\r\n  setTypes,\r\n  setTotalCount,\r\n} from '../store/reducer/deviceReducer'; // запись устройств в стейт\r\n\r\n// типизация санки\r\nexport type ThunkType = ThunkAction<\r\n  Promise<void>,\r\n  RootStateType,\r\n  unknown, //extraArgument\r\n  DeviceAtionType\r\n>;\r\n// получение выбранных устройств и запись в стейт\r\nexport const getDevices = (\r\n  typeId: string | null,\r\n  brandId: string | null,\r\n  limit: number,\r\n  page: number | null\r\n): ThunkType => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(`${ModelUrls.DEVICES}`, {\r\n        params: {\r\n          typeId,\r\n          brandId,\r\n          limit,\r\n          page,\r\n        },\r\n      });\r\n      console.log(response);\r\n      //запись в стейт\r\n      dispatch(setDevices(response.data.device));\r\n      dispatch(setTotalCount(response.data.count));\r\n    } catch (e: any) {}\r\n  };\r\n};\r\n// получение выбранных устройств и запись в стейт\r\nexport const getTypes = (): ThunkType => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(ModelUrls.TYPES);\r\n      console.log(response);\r\n      //запись в стейт\r\n      dispatch(setTypes(response.data));\r\n    } catch (e: any) {}\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}