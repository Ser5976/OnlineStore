{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\components\\\\AlertType.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//-------------------------\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst AlertType = ({\n  setTypeMessage\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Alert, {\n    onClose: () => {\n      setTypeMessage(false);\n    },\n    children: \"This is a success alert \\u2014 check it out!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AlertType, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = AlertType;\nexport default AlertType;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertType\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/components/AlertType.tsx"],"names":["React","makeStyles","Alert","useStyles","theme","root","width","marginTop","spacing","AlertType","setTypeMessage","classes"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAAkC,0BAAlC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;AAOA;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAmB;AAC9CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJ,iBAAa;AACXC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADA;AAFT;AADwC,CAAnB,CAAD,CAA5B;;AASA,MAAMC,SAA8B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAAA;;AAC7D,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AAEA,sBACE,QAAC,KAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbO,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAZD;;GAAMD,S;UACYN,S;;;KADZM,S;AAcN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { setTypeMessage } from '../store/reducer/deviceReducer';\r\n\r\n//----типизация пропсов----\r\ntype PropsType = {\r\n  setTypeMessage: (data: boolean) => void;\r\n};\r\n//-------------------------\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst AlertType: React.FC<PropsType> = ({ setTypeMessage }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Alert\r\n      onClose={() => {\r\n        setTypeMessage(false);\r\n      }}\r\n    >\r\n      This is a success alert — check it out!\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default AlertType;\r\n"]},"metadata":{},"sourceType":"module"}