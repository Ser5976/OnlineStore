{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\pages\\\\Content.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TypeBar from '../components/TypeBar';\nimport DeviceContainer from '../components/DeviceContainer';\n//типизиция всего стора\nimport { setTypeId, //запись выбранного типа устройства\nsetBrandId, //запись выбранного  брэнда устройства\nsetCurrentPage //запись текущей страницы\n} from '../store/reducer/deviceReducer';\nimport { getDevices } from '../action/deviceAction'; //запрос на получение устройств\n\nimport { connect } from 'react-redux'; //типизация--------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//-----------------------------------------\nconst Content = ({\n  getDevices,\n  setTypeId,\n  setBrandId,\n  setCurrentPage\n}) => {\n  _s();\n\n  useEffect(() => {\n    getDevices(null, null, 5, 1); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(TypeBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeviceContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Content, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Content;\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default connect(mapStateToProps, {\n  getDevices,\n  setTypeId,\n  setBrandId,\n  setCurrentPage\n})(Content);\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/pages/Content.tsx"],"names":["React","useEffect","Grid","TypeBar","DeviceContainer","setTypeId","setBrandId","setCurrentPage","getDevices","connect","Content","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACgD;AAChD,SACEC,SADF,EACa;AACXC,UAFF,EAEc;AACZC,cAHF,CAGkB;AAHlB,OAIO,gCAJP;AAUA,SAASC,UAAT,QAA2B,wBAA3B,C,CAAqD;;AACrD,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;;;AAcA;AAEA,MAAMC,OAA4B,GAAG,CAAC;AACpCF,EAAAA,UADoC;AAEpCH,EAAAA,SAFoC;AAGpCC,EAAAA,UAHoC;AAIpCC,EAAAA;AAJoC,CAAD,KAK/B;AAAA;;AACJN,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU,CAAC,IAAD,EAAO,IAAP,EAAa,CAAb,EAAgB,CAAhB,CAAV,CADc,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;AAKA,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAjBD;;GAAME,O;;KAAAA,O;;AAkBN,MAAMC,eAAe,GAAIC,KAAD,IAA+C;AACrE,SAAO,EAAP;AACD,CAFD;;AAGA,eAAeH,OAAO,CAKpBE,eALoB,EAKH;AAAEH,EAAAA,UAAF;AAAcH,EAAAA,SAAd;AAAyBC,EAAAA,UAAzB;AAAqCC,EAAAA;AAArC,CALG,CAAP,CAMbG,OANa,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TypeBar from '../components/TypeBar';\r\nimport DeviceContainer from '../components/DeviceContainer';\r\nimport { RootStateType } from '../store/store'; //типизиция всего стора\r\nimport {\r\n  setTypeId, //запись выбранного типа устройства\r\n  setBrandId, //запись выбранного  брэнда устройства\r\n  setCurrentPage, //запись текущей страницы\r\n} from '../store/reducer/deviceReducer';\r\nimport {\r\n  setCurrentPageActionType,\r\n  setTypeIdActionType,\r\n  setBrandIdActionType,\r\n} from '../store/reducer/deviceReducer';\r\nimport { getDevices } from '../action/deviceAction'; //запрос на получение устройств\r\nimport { connect } from 'react-redux';\r\n\r\n//типизация--------------------------------\r\ntype MapStateToPropsType = {};\r\ntype MapDispathPropsType = {\r\n  getDevices: (\r\n    typeId: string | null,\r\n    brandId: string | null,\r\n    limit: number,\r\n    currentPage: number | null\r\n  ) => void;\r\n  setTypeId: (data: string) => setTypeIdActionType;\r\n  setBrandId: (data: string) => setBrandIdActionType;\r\n  setCurrentPage: (data: number) => setCurrentPageActionType;\r\n};\r\ntype PropsType = MapDispathPropsType & MapStateToPropsType;\r\n//-----------------------------------------\r\n\r\nconst Content: React.FC<PropsType> = ({\r\n  getDevices,\r\n  setTypeId,\r\n  setBrandId,\r\n  setCurrentPage,\r\n}) => {\r\n  useEffect(() => {\r\n    getDevices(null, null, 5, 1);\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <Grid item container>\r\n      <TypeBar />\r\n      <DeviceContainer />\r\n    </Grid>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n  return {};\r\n};\r\nexport default connect<\r\n  MapStateToPropsType,\r\n  MapDispathPropsType,\r\n  unknown, // личные пропсы\r\n  RootStateType\r\n>(mapStateToProps, { getDevices, setTypeId, setBrandId, setCurrentPage })(\r\n  Content\r\n);\r\n"]},"metadata":{},"sourceType":"module"}