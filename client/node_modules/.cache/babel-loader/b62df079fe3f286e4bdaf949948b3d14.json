{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\components\\\\DeviceProperty.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport Button from '@material-ui/core/Button'; //типизация данных\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//схема валидации---------------------\nconst schema = yup.object().shape({\n  title: yup.string().required('Поле обязательное для заполнения'),\n  descrition: yup.string().required('Поле обязательное для заполнения')\n}); //-----------------------------------------\n\nconst DeviceProperty = () => {\n  _s();\n\n  const {\n    handleSubmit,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: 'onBlur'\n  }); // получение данных из формы и отправка на сервак(авторизация или регистрация)\n\n  const onSubmit = data => {\n    console.log('Отправлено:', data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      style: {\n        marginBottom: 15\n      } //className={classes.button}\n      ,\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0435 \\u0441\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"title\",\n            control: control,\n            defaultValue: \"\",\n            render: ({\n              field\n            }) => {\n              var _errors$title;\n\n              return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                required: true,\n                fullWidth: true,\n                id: \"title\",\n                label: \" \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \",\n                autoFocus: true,\n                error: !!errors.title,\n                helperText: errors.title ? (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 7,\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"description\",\n            control: control,\n            defaultValue: \"\",\n            render: ({\n              field\n            }) => {\n              var _errors$description;\n\n              return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                required: true,\n                fullWidth: true,\n                id: \"description\",\n                label: \" \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \",\n                multiline: true,\n                error: !!errors.description,\n                helperText: errors.description ? (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(HighlightOffIcon, {\n              style: {\n                fontSize: 30\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeviceProperty, \"9JAYldp2EVuH7/5pkO1XuGJVh14=\", false, function () {\n  return [useForm];\n});\n\n_c = DeviceProperty;\nexport default DeviceProperty;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeviceProperty\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/components/DeviceProperty.tsx"],"names":["React","useForm","Controller","yupResolver","yup","Grid","TextField","IconButton","HighlightOffIcon","Button","schema","object","shape","title","string","required","descrition","DeviceProperty","handleSubmit","control","formState","errors","resolver","mode","onSubmit","data","console","log","marginBottom","field","message","description","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useForm, SubmitHandler, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n//типизация данных\r\ntype InfoType = {\r\n  title: string;\r\n  description: string;\r\n};\r\n\r\n//схема валидации---------------------\r\nconst schema = yup.object().shape({\r\n  title: yup.string().required('Поле обязательное для заполнения'),\r\n  descrition: yup.string().required('Поле обязательное для заполнения'),\r\n});\r\n//-----------------------------------------\r\n\r\nconst DeviceProperty = () => {\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n    mode: 'onBlur',\r\n  });\r\n  // получение данных из формы и отправка на сервак(авторизация или регистрация)\r\n  const onSubmit: SubmitHandler<InfoType[]> = (data: InfoType[]): void => {\r\n    console.log('Отправлено:', data);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Button\r\n        color=\"primary\"\r\n        style={{ marginBottom: 15 }}\r\n\r\n        //className={classes.button}\r\n      >\r\n        Добавить новое свойство\r\n      </Button>\r\n      <form noValidate onSubmit={handleSubmit(onSubmit)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={3}>\r\n            <Controller\r\n              name=\"title\"\r\n              control={control}\r\n              defaultValue=\"\"\r\n              render={({ field }) => (\r\n                <TextField\r\n                  {...field}\r\n                  required\r\n                  fullWidth\r\n                  id=\"title\"\r\n                  label=\" название \"\r\n                  autoFocus\r\n                  error={!!errors.title}\r\n                  helperText={errors.title ? errors.title?.message : null}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={7}>\r\n            <Controller\r\n              name=\"description\"\r\n              control={control}\r\n              defaultValue=\"\"\r\n              render={({ field }) => (\r\n                <TextField\r\n                  {...field}\r\n                  required\r\n                  fullWidth\r\n                  id=\"description\"\r\n                  label=\" описание \"\r\n                  multiline\r\n                  error={!!errors.description}\r\n                  helperText={\r\n                    errors.description ? errors.description?.message : null\r\n                  }\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <IconButton>\r\n              <HighlightOffIcon style={{ fontSize: 30 }} />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n        <Button type=\"submit\">Отправить</Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default DeviceProperty;\r\n"]},"metadata":{},"sourceType":"module"}