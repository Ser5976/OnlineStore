{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\online-store\\\\client\\\\src\\\\components\\\\TypeBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 20,\n    border: '1px solid',\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nconst TypeBar = () => {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false); // для вложенного списа\n\n  const [indexActiv, setIndexActiv] = useState(null); //чтобы не раскрывался весь список\n\n  const handleClick = index => {\n    setIndexActiv(index);\n    setOpen(!open);\n  }; // управление вложенным списком\n\n\n  console.log(indexActiv);\n  console.log(open);\n  const brand = ['Samsung', 'Lenovo', 'Acer'];\n  const device = ['Смартфоны', 'Планшеты', 'Ноутбуки'];\n  return /*#__PURE__*/_jsxDEV(List, {\n    component: \"nav\",\n    children: device.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: 'green'\n            },\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TypeBar, \"oc4jZmA0ge7Njxw6FWQQLOyh1RE=\", false, function () {\n  return [useStyles];\n});\n\n_c = TypeBar;\nexport default TypeBar;\n{\n  /* <Collapse\r\n  in={indexActiv === index && open }\r\n  timeout=\"auto\"\r\n  unmountOnExit\r\n  >\r\n  <List component=\"div\">\r\n  {brand.map((el) => {\r\n    return (\r\n      <ListItem button key={el}>\r\n        <ListItemText inset primary={el} />\r\n      </ListItem>\r\n    );\r\n  })}\r\n  </List>\r\n  </Collapse> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"TypeBar\");","map":{"version":3,"sources":["D:/Fullstack/online-store/client/src/components/TypeBar.tsx"],"names":["React","useState","makeStyles","List","Typography","ListItem","ListItemText","useStyles","theme","root","marginTop","border","backgroundColor","palette","background","paper","TypeBar","classes","open","setOpen","indexActiv","setIndexActiv","handleClick","index","console","log","brand","device","map","item","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAAkC,0BAAlC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAGA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAOC,YAAP,MAAyB,gCAAzB;;AAGA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAmB;AAC9CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,MAAM,EAAE,WAFJ;AAGJC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHtC;AADwC,CAAnB,CAAD,CAA5B;;AAQA,MAAMC,OAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,KAAD,CAAhC,CAF8B,CAEW;;AACzC,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAgB,IAAhB,CAA5C,CAH8B,CAGqC;;AAEnE,QAAMqB,WAAW,GAAIC,KAAD,IAA0B;AAC5CF,IAAAA,aAAa,CAACE,KAAD,CAAb;AACAJ,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAHD,CAL8B,CAQ3B;;;AAEHM,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,QAAMQ,KAAK,GAAG,CAAC,SAAD,EAAY,QAAZ,EAAsB,MAAtB,CAAd;AACA,QAAMC,MAAM,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,UAA1B,CAAf;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA,cACGA,MAAM,CAACC,GAAP,CAAW,CAACC,IAAD,EAAON,KAAP,KAAiB;AAC3B,0BACE,QAAC,QAAD;AAAU,QAAA,MAAM,MAAhB;AAAA,+BACE,QAAC,YAAD;AACE,UAAA,iBAAiB,MADnB;AAEE,UAAA,OAAO,eACL,QAAC,UAAD;AAAY,YAAA,KAAK,EAAE;AAAEO,cAAAA,KAAK,EAAE;AAAT,aAAnB;AAAA,sBAAwCD;AAAxC;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADF,SAAsBA,IAAtB;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA9BD;;GAAMb,O;UACYT,S;;;KADZS,O;AAgCN,eAAeA,OAAf;AAEA;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    marginTop: 20,\r\n    border: '1px solid',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst TypeBar: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false); // для вложенного списа\r\n  const [indexActiv, setIndexActiv] = useState<null | number>(null); //чтобы не раскрывался весь список\r\n\r\n  const handleClick = (index: number | null) => {\r\n    setIndexActiv(index);\r\n    setOpen(!open);\r\n  }; // управление вложенным списком\r\n\r\n  console.log(indexActiv);\r\n  console.log(open);\r\n  const brand = ['Samsung', 'Lenovo', 'Acer'];\r\n  const device = ['Смартфоны', 'Планшеты', 'Ноутбуки'];\r\n  return (\r\n    <List component=\"nav\">\r\n      {device.map((item, index) => {\r\n        return (\r\n          <ListItem button key={item}>\r\n            <ListItemText\r\n              disableTypography\r\n              primary={\r\n                <Typography style={{ color: 'green' }}>{item}</Typography>\r\n              }\r\n            />\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default TypeBar;\r\n\r\n{\r\n  /* <Collapse\r\nin={indexActiv === index && open }\r\ntimeout=\"auto\"\r\nunmountOnExit\r\n>\r\n<List component=\"div\">\r\n  {brand.map((el) => {\r\n    return (\r\n      <ListItem button key={el}>\r\n        <ListItemText inset primary={el} />\r\n      </ListItem>\r\n    );\r\n  })}\r\n</List>\r\n</Collapse> */\r\n}\r\n"]},"metadata":{},"sourceType":"module"}