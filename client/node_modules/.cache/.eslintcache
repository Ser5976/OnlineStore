[{"D:\\Fullstack\\online-store\\client\\src\\reportWebVitals.js":"1","D:\\Fullstack\\online-store\\client\\src\\index.tsx":"2","D:\\Fullstack\\online-store\\client\\src\\App.tsx":"3","D:\\Fullstack\\online-store\\client\\src\\components\\Header.tsx":"4","D:\\Fullstack\\online-store\\client\\src\\router\\MyRouter.tsx":"5","D:\\Fullstack\\online-store\\client\\src\\pages\\Content.tsx":"6","D:\\Fullstack\\online-store\\client\\src\\components\\Logout.tsx":"7","D:\\Fullstack\\online-store\\client\\src\\components\\TypeBar.tsx":"8","D:\\Fullstack\\online-store\\client\\src\\components\\Device.tsx":"9","D:\\Fullstack\\online-store\\client\\src\\store\\store.ts":"10","D:\\Fullstack\\online-store\\client\\src\\store\\reducer\\authReducer.ts":"11","D:\\Fullstack\\online-store\\client\\src\\pages\\AuthContainer.tsx":"12","D:\\Fullstack\\online-store\\client\\src\\action\\authAction.ts":"13","D:\\Fullstack\\online-store\\client\\src\\components\\Copyright.tsx":"14","D:\\Fullstack\\online-store\\client\\src\\components\\FormLogin.tsx":"15","D:\\Fullstack\\online-store\\client\\src\\constants\\url.ts":"16","D:\\Fullstack\\online-store\\client\\src\\components\\DeviceContainer.tsx":"17","D:\\Fullstack\\online-store\\client\\src\\store\\reducer\\deviceReducer.ts":"18","D:\\Fullstack\\online-store\\client\\src\\action\\deviceAction.ts":"19","D:\\Fullstack\\online-store\\client\\src\\pages\\AddDevicesContainer.tsx":"20","D:\\Fullstack\\online-store\\client\\src\\components\\Step3.tsx":"21","D:\\Fullstack\\online-store\\client\\src\\components\\DeviceData.tsx":"22","D:\\Fullstack\\online-store\\client\\src\\components\\DeviceProperty.tsx":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":578,"mtime":1635882955665,"results":"26","hashOfConfig":"25"},{"size":250,"mtime":1635081268369,"results":"27","hashOfConfig":"25"},{"size":4427,"mtime":1637504514978,"results":"28","hashOfConfig":"25"},{"size":847,"mtime":1637480737260,"results":"29","hashOfConfig":"25"},{"size":7494,"mtime":1637503810627,"results":"30","hashOfConfig":"25"},{"size":1958,"mtime":1636313847964,"results":"31","hashOfConfig":"25"},{"size":6494,"mtime":1637089059668,"results":"32","hashOfConfig":"25"},{"size":1663,"mtime":1637403983924,"results":"33","hashOfConfig":"25"},{"size":577,"mtime":1636569802182,"results":"34","hashOfConfig":"25"},{"size":2592,"mtime":1636311069632,"results":"35","hashOfConfig":"25"},{"size":4129,"mtime":1636396393919,"results":"36","hashOfConfig":"25"},{"size":2414,"mtime":1636312765156,"results":"37","hashOfConfig":"25"},{"size":472,"mtime":1635964667548,"results":"38","hashOfConfig":"25"},{"size":4318,"mtime":1636300420944,"results":"39","hashOfConfig":"25"},{"size":278,"mtime":1637504217882,"results":"40","hashOfConfig":"25"},{"size":1163,"mtime":1637089470525,"results":"41","hashOfConfig":"25"},{"size":7379,"mtime":1638114717558,"results":"42","hashOfConfig":"25"},{"size":3268,"mtime":1637504625950,"results":"43","hashOfConfig":"25"},{"size":6037,"mtime":1638115661085,"results":"44","hashOfConfig":"25"},{"size":553,"mtime":1638115590887,"results":"45","hashOfConfig":"25"},{"size":7353,"mtime":1638115667043,"results":"46","hashOfConfig":"25"},{"size":4678,"mtime":1638116013908,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"rlz3tn",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Fullstack\\online-store\\client\\src\\reportWebVitals.js",[],["97","98"],"D:\\Fullstack\\online-store\\client\\src\\index.tsx",[],["99","100"],"D:\\Fullstack\\online-store\\client\\src\\App.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\Header.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\router\\MyRouter.tsx",["101"],"D:\\Fullstack\\online-store\\client\\src\\pages\\Content.tsx",["102"],"D:\\Fullstack\\online-store\\client\\src\\components\\Logout.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\TypeBar.tsx",["103"],"import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport {\r\n  TypeDeviceType,\r\n  setTypeIdActionType,\r\n  setBrandIdActionType,\r\n} from '../store/reducer/deviceReducer'; //типизация\r\n\r\n//----типизация пропсов----\r\ntype PropsType = {\r\n  types: TypeDeviceType[];\r\n  setTypeId: (data: string | null) => setTypeIdActionType;\r\n  setBrandId: (data: string | null) => setBrandIdActionType;\r\n};\r\n//-------------------------\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    marginTop: 20,\r\n    padding: '0px 5px',\r\n  },\r\n  listType: { paddingLeft: theme.spacing(5) },\r\n  activListType: { paddingLeft: theme.spacing(5), backgroundColor: '#e0e0e0' },\r\n  listBrand: {\r\n    paddingLeft: theme.spacing(9),\r\n    color: '#9e9e9e',\r\n  },\r\n  activListBrand: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst TypeBar: React.FC<PropsType> = ({ types, setTypeId, setBrandId }) => {\r\n  const classes = useStyles();\r\n  //создаём объект с булевыми значениями для управления элементами списка(открытие закрытие)(чтобы реагировать на каждый элемент)\r\n  let objType = {} as any;\r\n  for (let i = 0; i < types.length; i++) {\r\n    objType[i] = false;\r\n    // console.log(objType);\r\n  }\r\n\r\n  const [open, setOpen] = useState(objType); // открытие вложенного списа\r\n  const [activType, setActivType] = useState<null | number>(null); // выделение типа\r\n  const [activBrand, setActivBrand] = useState<null | string>(null); //выделение бренда\r\n  const [allDevice, setAllDevice] = useState(true); //выделение всех товаров\r\n  // console.log(open);\r\n  // выбор типа,открытие  вложенного спиская,снятие выбранного брэнда\r\n  const handleType = (index: number) => {\r\n    setActivType(index);\r\n    setOpen({ ...open, [index]: !open[index] }); //изменяем булевое значение для каждого элемента\r\n    setActivBrand(null); // снятие выбранного бренда\r\n  }; // выбор брэнда\r\n  const handleBrand = (id: string, index: number) => {\r\n    setActivBrand(id);\r\n    setActivType(index);\r\n  };\r\n\r\n  return (\r\n    <List component=\"nav\" className={classes.root}>\r\n      <ListItem\r\n        button\r\n        className={allDevice ? classes.activListType : classes.listType}\r\n        onClick={() => {\r\n          setTypeId(null); //удаление из стейта существующего типа\r\n          setBrandId(null); // удаление из стейта существующего брэнда\r\n          setOpen(objType); //закрытие списка\r\n          setActivType(null); //удаление выделения типа\r\n          setAllDevice(true); //выделение всех товаров\r\n        }}\r\n      >\r\n        <ListItemText\r\n          disableTypography\r\n          primary={\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              все товары\r\n            </Typography>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider />\r\n      {types.map((type, indexType) => {\r\n        return (\r\n          <div key={type._id}>\r\n            <ListItem\r\n              className={\r\n                activType === indexType\r\n                  ? classes.activListType\r\n                  : classes.listType\r\n              }\r\n              button\r\n              onClick={() => {\r\n                handleType(indexType); //управление типом\r\n                setTypeId(type._id); //запись в стейт выбранного типа\r\n                setBrandId(null); // удаление из стейта существующего брэнда\r\n                setAllDevice(false); // удаление выделения всех товаров\r\n              }}\r\n            >\r\n              <ListItemText\r\n                disableTypography\r\n                primary={\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    {type.name}\r\n                  </Typography>\r\n                }\r\n              />\r\n              {open[indexType] ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Divider />\r\n            <Collapse in={open[indexType]} timeout=\"auto\" unmountOnExit>\r\n              <List component=\"div\">\r\n                {type.brands.map((brand) => {\r\n                  return (\r\n                    <div key={brand._id}>\r\n                      <ListItem\r\n                        button\r\n                        className={classes.listBrand}\r\n                        onClick={() => {\r\n                          handleBrand(brand._id, indexType); //управление брэндом\r\n                          setTypeId(type._id); //запись в стейт выбранного типа\r\n                          setBrandId(brand._id); //запись в стейт выбранного брэнда\r\n                        }}\r\n                      >\r\n                        <ListItemText\r\n                          disableTypography\r\n                          className={\r\n                            activBrand === brand._id && activType === indexType\r\n                              ? classes.activListBrand\r\n                              : undefined\r\n                          }\r\n                          primary={\r\n                            <Typography variant=\"subtitle2\" gutterBottom>\r\n                              {brand.name}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                      </ListItem>\r\n                      <Divider />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </List>\r\n            </Collapse>\r\n          </div>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default TypeBar;\r\n","D:\\Fullstack\\online-store\\client\\src\\components\\Device.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\store\\store.ts",[],"D:\\Fullstack\\online-store\\client\\src\\store\\reducer\\authReducer.ts",[],"D:\\Fullstack\\online-store\\client\\src\\pages\\AuthContainer.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\action\\authAction.ts",[],"D:\\Fullstack\\online-store\\client\\src\\components\\Copyright.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\FormLogin.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\constants\\url.ts",[],"D:\\Fullstack\\online-store\\client\\src\\components\\DeviceContainer.tsx",["104"],"D:\\Fullstack\\online-store\\client\\src\\store\\reducer\\deviceReducer.ts",[],"D:\\Fullstack\\online-store\\client\\src\\action\\deviceAction.ts",[],"D:\\Fullstack\\online-store\\client\\src\\pages\\AddDevicesContainer.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\Step3.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\DeviceData.tsx",["105"],"D:\\Fullstack\\online-store\\client\\src\\components\\DeviceProperty.tsx",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":2,"column":25,"nodeType":"112","messageId":"113","endLine":2,"endColumn":33},{"ruleId":"110","severity":1,"message":"114","line":23,"column":22,"nodeType":"112","messageId":"113","endLine":23,"endColumn":30},{"ruleId":"110","severity":1,"message":"115","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":12},{"ruleId":"110","severity":1,"message":"116","line":13,"column":7,"nodeType":"112","messageId":"113","endLine":13,"endColumn":16},{"ruleId":"110","severity":1,"message":"117","line":77,"column":9,"nodeType":"112","messageId":"113","endLine":77,"endColumn":21},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'getTypes' is defined but never used.","'Grid' is defined but never used.","'useStyles' is assigned a value but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]