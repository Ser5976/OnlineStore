[{"D:\\Fullstack\\online-store\\client\\src\\reportWebVitals.js":"1","D:\\Fullstack\\online-store\\client\\src\\index.tsx":"2","D:\\Fullstack\\online-store\\client\\src\\App.tsx":"3","D:\\Fullstack\\online-store\\client\\src\\components\\Header.tsx":"4","D:\\Fullstack\\online-store\\client\\src\\router\\MyRouter.tsx":"5","D:\\Fullstack\\online-store\\client\\src\\pages\\Content.tsx":"6","D:\\Fullstack\\online-store\\client\\src\\components\\Logout.tsx":"7","D:\\Fullstack\\online-store\\client\\src\\components\\TypeBar.tsx":"8","D:\\Fullstack\\online-store\\client\\src\\components\\Device.tsx":"9","D:\\Fullstack\\online-store\\client\\src\\store\\store.ts":"10","D:\\Fullstack\\online-store\\client\\src\\store\\reducer\\authReducer.ts":"11","D:\\Fullstack\\online-store\\client\\src\\pages\\AuthContainer.tsx":"12","D:\\Fullstack\\online-store\\client\\src\\action\\authAction.ts":"13","D:\\Fullstack\\online-store\\client\\src\\components\\Copyright.tsx":"14","D:\\Fullstack\\online-store\\client\\src\\components\\FormLogin.tsx":"15","D:\\Fullstack\\online-store\\client\\src\\constants\\url.ts":"16","D:\\Fullstack\\online-store\\client\\src\\store\\reducer\\deviceReducer.ts":"17","D:\\Fullstack\\online-store\\client\\src\\action\\deviceAction.ts":"18","D:\\Fullstack\\online-store\\client\\src\\pages\\AddDevicesContainer.tsx":"19","D:\\Fullstack\\online-store\\client\\src\\components\\DeviceData.tsx":"20","D:\\Fullstack\\online-store\\client\\src\\components\\DeviceProperty.tsx":"21","D:\\Fullstack\\online-store\\client\\src\\components\\DevicePicture.tsx":"22","D:\\Fullstack\\online-store\\client\\src\\components\\ModalWindow.tsx":"23","D:\\Fullstack\\online-store\\client\\src\\components\\TypeListDelete.tsx":"24","D:\\Fullstack\\online-store\\client\\src\\components\\BrandListDelete.tsx":"25","D:\\Fullstack\\online-store\\client\\src\\components\\AlertMessage.tsx":"26","D:\\Fullstack\\online-store\\client\\src\\pages\\ProfileDevice.tsx":"27","D:\\Fullstack\\online-store\\client\\src\\components\\ImageList.tsx":"28","D:\\Fullstack\\online-store\\client\\src\\components\\Footer.tsx":"29","D:\\Fullstack\\online-store\\client\\src\\components\\ActiveLastBreadcrumb.tsx":"30","D:\\Fullstack\\online-store\\client\\src\\pages\\ProfileType.tsx":"31","D:\\Fullstack\\online-store\\client\\src\\components\\MenuBar.tsx":"32","D:\\Fullstack\\online-store\\client\\src\\components\\ImageContainer.tsx":"33","D:\\Fullstack\\online-store\\client\\src\\components\\MenuAdmin.tsx":"34","D:\\Fullstack\\online-store\\client\\src\\pages\\DeleteContainer.tsx":"35","D:\\Fullstack\\online-store\\client\\src\\components\\TypeBarDelete.tsx":"36","D:\\Fullstack\\online-store\\client\\src\\components\\DeleteDevice.tsx":"37","D:\\Fullstack\\online-store\\client\\src\\components\\SearchInput.tsx":"38","D:\\Fullstack\\online-store\\client\\src\\pages\\SearchPage.tsx":"39","D:\\Fullstack\\online-store\\client\\src\\pages\\Cart.tsx":"40","D:\\Fullstack\\online-store\\client\\src\\action\\basketAction.ts":"41","D:\\Fullstack\\online-store\\client\\src\\store\\reducer\\basketReducer.ts":"42","D:\\Fullstack\\online-store\\client\\src\\components\\CustomizedSnackbar.tsx":"43"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"45"},{"size":578,"mtime":1635882955665,"results":"46","hashOfConfig":"45"},{"size":250,"mtime":1635081268369,"results":"47","hashOfConfig":"45"},{"size":7018,"mtime":1643543179759,"results":"48","hashOfConfig":"45"},{"size":1474,"mtime":1641717342040,"results":"49","hashOfConfig":"45"},{"size":11452,"mtime":1643377726946,"results":"50","hashOfConfig":"45"},{"size":2418,"mtime":1643543152172,"results":"51","hashOfConfig":"45"},{"size":2036,"mtime":1640433006520,"results":"52","hashOfConfig":"45"},{"size":4418,"mtime":1643380010222,"results":"53","hashOfConfig":"45"},{"size":661,"mtime":1642536813699,"results":"54","hashOfConfig":"45"},{"size":3079,"mtime":1643466818368,"results":"55","hashOfConfig":"45"},{"size":4636,"mtime":1643542908945,"results":"56","hashOfConfig":"45"},{"size":2522,"mtime":1643143449308,"results":"57","hashOfConfig":"45"},{"size":472,"mtime":1635964667548,"results":"58","hashOfConfig":"45"},{"size":4318,"mtime":1641552919040,"results":"59","hashOfConfig":"45"},{"size":316,"mtime":1643362280849,"results":"60","hashOfConfig":"45"},{"size":14145,"mtime":1641326280619,"results":"61","hashOfConfig":"45"},{"size":9038,"mtime":1641324376368,"results":"62","hashOfConfig":"45"},{"size":9975,"mtime":1641324317841,"results":"63","hashOfConfig":"45"},{"size":8477,"mtime":1641324563929,"results":"64","hashOfConfig":"45"},{"size":5578,"mtime":1638626418261,"results":"65","hashOfConfig":"45"},{"size":4036,"mtime":1638612168447,"results":"66","hashOfConfig":"45"},{"size":3995,"mtime":1638981175473,"results":"67","hashOfConfig":"45"},{"size":3073,"mtime":1641134601018,"results":"68","hashOfConfig":"45"},{"size":2995,"mtime":1641134667489,"results":"69","hashOfConfig":"45"},{"size":806,"mtime":1639337002959,"results":"70","hashOfConfig":"45"},{"size":8484,"mtime":1643362130815,"results":"71","hashOfConfig":"45"},{"size":1492,"mtime":1639747481789,"results":"72","hashOfConfig":"45"},{"size":1275,"mtime":1641654365832,"results":"73","hashOfConfig":"45"},{"size":926,"mtime":1643543169626,"results":"74","hashOfConfig":"45"},{"size":12116,"mtime":1643377243296,"results":"75","hashOfConfig":"45"},{"size":5290,"mtime":1643541018734,"results":"76","hashOfConfig":"45"},{"size":1604,"mtime":1640427658823,"results":"77","hashOfConfig":"45"},{"size":3458,"mtime":1643469086682,"results":"78","hashOfConfig":"45"},{"size":11292,"mtime":1641240004601,"results":"79","hashOfConfig":"45"},{"size":7902,"mtime":1640762359024,"results":"80","hashOfConfig":"45"},{"size":2342,"mtime":1641134808617,"results":"81","hashOfConfig":"45"},{"size":3685,"mtime":1643541736025,"results":"82","hashOfConfig":"45"},{"size":8000,"mtime":1643377236320,"results":"83","hashOfConfig":"45"},{"size":7952,"mtime":1643441192613,"results":"84","hashOfConfig":"45"},{"size":2235,"mtime":1643359744343,"results":"85","hashOfConfig":"45"},{"size":2374,"mtime":1643539399967,"results":"86","hashOfConfig":"45"},{"size":1528,"mtime":1643362395051,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"rlz3tn",{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"93"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"93"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"93"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"93"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"93"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"93"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Fullstack\\online-store\\client\\src\\reportWebVitals.js",[],["182","183"],"D:\\Fullstack\\online-store\\client\\src\\index.tsx",[],["184","185"],"D:\\Fullstack\\online-store\\client\\src\\App.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\Header.tsx",["186"],"D:\\Fullstack\\online-store\\client\\src\\router\\MyRouter.tsx",["187","188"],"import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Header from '../components/Header';\r\nimport AuthContainer from '../pages/AuthContainer';\r\nimport Content from '../pages/Content';\r\nimport AddDevicesContainer from '../pages/AddDevicesContainer';\r\nimport ProfileDevice from '../pages/ProfileDevice';\r\nimport ProfileType from '../pages/ProfileType';\r\nimport Footer from '../components/Footer';\r\nimport DeleteContainer from '../pages/DeleteContainer';\r\nimport SearchPage from '../pages/SearchPage';\r\nimport Cart from '../pages/Cart';\r\n\r\nconst MyRouter: React.FC = () => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Header />\r\n\r\n      <Switch>\r\n        <Route component={Content} path=\"/\" exact />\r\n        <Route component={DeleteContainer} path=\"/deleteContainer\" exact />\r\n        <Route component={SearchPage} path=\"/searchPage\" exact />\r\n        <Route component={AuthContainer} path=\"/login\" exact />\r\n        <Route component={AuthContainer} path=\"/registration\" exact />\r\n        <Route\r\n          component={AddDevicesContainer}\r\n          path=\"/addDevicesContainer\"\r\n          exact\r\n        />\r\n        <Route component={ProfileDevice} path=\"/profileDevice/:id\" />\r\n        <Route component={ProfileType} path=\"/profileType/:id\" />\r\n        <Route component={Cart} path=\"/cart\" />\r\n      </Switch>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyRouter;\r\n","D:\\Fullstack\\online-store\\client\\src\\pages\\Content.tsx",["189","190","191"],"D:\\Fullstack\\online-store\\client\\src\\components\\Logout.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\TypeBar.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\Device.tsx",["192","193"],"D:\\Fullstack\\online-store\\client\\src\\store\\store.ts",[],"D:\\Fullstack\\online-store\\client\\src\\store\\reducer\\authReducer.ts",[],"D:\\Fullstack\\online-store\\client\\src\\pages\\AuthContainer.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\action\\authAction.ts",[],"D:\\Fullstack\\online-store\\client\\src\\components\\Copyright.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\FormLogin.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\constants\\url.ts",[],"D:\\Fullstack\\online-store\\client\\src\\store\\reducer\\deviceReducer.ts",[],"D:\\Fullstack\\online-store\\client\\src\\action\\deviceAction.ts",["194","195"],"import {\r\n  setIsLoadinDevice, //крутилка для устройств\r\n  setIsLoadinSelectedDevice, //крутилка для выбранного устройства\r\n  setIsLoadinTypes, //крутилка для типов\r\n  setIsLoadinSelectedType, //крутилка для выбранного типа\r\n  setFetchErrorDevice, //ошибка для устройств\r\n  setFetchErrorSelectedDevice, //ошибка для выбранного утсройства\r\n  setFetchErrorTypes, //ошибка для типов\r\n  setFetchErrorSelectedType, //ошибка для выбранного типа\r\n  setFetchErrorBrands, //ошибка загрузки брэндов\r\n  setDevices, // запись устройств в стейт\r\n  setSelectedDevice, // запись выбранного устройства в стейт\r\n  setTypes, // запись типов в стейт\r\n  setSelectedType, //запись выбранного типа устройства в стейт\r\n  setBrands, // запись брэндов\r\n  setPageQty, // запись количества страниц в стейт\r\n  addedDeviceType, //типизация добавленного устройства\r\n  setAddedDevice, // запись добавленного устройства в стейт\r\n  setAddedDeviceError, // изменения статуса ошибки добавленного устройства\r\n  setAlertMessage, // изменения маркера получения сообщения о невозможности удаления типа/брэнда устройства\r\n} from './../store/reducer/deviceReducer';\r\nimport axios from 'axios';\r\nimport { ThunkAction } from 'redux-thunk'; // для типизации санки\r\nimport { RootStateType } from '../store/store'; //типизация всего стора\r\nimport { ModelUrls } from '../constants/url';\r\nimport { DeviceAtionType } from '../store/reducer/deviceReducer'; //типизация экшенов устройств\r\n\r\n// типизация санки\r\nexport type ThunkType = ThunkAction<\r\n  Promise<void>,\r\n  RootStateType,\r\n  unknown, //extraArgument\r\n  DeviceAtionType\r\n>;\r\n// получение выбранных устройств и запись в стейт\r\nexport const getDevices = (\r\n  typeId: string | null,\r\n  brandId: string | null,\r\n  limit: number,\r\n  page: number,\r\n  name: string | null,\r\n  setPage: React.Dispatch<React.SetStateAction<number>>,\r\n  history: any\r\n): ThunkType => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setIsLoadinDevice(true));\r\n      const response = await axios.get(`${ModelUrls.DEVICES}`, {\r\n        params: {\r\n          typeId,\r\n          brandId,\r\n          limit,\r\n          page,\r\n          name,\r\n        },\r\n      });\r\n      // console.log(response);\r\n      //если число страниц меньше активной страницы,текущую страницу ставим 1\r\n      if (response.data.pageQty < page) {\r\n        setPage(1); //записываем текущую страницу в локальный стейт\r\n        history.replace(\r\n          `${\r\n            history.location.pathname === '/deleteContainer'\r\n              ? '/deleteContainer'\r\n              : `${history.location.pathname}`\r\n          }?page=1`\r\n        );\r\n      }\r\n      //запись в стейт\r\n      dispatch(setDevices(response.data.device));\r\n      dispatch(setPageQty(response.data.pageQty));\r\n    } catch (e) {\r\n      console.log(e);\r\n      dispatch(setFetchErrorDevice(true));\r\n      dispatch(setIsLoadinDevice(false));\r\n    }\r\n  };\r\n};\r\n// получение выбранного устройства\r\nexport const getSelectedDevice = (id: string): ThunkType => {\r\n  //console.log(id);\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setIsLoadinSelectedDevice(true));\r\n      const response = await axios.get(ModelUrls.DEVICES + '/' + id);\r\n      //запись в стейт\r\n      dispatch(setSelectedDevice(response.data));\r\n    } catch (e) {\r\n      console.log(e);\r\n      dispatch(setFetchErrorSelectedDevice(true));\r\n      dispatch(setIsLoadinSelectedDevice(false));\r\n    }\r\n  };\r\n};\r\n\r\n// получение типов устройств и запись в стейт\r\nexport const getTypes = (): ThunkType => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setIsLoadinTypes(true));\r\n      const response = await axios.get(ModelUrls.TYPES);\r\n      // console.log(response);\r\n      //запись в стейт\r\n      dispatch(setTypes(response.data));\r\n    } catch (e) {\r\n      console.log(e);\r\n      dispatch(setFetchErrorTypes(true));\r\n      dispatch(setIsLoadinTypes(false));\r\n    }\r\n  };\r\n};\r\n// получение типа выбранного устройства\r\nexport const getSelectedType = (id: string): ThunkType => {\r\n  //console.log(id);\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setIsLoadinSelectedType(true));\r\n      const response = await axios.get(ModelUrls.TYPES + '/' + id);\r\n      //console.log(response.data);\r\n      //запись в стейт\r\n      dispatch(setSelectedType(response.data));\r\n    } catch (e) {\r\n      console.log(e);\r\n      dispatch(setFetchErrorSelectedType(true));\r\n      dispatch(setIsLoadinSelectedType(false));\r\n    }\r\n  };\r\n};\r\n// получение брэндов и запись в стейт\r\nexport const getBrands = (): ThunkType => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(ModelUrls.BRANDS);\r\n      // console.log(response);\r\n      //запись в стейт\r\n      dispatch(setBrands(response.data));\r\n    } catch (e) {\r\n      console.log(e);\r\n      dispatch(setFetchErrorBrands(true));\r\n    }\r\n  };\r\n};\r\n// добавление устройства в базу данных ,обнуление стейта addedDevice,переход на главную страницу\r\nexport const addDevice = (data: any, history: any): ThunkType => {\r\n  //чтобы обнулить стейт\r\n  const copyAddedDevice: addedDeviceType = {\r\n    name: '',\r\n    price: '',\r\n    description: '',\r\n    picture: [],\r\n    info: [],\r\n    typeId: '',\r\n    brandId: '',\r\n  };\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.post(ModelUrls.DEVICES, data);\r\n      // console.log(response);\r\n      dispatch(setAddedDeviceError(false));\r\n      //обнуляем добавленное устройство в стейте\r\n      dispatch(setAddedDevice(copyAddedDevice));\r\n      dispatch(getTypes());\r\n      history.push('/');\r\n    } catch (e) {\r\n      console.log(e);\r\n      dispatch(setAddedDeviceError(true));\r\n    }\r\n  };\r\n};\r\n// добавление типа устройства в базу данных\r\nexport const addType = (\r\n  data: { name: string },\r\n  handleClose: () => void\r\n): ThunkType => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.post(ModelUrls.TYPES, data);\r\n      dispatch(setAddedDeviceError(false));\r\n      console.log(response);\r\n      dispatch(getTypes());\r\n      handleClose();\r\n    } catch (e) {\r\n      console.log(e);\r\n      dispatch(setAddedDeviceError(true));\r\n    }\r\n  };\r\n};\r\n// добавление брэнда устройства в базу данных\r\nexport const addBrand = (\r\n  data: { name: string },\r\n  handleClose: () => void\r\n): ThunkType => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.post(ModelUrls.BRANDS, data);\r\n      dispatch(setAddedDeviceError(false));\r\n      console.log(response);\r\n      dispatch(getBrands());\r\n      handleClose();\r\n    } catch (e) {\r\n      console.log(e);\r\n      dispatch(setAddedDeviceError(true));\r\n    }\r\n  };\r\n};\r\n// удаление  устройства\r\nexport const removeDevice = (id: string | undefined): ThunkType => {\r\n  console.log(id);\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.delete(ModelUrls.DEVICES + '/' + id);\r\n      window.location.reload();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n// удаление типа устройства\r\nexport const removeType = (id: string): ThunkType => {\r\n  console.log(id);\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.delete(ModelUrls.TYPES + '/' + id);\r\n      // console.log(response);\r\n      if (response.data.message) {\r\n        dispatch(setAlertMessage(response.data.message));\r\n      }\r\n      dispatch(getTypes());\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n// удаление брэнда устройства\r\nexport const removeBrand = (id: string): ThunkType => {\r\n  console.log(id);\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.delete(ModelUrls.BRANDS + '/' + id);\r\n      // console.log(response);\r\n      if (response.data.message) {\r\n        dispatch(setAlertMessage(response.data.message));\r\n      }\r\n      dispatch(getBrands());\r\n      dispatch(getTypes());\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n","D:\\Fullstack\\online-store\\client\\src\\pages\\AddDevicesContainer.tsx",["196"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//import Paper from '@material-ui/core/Paper';\r\nimport { useHistory } from 'react-router';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeviceData from '../components/DeviceData';\r\nimport DeviceProperty from '../components/DeviceProperty';\r\nimport DevicePicture from '../components/DevicePicture';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { RootStateType } from '../store/store'; //типизиция всего стора\r\nimport {\r\n  TypeDeviceType, //типизация типов\r\n  BrandType, //типизация брэндов\r\n  setAddedDevice, //экшен запись добавленного девайса в стейт\r\n  setAddedDeviceActionType, //типизация экшена\r\n  addedDeviceType, // типизация добавленного устройства\\\r\n  setAddedDeviceError, //изменения ошибки\r\n} from '../store/reducer/deviceReducer';\r\nimport { addDevice, addType, addBrand } from '../action/deviceAction';\r\nimport ModalWindow from '../components/ModalWindow';\r\nimport ActiveLastBreadcrumb from '../components/ActiveLastBreadcrumb';\r\nimport { connect } from 'react-redux';\r\nimport MenuAdmin from '../components/MenuAdmin';\r\n\r\n//типизация--------------------------------\r\ntype MapStateToPropsType = {\r\n  types: TypeDeviceType[];\r\n  brands: BrandType[];\r\n  addedDevice: addedDeviceType;\r\n  addedDeviceError: boolean;\r\n};\r\ntype MapDispathPropsType = {\r\n  setAddedDevice: (data: addedDeviceType) => setAddedDeviceActionType;\r\n  addDevice: (data: addedDeviceType, history: any) => void;\r\n  addType: (data: { name: string }, handleClose: () => void) => void;\r\n  addBrand: (data: { name: string }, handleClose: () => void) => void;\r\n  setAddedDeviceError: (data: boolean) => void;\r\n};\r\n\r\ntype PropsType = MapDispathPropsType & MapStateToPropsType;\r\n//-----------------------------------------\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  layout: {\r\n    width: 'auto',\r\n    paddingTop: theme.spacing(7),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  textTitle: {\r\n    marginBottom: '25px',\r\n  },\r\n}));\r\n\r\nconst steps = [\r\n  'Данные о товаре',\r\n  'Добавить изображения',\r\n  'Добавить новые данные',\r\n];\r\n\r\nconst AddDevicesContainer: React.FC<PropsType> = ({\r\n  types, //типы\r\n  brands, //брэнды\r\n  addedDevice, //добавленный девайс\r\n  setAddedDevice, //запись добавленного девайса в стейт\r\n  addDevice, //добавить устройства в базу данных\r\n  addType, //добавить тип устройства в базу данных\r\n  addBrand, //добавить брэнд устройства в базу данных\r\n  addedDeviceError, //ошибка добавленного устройства\r\n  setAddedDeviceError, //изменение ошибки\r\n}) => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  //степер\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  //открытие модального окна-------------------------------\r\n  //для типа\r\n  const [openType, setOpenType] = React.useState(false);\r\n  const handleOpenType = () => {\r\n    setOpenType(true);\r\n  };\r\n  const handleCloseType = () => {\r\n    setOpenType(false);\r\n  };\r\n  //для брэнда\r\n  const [openBrand, setOpenBrand] = React.useState(false);\r\n  const handleOpenBrand = () => {\r\n    setOpenBrand(true);\r\n  };\r\n  const handleCloseBrand = () => {\r\n    setOpenBrand(false);\r\n  };\r\n  //------------------------------------------------------------\r\n  const getStepContent = (step: number): JSX.Element => {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <>\r\n            <DeviceData\r\n              types={types}\r\n              brands={brands}\r\n              handleNext={handleNext}\r\n              setAddedDevice={setAddedDevice}\r\n              addedDevice={addedDevice}\r\n              handleOpenType={handleOpenType}\r\n              handleOpenBrand={handleOpenBrand}\r\n            />\r\n            <ModalWindow\r\n              handleClose={handleCloseType}\r\n              open={openType}\r\n              addData={addType}\r\n              title=\"тип\"\r\n              addedDeviceError={addedDeviceError}\r\n              setAddedDeviceError={setAddedDeviceError}\r\n            />\r\n            <ModalWindow\r\n              handleClose={handleCloseBrand}\r\n              open={openBrand}\r\n              addData={addBrand}\r\n              title=\"брэнд\"\r\n              addedDeviceError={addedDeviceError}\r\n              setAddedDeviceError={setAddedDeviceError}\r\n            />\r\n          </>\r\n        );\r\n      case 1:\r\n        return (\r\n          <DevicePicture\r\n            setAddedDevice={setAddedDevice}\r\n            addedDevice={addedDevice}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <DeviceProperty\r\n            handleNext={handleNext}\r\n            setAddedDevice={setAddedDevice}\r\n            addedDevice={addedDevice}\r\n            handleBack={handleBack}\r\n          />\r\n        );\r\n      default:\r\n        throw new Error('Unknown step');\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n  //отправка добаленного устройства  на сервак,используем FormData из за файлов,history чтобы вернуться на главную\r\n  const appendDevice = () => {\r\n    const { picture, price, description, name, typeId, brandId, info } =\r\n      addedDevice;\r\n    const formData: any = new FormData();\r\n    formData.append('price', price);\r\n    formData.append('name', name);\r\n    formData.append('description', description);\r\n    formData.append('typeId', typeId);\r\n    formData.append('brandId', brandId);\r\n    formData.append('info', JSON.stringify(info));\r\n    picture.forEach((file) => {\r\n      formData.append('picture', file);\r\n    });\r\n    addDevice(formData, history);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box style={{ margin: '25px' }}>\r\n        <ActiveLastBreadcrumb name=\"Добавить товар\" />\r\n      </Box>\r\n\r\n      <main className={classes.layout}>\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\" align=\"center\">\r\n            Добавить товар\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <React.Fragment>\r\n            {activeStep === steps.length ? (\r\n              <React.Fragment>\r\n                {addedDeviceError && (\r\n                  <Typography\r\n                    align=\"center\"\r\n                    color=\"error\"\r\n                    className={classes.textTitle}\r\n                  >\r\n                    Что-то пошло не так!\r\n                  </Typography>\r\n                )}\r\n                <Grid container component=\"main\">\r\n                  <Grid item xs={12} sm={6} style={{ padding: '5px 5px' }}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      fullWidth\r\n                      style={{ marginBottom: 15, fontSize: 12 }}\r\n                      onClick={() => {\r\n                        setActiveStep(0);\r\n                      }}\r\n                    >\r\n                      Отмена\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} style={{ padding: '5px 5px' }}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      fullWidth\r\n                      style={{ marginBottom: 15, fontSize: 12 }}\r\n                      onClick={appendDevice}\r\n                    >\r\n                      Сохранить\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>{getStepContent(activeStep)}</React.Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n  return {\r\n    types: state.devices.types,\r\n    brands: state.devices.brands,\r\n    addedDevice: state.devices.addedDevice,\r\n    addedDeviceError: state.devices.addedDeviceError,\r\n  };\r\n};\r\nexport default connect<\r\n  MapStateToPropsType,\r\n  MapDispathPropsType,\r\n  unknown, // личные пропсы\r\n  RootStateType\r\n>(mapStateToProps, {\r\n  setAddedDevice,\r\n  addDevice,\r\n  addType,\r\n  addBrand,\r\n  setAddedDeviceError,\r\n})(AddDevicesContainer);\r\n","D:\\Fullstack\\online-store\\client\\src\\components\\DeviceData.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\DeviceProperty.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\DevicePicture.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\ModalWindow.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\TypeListDelete.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\BrandListDelete.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\AlertMessage.tsx",["197"],"import React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n//----типизация пропсов----\r\ntype PropsType = {\r\n  setAlertMessage: (data: string | null) => void;\r\n  alertMessage: string | null;\r\n};\r\n//-------------------------\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst AlertMessage: React.FC<PropsType> = ({\r\n  setAlertMessage,\r\n  alertMessage,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Alert\r\n      severity=\"error\"\r\n      onClose={() => {\r\n        setAlertMessage(null);\r\n      }}\r\n    >\r\n      {alertMessage}\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default AlertMessage;\r\n","D:\\Fullstack\\online-store\\client\\src\\pages\\ProfileDevice.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\ImageList.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\Footer.tsx",["198","199","200"],"import React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Container, Box, Grid, Typography, Link } from '@material-ui/core';\r\nimport { StorefrontSharp } from '@material-ui/icons';\r\nimport Logo1 from '../img/logo1.png';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  appBar: {\r\n    marginTop: 'auto', //для футера, что бы прижать футер к низу страницы\r\n    paddingTop: 25,\r\n    height: 150,\r\n  },\r\n\r\n  login: {\r\n    fontFamily: 'Permanent Marker',\r\n    fontSize: '1.2rem',\r\n    '@media (min-width:600px)': {\r\n      fontSize: '2.5rem',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box bgcolor=\"#0047ae\" color=\"#e0e0e0\" className={classes.appBar}>\r\n      <Container\r\n        maxWidth=\"sm\"\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <Typography\r\n          align=\"center\"\r\n          style={{\r\n            display: 'flex',\r\n          }}\r\n          className={classes.login}\r\n        >\r\n          Online\r\n          <StorefrontSharp style={{ fontSize: '60px' }} />\r\n          Store\r\n        </Typography>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\nexport default Footer;\r\n","D:\\Fullstack\\online-store\\client\\src\\components\\ActiveLastBreadcrumb.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\pages\\ProfileType.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\MenuBar.tsx",["201"],"D:\\Fullstack\\online-store\\client\\src\\components\\ImageContainer.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\MenuAdmin.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\pages\\DeleteContainer.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\TypeBarDelete.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\components\\DeleteDevice.tsx",["202"],"import React from 'react';\r\nimport {\r\n  Button,\r\n  Typography,\r\n  Divider,\r\n  createStyles,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { DeviceType } from '../store/reducer/deviceReducer';\r\nimport { ROOT_URL } from '../constants/url';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//типизация----------------------\r\n\r\ntype PropsType = {\r\n  item: DeviceType; //типизация  выбранного устройства\r\n  removeDevice: (id: string | undefined) => void; // типизация удаление устройства\r\n};\r\n//---------------------------------\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      padding: '15px 0px 0px 15px',\r\n    },\r\n\r\n    content: {\r\n      flex: '1 0 auto',\r\n    },\r\n\r\n    media: {\r\n      height: 100,\r\n      cursor: 'pointer',\r\n      marginRight: 10,\r\n    },\r\n    button: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      paddingBottom: '5px',\r\n    },\r\n  })\r\n);\r\n\r\nconst DeleteDevice: React.FC<PropsType> = ({ item, removeDevice }) => {\r\n  const { name, picture, price } = item;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <div\r\n          className={classes.media}\r\n          onClick={() => {\r\n            history.push(`/profileDevice/${item._id}`);\r\n          }}\r\n        >\r\n          <img\r\n            src={`${ROOT_URL}/${picture[0]}`}\r\n            style={{ height: '100px', width: 'auto' }}\r\n          />\r\n        </div>\r\n\r\n        <div className={classes.content}>\r\n          <Typography component=\"h5\" variant=\"h5\">\r\n            {price} p\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n            {name}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n      <div className={classes.button}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => {\r\n            if (\r\n              window.confirm(`Вы действительно хотите удалить ${item.name}`)\r\n            ) {\r\n              removeDevice(item._id);\r\n            }\r\n          }}\r\n        >\r\n          Удалить\r\n        </Button>\r\n      </div>\r\n\r\n      <Divider />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteDevice;\r\n","D:\\Fullstack\\online-store\\client\\src\\components\\SearchInput.tsx",["203","204"],"D:\\Fullstack\\online-store\\client\\src\\pages\\SearchPage.tsx",[],"D:\\Fullstack\\online-store\\client\\src\\pages\\Cart.tsx",["205"],"D:\\Fullstack\\online-store\\client\\src\\action\\basketAction.ts",[],"D:\\Fullstack\\online-store\\client\\src\\store\\reducer\\basketReducer.ts",[],"D:\\Fullstack\\online-store\\client\\src\\components\\CustomizedSnackbar.tsx",[],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":148,"column":13,"nodeType":"212","endLine":148,"endColumn":75},{"ruleId":"213","severity":1,"message":"214","line":2,"column":25,"nodeType":"215","messageId":"216","endLine":2,"endColumn":33},{"ruleId":"213","severity":1,"message":"217","line":3,"column":8,"nodeType":"215","messageId":"216","endLine":3,"endColumn":12},{"ruleId":"210","severity":1,"message":"211","line":190,"column":15,"nodeType":"212","endLine":193,"endColumn":17},{"ruleId":"210","severity":1,"message":"211","line":194,"column":15,"nodeType":"212","endLine":197,"endColumn":17},{"ruleId":"210","severity":1,"message":"211","line":198,"column":15,"nodeType":"212","endLine":201,"endColumn":17},{"ruleId":"213","severity":1,"message":"218","line":12,"column":22,"nodeType":"215","messageId":"216","endLine":12,"endColumn":33},{"ruleId":"210","severity":1,"message":"211","line":95,"column":11,"nodeType":"212","endLine":98,"endColumn":13},{"ruleId":"213","severity":1,"message":"219","line":157,"column":13,"nodeType":"215","messageId":"216","endLine":157,"endColumn":21},{"ruleId":"213","severity":1,"message":"219","line":211,"column":13,"nodeType":"215","messageId":"216","endLine":211,"endColumn":21},{"ruleId":"213","severity":1,"message":"220","line":28,"column":8,"nodeType":"215","messageId":"216","endLine":28,"endColumn":17},{"ruleId":"213","severity":1,"message":"221","line":25,"column":9,"nodeType":"215","messageId":"216","endLine":25,"endColumn":16},{"ruleId":"213","severity":1,"message":"217","line":3,"column":26,"nodeType":"215","messageId":"216","endLine":3,"endColumn":30},{"ruleId":"213","severity":1,"message":"222","line":3,"column":44,"nodeType":"215","messageId":"216","endLine":3,"endColumn":48},{"ruleId":"213","severity":1,"message":"223","line":5,"column":8,"nodeType":"215","messageId":"216","endLine":5,"endColumn":13},{"ruleId":"213","severity":1,"message":"224","line":10,"column":8,"nodeType":"215","messageId":"216","endLine":10,"endColumn":15},{"ruleId":"210","severity":1,"message":"211","line":59,"column":11,"nodeType":"212","endLine":62,"endColumn":13},{"ruleId":"213","severity":1,"message":"218","line":2,"column":22,"nodeType":"215","messageId":"216","endLine":2,"endColumn":33},{"ruleId":"213","severity":1,"message":"225","line":18,"column":11,"nodeType":"215","messageId":"216","endLine":18,"endColumn":20},{"ruleId":"213","severity":1,"message":"226","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":19},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'useLocation' is defined but never used.","'response' is assigned a value but never used.","'MenuAdmin' is defined but never used.","'classes' is assigned a value but never used.","'Link' is defined but never used.","'Logo1' is defined but never used.","'Divider' is defined but never used.","'stateType' is defined but never used.","'useParams' is defined but never used.","no-global-assign","no-unsafe-negation"]